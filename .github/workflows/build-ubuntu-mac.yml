name: Build Ubuntu and MacOS


on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8]
        os: [ubuntu-latest, macOS-latest]

    steps:
    - uses: actions/checkout@v1

    - name: Setup Python environment
      uses: actions/setup-python@v1.1.1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install ubuntu dependencies
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        sudo apt-get update
        sudo apt-get install python${{ matrix.python-version }}-venv python${{ matrix.python-version }}-distutils git -y
        sudo apt-get install nodejs-dev node-gyp

    - name: Install Mac dependencies
      if: startsWith(matrix.os, 'mac')
      run: |
        brew update

    - name: Run install script
      env:
        INSTALL_PYTHON_VERSION: ${{ matrix.python-version }}
      run: |
        sh install.sh

    - name: Install timelord
      run: |
        . ./activate
        sh install-timelord.sh
        ./vdf_bench square_asm 400000

    - name: Install developer requirements
      run: |
        . ./activate
        venv/bin/python -m pip install -r requirements-dev.txt

    - name: Lint source with flake8
      run: |
        ./venv/bin/flake8 src

    - name: Lint source with mypy
      run: |
        ./venv/bin/mypy src tests

    - name: Build MacOS DMG in Catalina
      if: startsWith(matrix.os, 'mac')
      run: |
        . ./activate
        cd build_scripts
        sh build_macos.sh

    - name: Test blockchain code with pytest
      run: |
        . ./activate
        ./venv/bin/py.test tests -s -v

    - name: Upload MacOS artifacts
      if: startsWith(matrix.os, 'mac')
      uses: actions/upload-artifact@v1
      with:
        name: Chia-MacOS-10.15-dmg
        path: ${{ github.workspace }}/build_scripts/Chia-0.1.6.dmg

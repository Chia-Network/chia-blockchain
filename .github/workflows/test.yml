name: üß™ test

on:
  push:
    branches:
    - long_lived/**
    - main
    - release/**
    tags:
    - '**'
  pull_request:
    branches:
    - '**'
  workflow_dispatch: null

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}-${{ github.event_name }}--${{ (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/') || startsWith(github.ref, 'refs/heads/long_lived/')) && github.sha || '' }}
  cancel-in-progress: true

jobs:
  configure:
    name: Configure matrix
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python environment
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Generate matrix configuration
        id: configure
        run: |
          python tests/build-job-matrix.py --per directory --verbose > matrix.json
          cat matrix.json
          echo ::set-output name=configuration::$(cat matrix.json)

    outputs:
      configuration: ${{ steps.configure.outputs.configuration }}

  macos:
    uses: ./.github/workflows/test-single.yml
    needs: configure
    with:
      emoji: üçé
      matrix: macos
      name: macOS
      file_name: macos
      concurrency_name: macos
      configuration: ${{ needs.configure.outputs.configuration }}
      runs-on: macos-latest
  ubuntu:
    uses: ./.github/workflows/test-single.yml
    needs: configure
    with:
      emoji: üêß
      matrix: ubuntu
      name: Ubuntu
      file_name: ubuntu
      concurrency_name: ubuntu
      configuration: ${{ needs.configure.outputs.configuration }}
      runs-on: ubuntu-latest
  windows:
    uses: ./.github/workflows/test-single.yml
    needs: configure
    with:
      emoji: ü™ü
      matrix: windows
      name: Windows
      file_name: windows
      concurrency_name: windows
      configuration: ${{ needs.configure.outputs.configuration }}
      runs-on: windows-latest

  coverage:
    name: ${{ matrix.os.emoji }} Coverage - ${{ matrix.python.name }}
    runs-on: ${{ matrix.os.runs-on }}
    needs:
      - macos
      - ubuntu
      - windows
    strategy:
      fail-fast: false
      matrix:
        os:
          - emoji: üêß
            matrix: ubuntu
            name: Ubuntu
            runs-on: ubuntu-latest
        python:
          - name: '3.9'
            action: '3.9'
            apt: '3.9'
            install_sh: '3.9'
            matrix: '3.9'

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download Coverage
        uses: actions/download-artifact@v3
        with:
          name: coverage-data
          path: coverage-data

      - name: Set up ${{ matrix.python.name }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python.action }}

      - uses: ./.github/actions/install
        with:
          python-version: ${{ matrix.python.action }}
          development: true

      - uses: chia-network/actions/activate-venv@main

      - name: Coverage Processing
        run: |
          # skip windows until https://github.com/nedbat/coveragepy/issues/991 is resolved
          rm coverage-data/*.tests_windows_* coverage-data/.*.tests_windows_*
          coverage combine --rcfile=.coveragerc --data-file coverage-reports/.coverage coverage-data/
          coverage xml --rcfile=.coveragerc --data-file coverage-reports/.coverage -o coverage-reports/coverage.xml
          coverage html --rcfile=.coveragerc --data-file coverage-reports/.coverage --directory coverage-reports/html/

      - name: Coverage report (chia/)
        run: |
          coverage report --rcfile=.coveragerc --data-file coverage-reports/.coverage --include='chia/*' --show-missing | tee coverage-reports/coverage-chia-stdout

      - name: Coverage report (tests/)
        run: |
          coverage report --rcfile=.coveragerc --data-file coverage-reports/.coverage --include='tests/*' --show-missing | tee coverage-reports/coverage-tests-stdout

# needs some debugging since it just reports no changes
#      - name: Coverage report (diff)
#        run: |
#          diff-cover --compare-branch=${{ fromJSON(format('[{0}, {1}]', toJSON(github.event.before), toJSON(format('origin/{0}', github.base_ref))))[github.base_ref != ''] }} coverage-reports/coverage.xml |  tee coverage-reports/diff-cover-stdout

      - name: Publish coverage reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-reports
          path: coverage-reports/*
          if-no-files-found: error

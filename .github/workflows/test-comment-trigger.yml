name: ðŸ§ª test - comment trigger

on:
  issue_comment:
    types:
    - created

jobs:
  pr_commented:
    name: PR comment
    if: ${{ github.event.issue.pull_request }}
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo ${the_context} | jq
        env:
          the_context: ${{ toJson(github) }}

      - run: |
          echo ${the_context} | jq
        env:
          the_context: ${{ toJson(job) }}

      - run: |
          echo ${the_context} | jq
        env:
          the_context: ${{ toJson(steps) }}

      - run: |
          echo ${the_context} | jq
        env:
          the_context: ${{ toJson(runner) }}

      - run: |
          echo ${the_context} | jq
        env:
          the_context: ${{ toJson(strategy) }}

      - run: |
          echo ${the_context} | jq
        env:
          the_context: ${{ toJson(matrix) }}

      - shell: python
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
          CHIA_COMMENT_TRIGGER_BODY: ${{ github.event.comment.body }}
          CHIA_COMMENT_TRIGGER_PULL_NUMBER: ${{ github.event.issue.number }}
        run: |
          import json
          import os
          import subprocess
          import sys

          github = json.loads(os.environ["GITHUB_CONTEXT"])
          body = os.environ["CHIA_COMMENT_TRIGGER_BODY"].strip()
          first_line = body[:body.find("\n")]
          command, mode = [segment.strip() for segment in first_line.split(":")]

          if command != "matrix mode":
              print(f"comment does not match: {first_line}")
              sys.exit(0)

          print("comment matches")
          print(f"  mode: {mode}")
          pull_number = os.environ["CHIA_COMMENT_TRIGGER_PULL_NUMBER"]
          command = [
              "gh",
              "workflow",
              "run",
              "test.yml",
              "--ref",
              f"refs/pull/{pull_number}/merged",
              "--field",
              f"matrix_mode={matrix_mode}",
          ]
          print(f"about to run: {command}")
          subprocess.run(command, check=True)

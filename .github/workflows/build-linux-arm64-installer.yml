name: Linux ARM64 installer on Python 3.8

on:
  push:
    branches:
      - main
    tags:
        - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    name: Linux ARM64 installer on Python 3.8
    runs-on: ${{ matrix.os }}
    timeout-minutes: 40
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        python-version: [3.8]
        os: [ARM64]

    steps:
    - name: Cancel previous runs on the same branch
      if: ${{ github.ref != 'refs/heads/main' }}
      uses: styfle/cancel-workflow-action@0.9.0
      with:
        access_token: ${{ github.token }}

    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive
    # Create our own venv outside of the git directory JUST for getting the ACTUAL version so that install can't break it
    - name: Create installer version number
      id: version_number
      run: |
        python3 -m venv ../venv
        . ../venv/bin/activate
        pip3 install setuptools_scm
        echo "::set-output name=CHIA_INSTALLER_VERSION::$(python3 ./build_scripts/installer-version.py)"
        deactivate

    - name: Build ARM64 Installer
      run: |
        podman run --rm=true \
          -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
          docker.io/library/ubuntu:18.04 \
          bash -exc '\
            echo $PATH && \
            apt update && \
            apt upgrade -y && \
            apt -y install software-properties-common build-essential \
            curl git dialog apt-utils zlib1g-dev && \
            add-apt-repository ppa:deadsnakes/ppa -y && \
            curl -sL https://deb.nodesource.com/setup_12.x | bash - && \
            apt -y install nodejs fakeroot \
            python3.8 python3.8-venv libpython3.8-dev python3.8-distutils && \
            rm -rf venv && \
            python3 --version && \
            python3.8 -m venv venv && \
            source venv/bin/activate && \
            echo "Should be Python 3.8.x" && \
            python --version && \
            echo "Emulating install.sh" && \
            pip install --upgrade pip && \
            pip install wheel && \
            pip install --extra-index-url https://pypi.chia.net/simple/ miniupnpc==2.2.2 && \
            pip install . --extra-index-url https://pypi.chia.net/simple/ && \
            ldd --version && \
            cd build_scripts && \
            sh build_linux.sh arm64 \
          '

    - name: Upload Linux artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Linux-ARM-64-Installer
        path: ${{ github.workspace }}/build_scripts/final_installer/

    - name: Install AWS CLI
      run: |
          sudo apt-get install -y awscli

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.INSTALLER_UPLOAD_KEY }}
        aws-secret-access-key: ${{ secrets.INSTALLER_UPLOAD_SECRET }}
        aws-region: us-west-2

    - name: Upload to s3
      run: |
          aws s3 cp ${{ github.workspace }}/build_scripts/final_installer/*.deb s3://download-chia-net/builds/

    - name: Create Checksums
      if: startsWith(github.ref, 'refs/tags/')
      env:
        CHIA_INSTALLER_VERSION: ${{ steps.version_number.outputs.CHIA_INSTALLER_VERSION }}
      run: |
        ls ${{ github.workspace }}/build_scripts/final_installer/
        sha256sum ${{ github.workspace }}/build_scripts/final_installer/chia-blockchain_${{ steps.version_number.outputs.CHIA_INSTALLER_VERSION }}_arm64.deb > ${{ github.workspace }}/build_scripts/final_installer/chia-blockchain_${{ steps.version_number.outputs.CHIA_INSTALLER_VERSION }}_arm64.deb.checksum
        ls ${{ github.workspace }}/build_scripts/final_installer/

    - name: Upload Release Files
      if: startsWith(github.ref, 'refs/tags/')
      run: |
          ls ${{ github.workspace }}/build_scripts/final_installer/
          aws s3 cp ${{ github.workspace }}/build_scripts/final_installer/*.deb s3://download-chia-net/install/
          aws s3 cp ${{ github.workspace }}/build_scripts/final_installer/*.checksum s3://download-chia-net/install/

    - name: Clean up on self hosted runner
      run: |
        sudo rm -rf build_scrpits/final_installer

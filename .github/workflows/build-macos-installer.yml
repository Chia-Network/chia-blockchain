name: Build MacOS installer on Catalina and Python 3.8


on: [push, pull_request]

jobs:
  build:
    name: Build MacOS installer on Python 3.8
    runs-on: ${{ matrix.os }}
    timeout-minutes: 90
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        python-version: [3.8]
        os: [macOS-latest]

    steps:
    - name: Cancel previous runs on the same branch
      uses: styfle/cancel-workflow-action@0.6.0
      with:
        access_token: ${{ github.token }}

    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        # we need fetch-depth 0 so setuptools_scm can resolve tags

    - name: Setup Python environment
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache npm
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"

    - name: Cache pip
      uses: actions/cache@v2
      with:
        # Note that new runners may break this https://github.com/actions/cache/issues/292
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Test for secrets access
      id: check_secrets
      shell: bash
      run: |
        unset HAS_SECRET
        if [ -n "$SECRET" ]; then HAS_SECRET='true' ; fi
        echo ::set-output name=HAS_SECRET::${HAS_SECRET}
      env:
        SECRET: "${{ secrets.APPLE_DEV_ID_APP }}"

    - name: Import Apple app signing certificate
      if: steps.check_secrets.outputs.HAS_SECRET
      uses: Apple-Actions/import-codesign-certs@v1
      with:
        p12-file-base64: ${{ secrets.APPLE_DEV_ID_APP }}
        p12-password: ${{ secrets.APPLE_DEV_ID_APP_PASS }}

    - name: Run install script
      env:
        INSTALL_PYTHON_VERSION: ${{ matrix.python-version }}
        BUILD_VDF_CLIENT: "N"
      run: |
        sh install.sh

    - name: Setup Node 12.x
      uses: actions/setup-node@v2.1.4
      with:
        node-version: '12.x'

    - name: Build MacOS DMG in Catalina
      run: |
        . ./activate
        clang --version
        cd ./electron-react
        npm install -g electron-osx-sign
        npm install
        npm audit fix
        cd ../build_scripts
        sh build_macos.sh

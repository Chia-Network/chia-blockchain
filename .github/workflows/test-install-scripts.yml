name: Test Install Scripts

on:
  push:
    branches:
      - main
    tags:
        - '**'
  pull_request:
    branches:
      - '**'

concurrency:
  # SHA is added to the end if on `main` to let all main workflows run
  group: ${{ github.ref }}-${{ github.workflow }}-${{ github.event_name }}-${{ github.ref == 'refs/heads/main' && github.sha || '' }}
  cancel-in-progress: true

jobs:
  test_scripts_in_docker:
    name: Test Install Scripts ${{ matrix.distribution.name }}
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.distribution.url }}
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        os: [ubuntu-latest]
        distribution:
        - name: centos:7
          type: centos
          url: "docker://centos:7"

    steps:
    - name: Prepare Amazon Linux
      if: ${{ matrix.distribution.type == 'amazon' }}
      run: |
        yum install --assumeyes git sudo

    - name: Prepare Arch
      if: ${{ matrix.distribution.type == 'arch' }}
      run: |
        pacman --noconfirm --refresh base --sync git sudo

    - name: Prepare CentOS
      if: ${{ matrix.distribution.type == 'centos' }}
      # Installing Git from yum brings git@1.x which doesn't work.
      run: |
        if [ "$(rpm --eval %{centos_ver})" = "8" ]; then
          sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-Linux-*;
        fi
        yum update -y
        yum install -y sudo perl perl-Error perl-TermReadKey less pcre2 openssh-clients libsecret emacs-filesystem
        yum install -y https://repo.ius.io/ius-release-el7.rpm https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
        yum install -y git --enablerepo=ius --disablerepo=base,epel,extras,updates

    - name: Prepare Debian
      if: ${{ matrix.distribution.type == 'debian' }}
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        apt-get --yes update
        apt-get install --yes git lsb-release sudo

    - name: Prepare Fedora
      if: ${{ matrix.distribution.type == 'fedora' }}
      run: |
        yum install --assumeyes git

    - name: Prepare Ubuntu
      if: ${{ matrix.distribution.type == 'ubuntu' }}
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        # for bionic
        apt-get --yes update
        apt-get install --yes software-properties-common
        add-apt-repository --yes ppa:git-core/ppa
        apt-get --yes update
        apt-get install --yes git lsb-release sudo

    # after installing git so we use that copy
    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Run install script
      env:
        INSTALL_PYTHON_VERSION: ${{ matrix.python-version }}
        BUILD_VDF_CLIENT: "N"
      run: sh install.sh -a

    - name: Run chia --help
      run: |
        . ./activate
        chia --help

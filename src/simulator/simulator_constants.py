from src.util.make_test_constants import make_test_constants_without_genesis

test_constants = make_test_constants_without_genesis(
    {
        "DIFFICULTY_STARTING": 1,
        "DISCRIMINANT_SIZE_BITS": 8,
        "BLOCK_TIME_TARGET": 10,
        "DIFFICULTY_EPOCH": 12,  # The number of blocks per epoch
        "DIFFICULTY_DELAY": 3,  # EPOCH / WARP_FACTOR
        "PROPAGATION_THRESHOLD": 10,
        "PROPAGATION_DELAY_THRESHOLD": 20,
        "TX_PER_SEC": 1,
        "MEMPOOL_BLOCK_BUFFER": 10,
        "MIN_ITERS_STARTING": 50 * 1,
        "NUMBER_ZERO_BITS_CHALLENGE_SIG": 1,
        "CLVM_COST_RATIO_CONSTANT": 108,
        "COINBASE_FREEZE_PERIOD": 0,
        "GENESIS_BLOCK": b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x883|\xde\xeb0\x9e[1:\x97\xe1Jp\x1e\x85|r9 Q\x81*\x058\xe9\xef\xeb\x89\x0c\x8b\xaft\xe6T\xfd\xf2W[\x01\xf0\x16\xc4\n`\xeb\xbd%\x84m\x82\xb5\xc6\xaa\xe8p\x8e\x8f\xa1\x814Rw\xa2\x9b\xce\xd2\x8a\x94\xfc\xb8\x90o\\\xad:;\x12\x9f\xac\xe2f\xe0\x13\x00\xe9]\x83\xa3\xb6\x8f\x15\x8ds\x91\xdd\x12\x00\x00\x00\x90\x9b2K\xbd\x14\xbc\x85/\x06\xad\xc4\xa0%H\xd5\x81\x0b\xe8\x0e\x0c+\xa3W^(\x84e\xb5\xa9I*\xc7L\xb2\x83L\xc4\xca\xe2\xa9\x9a\xc6\xba\xc7\x9b"s\xd0O\xf9\x06&,4\x82tX-I[\xaf\t6Na\x01\x19!;\xbb\x13\x0b\x9bT\x19\x8c\xf6Q2q\x19\taYhL\xc84(\xaa6\xfb\x9aA\xfc\x06\xc7#\xab\xe0\x1c\x843\xf3\xf7k\xd0\xa9\x087N\x1d\x92\x97<o3+\x10J\xf5\xad\xdc\xfb\xa5\x8b[t\xea\xcd\x00uB\xcf\x1e\xf8\xb7\x15\xd6=\x8b;\xc0\xf0\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x06\xf8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x02\x05\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00_\r\xc0\x88F\r6\x84\x9d\x85\xc1\xa2\x9aq\xf7\x1cFXm\xf5L\x9f \xbb\x1d\x10\x97\x84\xb5$\x01\xc9^\x7f2\xfb\xee\xeb\x85\xa6\x02\xe3l\xba\xee+\xa25\x00\xd4\xe1\x90/\x08\x97\xef\x18#\xb7\xe5+\xb2\xb9\xc8\xb9\xce\xe1\xfd\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x06\xf8\xa8}\xd4_\x98QR\x14"\x06<\xa4;\x9f2\xd3\xed\xd0mK\xf7\xfa~<\x88B\x8b\xd4F\xdcHp\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00T\xc1\xef\x962\x87V\xc4\xd5\xd5AL\x12\x1c\xe4|{\xc0\x7f{.\xe98\x93%\x08:\xa66\xe7\x80Q\x00\x00\x01\xd1\xa9J \x00+[\xbbW\xc5\xdaVh\x93\x16Q\xaa\r\x12\t"\xe3?:fk\xfd\x1f\x82q\xd0\r\x02U\xcc\xf9\xdb\x00\x00\x00\x00\xa3\xaa\xa0\xe0\xediiw+\xae\xecY\r{4\x9f\xc5\x82\'"\x9d\x8dI\x03Y{\x82\xd7pY\xb5\xd7\xc8\x0c-9\xff\xb141\xa5\xee\x17\x01\x1b\x0b&t\xa9\xf6\xe9\xeb\x8a\xc4\x03l\x87\xd0G\x11\x05\xb4\xfap\xe0\x11\xd3W\xcf.\xdb\xc1ye(\xd5A\xc9\x8ds\x83\xaf\xab$\xfd\xf5\x93\xc4,\x7fX\xcf\'\xd7\xa5\xb1\x00\x00\x00\x00\x00\x00\x00\x00\xdd\xb2{\x8c\xa7`a42\xf5\xaa\x87\xa0\rQQB\x1ah*\x07y\xd83k\xf3\xf3\xb6\x8b\x01\xde\xe7\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xafw\x92n\x02V\xb3:\x8d\xd4P\x19~\x0b\xa2\x8e\xf5\xaf\'\x1f\xc3\xd8K\xfd\xfd\xc9\x837\x84\x00\xe7K\x06#E\xda\x86B\xf7Q\xb3\xb2\x97\xea\xbd\x96\xdb\xcc\xa1\x91\x87\x04\x1fHqJ\xa2\xbc2\xcc\x04\xacn\x9e\xeb\x9da\xc9R\xcdA\xccD\x1f\t\x99O\x00\xfe\xa9<(W\xb1|\xb3=Rx\xab\xe1\xd3&b\xcd3\x00\x00\x00\x00\x07\x02\x807\x11|\xa3\x80',  # noqa: E501
    }
)

if __name__ == "__main__":
    from src.util.default_root import DEFAULT_ROOT_PATH
    from src.util.block_tools import BlockTools

    bt = BlockTools(root_path=DEFAULT_ROOT_PATH)
    new_genesis_block = bt.create_genesis_block(test_constants, bytes([0] * 32), b"0")

    print(bytes(new_genesis_block))

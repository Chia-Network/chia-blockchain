(mod (
  SINGLETON_STRUCT
  PROPOSAL_MOD_HASH
  PROPOSAL_TIMER_MOD_HASH
  CAT_MOD_HASH
  TREASURY_MOD_HASH
  EPHEMERAL_VOTE_PUZHASH  ; this is the mod already curried with what it needs - should still be a constant
  CAT_TAIL
  CURRENT_CAT_ISSUANCE
  PROPOSAL_PASS_PERCENTAGE
  TREASURY_ID
  PROPOSAL_TIMELOCK
  VOTES_SUM  ; yes votes are +1, no votes are -1
  TOTAL_VOTES  ; how many people responded
  INNERPUZ  ; this is what runs if this proposal is successful
  vote_amount
  vote_info
  vote_coin_id
  solution  ; set to 0 if we're voting
  p2_singleton_mod_hash  ; we only need this if we pass
)
  (include condition_codes.clvm)
  (include curry-and-treehash.clinc)

  (defconstant TEN_THOUSAND 10000)

  (defun-inline calculate_win_percentage (CURRENT_CAT_ISSUANCE PROPOSAL_PASS_PERCENTAGE)
    (f (divmod (* CURRENT_CAT_ISSUANCE PROPOSAL_PASS_PERCENTAGE) TEN_THOUSAND))
  )

  (defun calculate_timer_puzhash (
    PROPOSAL_TIMER_MOD_HASH
    PROPOSAL_MOD_HASH
    CAT_TAIL
    CURRENT_CAT_ISSUANCE
    PROPOSAL_TIMELOCK
    PROPOSAL_PASS_PERCENTAGE
    MY_SINGLETON_STRUCT
    TREASURY_ID
    )
    (puzzle-hash-of-curried-function PROPOSAL_TIMER_MOD_HASH
                                     (sha256 ONE TREASURY_ID)
                                     (sha256tree MY_SINGLETON_STRUCT)
                                     (sha256 ONE PROPOSAL_PASS_PERCENTAGE)
                                     (sha256 ONE PROPOSAL_TIMELOCK)
                                     (sha256 ONE CURRENT_CAT_ISSUANCE)
                                     (sha256 ONE CAT_TAIL)
                                     (sha256 ONE PROPOSAL_TIMER_MOD_HASH)
                                     (sha256 ONE PROPOSAL_MOD_HASH)
    )
  )

  (defun recreate_self (
    SINGLETON_STRUCT
    PROPOSAL_MOD_HASH
    PROPOSAL_TIMER_MOD_HASH
    CAT_MOD_HASH
    EPHEMERAL_VOTE_PUZHASH
    CAT_TAIL
    CURRENT_CAT_ISSUANCE
    PROPOSAL_PASS_PERCENTAGE
    TREASURY_ID
    TIMELOCK
    VOTES_SUM
    TOTAL_VOTES
    INNERPUZ
  )
    (puzzle-hash-of-curried-function PROPOSAL_MOD_HASH
                                     (sha256tree INNERPUZ)
                                     (sha256 ONE TOTAL_VOTES)
                                     (sha256 ONE VOTES_SUM)
                                     (sha256 ONE TIMELOCK)
                                     (sha256 ONE TREASURY_ID)
                                     (sha256 ONE PROPOSAL_PASS_PERCENTAGE)
                                     (sha256 ONE CURRENT_CAT_ISSUANCE)
                                     (sha256 ONE CAT_TAIL)
                                     (sha256 ONE EPHEMERAL_VOTE_PUZHASH)
                                     (sha256 ONE CAT_MOD_HASH)
                                     (sha256 ONE PROPOSAL_TIMER_MOD_HASH)
                                     (sha256 ONE PROPOSAL_MOD_HASH)
                                     (sha256tree SINGLETON_STRUCT)
    )
  )

  (defun wrap_vote_in_cat_mod (CAT_MOD_HASH CAT_TAIL EPHEMERAL_VOTE_PUZHASH)
    (puzzle-hash-of-curried-function CAT_MOD_HASH
                                     EPHEMERAL_VOTE_PUZHASH
                                     (sha256 ONE CAT_TAIL)
                                     (sha256 ONE CAT_MOD_HASH)
    )
  )

  (defun calculate_singleton_puzzle_hash (PROPOSAL_SINGLETON_STRUCT inner_puzzle_hash)
     (puzzle-hash-of-curried-function (f PROPOSAL_SINGLETON_STRUCT)
                                      inner_puzzle_hash
                                      (sha256tree PROPOSAL_SINGLETON_STRUCT)
     )
  )

  (defun calculate_treasury_puzzlehash (
    TREASURY_MOD_HASH
    treasury_singleton_struct
    PROPOSAL_MOD_HASH
    PROPOSAL_TIMER_MOD_HASH
    EPHEMERAL_VOTE_PUZHASH
    CAT_MOD_HASH
    CAT_TAIL
    CURRENT_CAT_ISSUANCE
    PROPOSAL_PASS_PERCENTAGE
    PROPOSAL_TIMELOCK
    p2_singleton_mod_hash
    )
    (calculate_singleton_puzzle_hash treasury_singleton_struct
      (puzzle-hash-of-curried-function TREASURY_MOD_HASH
        (sha256 ONE TREASURY_MOD_HASH)
        (sha256 ONE PROPOSAL_MOD_HASH)
        (sha256 ONE PROPOSAL_TIMER_MOD_HASH)
        (sha256 ONE EPHEMERAL_VOTE_PUZHASH)
        (sha256 ONE p2_singleton_mod_hash)
        (sha256 ONE CAT_MOD_HASH)
        (sha256 ONE CAT_TAIL)
        (sha256 ONE CURRENT_CAT_ISSUANCE)
        (sha256 ONE PROPOSAL_PASS_PERCENTAGE)
        (sha256 ONE PROPOSAL_TIMELOCK)
        (sha256tree treasury_singleton_struct)
      )
    )
  )

  ; main
  (if solution
    ; if we've passed
    (c
        (list ASSERT_PUZZLE_ANNOUNCEMENT
        (sha256
          (calculate_treasury_puzzlehash
            TREASURY_MOD_HASH
            (c (f SINGLETON_STRUCT) (c TREASURY_ID (r (r SINGLETON_STRUCT))))
            PROPOSAL_MOD_HASH
            PROPOSAL_TIMER_MOD_HASH
            EPHEMERAL_VOTE_PUZHASH
            CAT_MOD_HASH
            CAT_TAIL
            CURRENT_CAT_ISSUANCE
            PROPOSAL_PASS_PERCENTAGE
            PROPOSAL_TIMELOCK
            p2_singleton_mod_hash
          )
          (f (r SINGLETON_STRUCT))
        )
      )
      (c
        (list ASSERT_HEIGHT_RELATIVE 3)
        (c
          (list CREATE_PUZZLE_ANNOUNCEMENT TREASURY_ID)
          (c
            (list ASSERT_PUZZLE_ANNOUNCEMENT (sha256
              (calculate_timer_puzhash
                PROPOSAL_TIMER_MOD_HASH
                PROPOSAL_MOD_HASH
                CAT_TAIL
                CURRENT_CAT_ISSUANCE
                PROPOSAL_TIMELOCK
                PROPOSAL_PASS_PERCENTAGE
                SINGLETON_STRUCT
                TREASURY_ID
              )
              (f (r SINGLETON_STRUCT))
              )
            )
            (if (all (> TOTAL_VOTES (calculate_win_percentage CURRENT_CAT_ISSUANCE PROPOSAL_PASS_PERCENTAGE)) (> VOTES_SUM 0))
              (a INNERPUZ solution)
              (x)
            )
          )
        )
      )
    )

    ; if we're taking votes
    (list
      (list CREATE_PUZZLE_ANNOUNCEMENT vote_coin_id)  ; do any other values need to go here?

      (list ASSERT_PUZZLE_ANNOUNCEMENT (sha256 (wrap_vote_in_cat_mod CAT_MOD_HASH CAT_TAIL EPHEMERAL_VOTE_PUZHASH) (sha256tree (list (f (r SINGLETON_STRUCT)) vote_amount vote_info vote_coin_id))))
      (list
        CREATE_COIN
        (recreate_self
          SINGLETON_STRUCT
          PROPOSAL_MOD_HASH
          PROPOSAL_TIMER_MOD_HASH
          CAT_MOD_HASH
          EPHEMERAL_VOTE_PUZHASH
          CAT_TAIL
          CURRENT_CAT_ISSUANCE
          PROPOSAL_PASS_PERCENTAGE
          TREASURY_ID
          PROPOSAL_TIMELOCK
          (if vote_info (+ VOTES_SUM vote_amount) (- VOTES_SUM vote_amount))
          TOTAL_VOTES
          INNERPUZ
        )
        ONE  ; TODO: maybe this could my_amount, but why would a proposal hold any value?
      )
    )
  )
)

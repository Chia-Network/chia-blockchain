(mod
  (
    SINGLETON_STRUCT  ; ((SINGLETON_MOD_HASH, (SINGLETON_ID, LAUNCHER_PUZZLE_HASH)))
    DAO_DIVIDEND_MOD
    DAO_DIVIDEND_TIMER_MOD
    CAT_MOD_HASH
    TREASURY_MOD_HASH
    LOCKUP_MOD_HASH
    STARTING_CHIA_AMOUNT
    CURRENT_CAT_ISSUANCE
    TIMELOCK
    spend_type
    my_amount
  )

  (include condition_codes.clib)
  (include curry-and-treehash.clib)
  (defconstant dao_finished_state 0xfb015415f2e6a09c1141f880fc2135beec6adf2a19e4d02a191432846db16559)

  ; TODO: THIS FILE IS NOT FINISHED

  (defun-inline calculate_percentage (amount percentage)
    (f (divmod (* amount percentage) TEN_THOUSAND))
  )

  (defun calculate_dividend_timer_puzzlehash (DAO_DIVIDEND_TIMER_MOD)
    ()
  )

  (if spend_type
      ; claim
      (c
        (list ASSERT_MY_AMOUNT my_amount)
        (if (> my_amount STARTING_CHIA_AMOUNT)
            (if (= my_amount STARTING_CHIA_AMOUNT)
                (list CREATE_COIN (calculate_dividend_timer_puzzlehash ) 0)  ; create proposal timer - this prevents the dividend from starting with inaccurate amounts
                ()
            )
            (x)
        )
      )

      ; move to finished state
      (list
        (list CREATE_COIN dao_finished_state ONE)
        (list ASSERT_MY_AMOUNT my_amount)
        (list ASSERT_PUZZLE_ANNOUNCEMENT  ; assert that the treasury has actually taken the payment
          (sha256
            ;; Commented out to pass clvm compile checks
            ;; (calculate_treasury_puzzlehash)
            (sha256tree (list (- my_amount ONE) (f (r SINGLETON_STRUCT))))
          )
        )
      )
  )

)

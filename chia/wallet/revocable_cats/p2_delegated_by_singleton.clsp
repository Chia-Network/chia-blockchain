; This puzzle is used to delegate a spend to a singleton.
; The singleton will authorize the spend by sending a message via the SEND_MESSAGE condition.
(mod (
    SINGLETON_MOD_HASH
    SINGLETON_STRUCT_HASH ; The hash of (SINGLETON_MOD_HASH . (LAUNCHER_ID . SINGLETON_LAUNCHER_HASH))
    NONCE
    singleton_inner_puzzle_hash
    delegated_puzzle
    delegated_solution
  )

  (include condition_codes.clib)
  (include curry.clib)
  (include sha256tree.clib)

  (defun-inline calculate_full_puzzle_hash (SINGLETON_MOD_HASH SINGLETON_STRUCT_HASH inner_puzzle_hash)
    (curry_hashes_inline SINGLETON_MOD_HASH
      SINGLETON_STRUCT_HASH
      inner_puzzle_hash
    )
  )

  (c
    (list RECEIVE_MESSAGE
      23 ; = 010 111, mask for puzzle hash to coin ID
      (sha256tree delegated_puzzle)
      (calculate_full_puzzle_hash SINGLETON_MOD_HASH SINGLETON_STRUCT_HASH singleton_inner_puzzle_hash)
    )
    (a delegated_puzzle delegated_solution)
  )
)

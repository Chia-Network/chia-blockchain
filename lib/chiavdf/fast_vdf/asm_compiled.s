Xx_1: .intel_syntax noprefix             # asm_function:57                    .intel_syntax noprefix
Xx_2: .global _asm_func_gcd_base         # asm_function:64                    .global _asm_func_gcd_base
Xx_3: _asm_func_gcd_base:                # asm_function:65                    _asm_func_gcd_base:
Xx_4: PUSH RBP                           # asm_function:84                    PUSH RBP
Xx_5: PUSH RBX                           # asm_function:84                    PUSH RBX
Xx_6: PUSH R12                           # asm_function:84                    PUSH R12
Xx_7: PUSH R13                           # asm_function:84                    PUSH R13
Xx_8: PUSH R14                           # asm_function:84                    PUSH R14
Xx_9: PUSH R15                           # asm_function:84                    PUSH R15
Xx_10: MOV RAX, RSP                      # asm_function:96                    MOV RAX, RSP
Xx_11: AND RSP, -64                      # asm_function:97                    AND RSP, -64
Xx_12: SUB RSP, 64                       # asm_function:98                    SUB RSP, 64
Xx_13: MOV [RSP], RAX                    # asm_function:99                    MOV [RSP], RAX
Xx_14: MOVDQU XMM0, [RDI]                # compile_asm_gcd_base:38            MOVDQU `ab, [`ab_addr]
Xx_15: MOVDQU XMM1, [RSI]                # compile_asm_gcd_base:39            MOVDQU `u, [`u_addr]
Xx_16: MOVDQU XMM2, [RDX]                # compile_asm_gcd_base:40            MOVDQU `v, [`v_addr]
Xx_17: MOVDQU XMM3, [RCX]                # compile_asm_gcd_base:41            MOVDQU `is_lehmer, [`is_lehmer_addr]
Xx_18: MOVDQU XMM4, [R8]                 # compile_asm_gcd_base:42            MOVDQU `ab_threshold, [`ab_threshold_addr]
Xx_19: .text                             # gcd_base_continued_fraction:82     .text 
Xx_20: .balign 64                        # gcd_base_continued_fraction:86     .balign 64
Xx_21: gcd_base_table:                   # gcd_base_continued_fraction:87     gcd_base_table:
Xx_22: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
Xx_23: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
Xx_24: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
Xx_25: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
Xx_26: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
Xx_27: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
Xx_28: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
Xx_29: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
Xx_30: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
Xx_31: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
Xx_32: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
Xx_33: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
Xx_34: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
Xx_35: .quad 0x3ff0000000000000, 0xc022000000000000, 0xbff0000000000000, 0x4024000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc022000000000000, 0xbff0000000000000, 0x4024000000000000
Xx_36: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
Xx_37: .quad 0x3ff0000000000000, 0xc020000000000000, 0xbff0000000000000, 0x4022000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc020000000000000, 0xbff0000000000000, 0x4022000000000000
Xx_38: .quad 0xc01c000000000000, 0x4020000000000000, 0x4020000000000000, 0xc022000000000000 # gcd_base_continued_fraction:106    .quad 0xc01c000000000000, 0x4020000000000000, 0x4020000000000000, 0xc022000000000000
Xx_39: .quad 0x3ff0000000000000, 0xc01c000000000000, 0xbff0000000000000, 0x4020000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc01c000000000000, 0xbff0000000000000, 0x4020000000000000
Xx_40: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
Xx_41: .quad 0x3ff0000000000000, 0xc018000000000000, 0xbff0000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc018000000000000, 0xbff0000000000000, 0x401c000000000000
Xx_42: .quad 0x3ff0000000000000, 0xc018000000000000, 0xbff0000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc018000000000000, 0xbff0000000000000, 0x401c000000000000
Xx_43: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
Xx_44: .quad 0xc014000000000000, 0x4018000000000000, 0x4018000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0xc014000000000000, 0x4018000000000000, 0x4018000000000000, 0xc01c000000000000
Xx_45: .quad 0x3ff0000000000000, 0xc014000000000000, 0xbff0000000000000, 0x4018000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc014000000000000, 0xbff0000000000000, 0x4018000000000000
Xx_46: .quad 0x3ff0000000000000, 0xc014000000000000, 0xbff0000000000000, 0x4018000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc014000000000000, 0xbff0000000000000, 0x4018000000000000
Xx_47: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
Xx_48: .quad 0xc010000000000000, 0x4014000000000000, 0x4014000000000000, 0xc018000000000000 # gcd_base_continued_fraction:106    .quad 0xc010000000000000, 0x4014000000000000, 0x4014000000000000, 0xc018000000000000
Xx_49: .quad 0xc010000000000000, 0x4014000000000000, 0x4014000000000000, 0xc018000000000000 # gcd_base_continued_fraction:106    .quad 0xc010000000000000, 0x4014000000000000, 0x4014000000000000, 0xc018000000000000
Xx_50: .quad 0x3ff0000000000000, 0xc010000000000000, 0xbff0000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc010000000000000, 0xbff0000000000000, 0x4014000000000000
Xx_51: .quad 0x3ff0000000000000, 0xc010000000000000, 0xbff0000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc010000000000000, 0xbff0000000000000, 0x4014000000000000
Xx_52: .quad 0x3ff0000000000000, 0xc010000000000000, 0xbff0000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc010000000000000, 0xbff0000000000000, 0x4014000000000000
Xx_53: .quad 0x3ff0000000000000, 0xc010000000000000, 0xbff0000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc010000000000000, 0xbff0000000000000, 0x4014000000000000
Xx_54: .quad 0xc008000000000000, 0x4010000000000000, 0x4010000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0xc008000000000000, 0x4010000000000000, 0x4010000000000000, 0xc014000000000000
Xx_55: .quad 0xc008000000000000, 0x4010000000000000, 0x4010000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0xc008000000000000, 0x4010000000000000, 0x4010000000000000, 0xc014000000000000
Xx_56: .quad 0xc008000000000000, 0x4010000000000000, 0x4010000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0xc008000000000000, 0x4010000000000000, 0x4010000000000000, 0xc014000000000000
Xx_57: .quad 0x4010000000000000, 0xc01c000000000000, 0xc014000000000000, 0x4022000000000000 # gcd_base_continued_fraction:106    .quad 0x4010000000000000, 0xc01c000000000000, 0xc014000000000000, 0x4022000000000000
Xx_58: .quad 0x3ff0000000000000, 0xc008000000000000, 0xbff0000000000000, 0x4010000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xbff0000000000000, 0x4010000000000000
Xx_59: .quad 0xc008000000000000, 0x401c000000000000, 0x4010000000000000, 0xc022000000000000 # gcd_base_continued_fraction:106    .quad 0xc008000000000000, 0x401c000000000000, 0x4010000000000000, 0xc022000000000000
Xx_60: .quad 0x3ff0000000000000, 0xc008000000000000, 0xbff0000000000000, 0x4010000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xbff0000000000000, 0x4010000000000000
Xx_61: .quad 0x3ff0000000000000, 0xc008000000000000, 0xbff0000000000000, 0x4010000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xbff0000000000000, 0x4010000000000000
Xx_62: .quad 0x3ff0000000000000, 0xc008000000000000, 0xbff0000000000000, 0x4010000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xbff0000000000000, 0x4010000000000000
Xx_63: .quad 0x3ff0000000000000, 0xc008000000000000, 0xbff0000000000000, 0x4010000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xbff0000000000000, 0x4010000000000000
Xx_64: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
Xx_65: .quad 0xc000000000000000, 0x4008000000000000, 0x4008000000000000, 0xc010000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x4008000000000000, 0x4008000000000000, 0xc010000000000000
Xx_66: .quad 0xc000000000000000, 0x4008000000000000, 0x4008000000000000, 0xc010000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x4008000000000000, 0x4008000000000000, 0xc010000000000000
Xx_67: .quad 0xc000000000000000, 0x4008000000000000, 0x4008000000000000, 0xc010000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x4008000000000000, 0x4008000000000000, 0xc010000000000000
Xx_68: .quad 0xc000000000000000, 0x4008000000000000, 0x4008000000000000, 0xc010000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x4008000000000000, 0x4008000000000000, 0xc010000000000000
Xx_69: .quad 0x4008000000000000, 0xc020000000000000, 0xc010000000000000, 0x4026000000000000 # gcd_base_continued_fraction:106    .quad 0x4008000000000000, 0xc020000000000000, 0xc010000000000000, 0x4026000000000000
Xx_70: .quad 0xc014000000000000, 0x4020000000000000, 0x401c000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0xc014000000000000, 0x4020000000000000, 0x401c000000000000, 0xc026000000000000
Xx_71: .quad 0x4008000000000000, 0xc014000000000000, 0xc010000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x4008000000000000, 0xc014000000000000, 0xc010000000000000, 0x401c000000000000
Xx_72: .quad 0x4008000000000000, 0xc014000000000000, 0xc010000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x4008000000000000, 0xc014000000000000, 0xc010000000000000, 0x401c000000000000
Xx_73: .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000
Xx_74: .quad 0xc000000000000000, 0x4014000000000000, 0x4008000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x4014000000000000, 0x4008000000000000, 0xc01c000000000000
Xx_75: .quad 0xc000000000000000, 0x4014000000000000, 0x4008000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x4014000000000000, 0x4008000000000000, 0xc01c000000000000
Xx_76: .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000
Xx_77: .quad 0xc000000000000000, 0x401c000000000000, 0x4008000000000000, 0xc024000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x401c000000000000, 0x4008000000000000, 0xc024000000000000
Xx_78: .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000
Xx_79: .quad 0xc000000000000000, 0x4022000000000000, 0x4008000000000000, 0xc02a000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x4022000000000000, 0x4008000000000000, 0xc02a000000000000
Xx_80: .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000
Xx_81: .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000
Xx_82: .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000
Xx_83: .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000
Xx_84: .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000
Xx_85: .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000
Xx_86: .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000
Xx_87: .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000
Xx_88: .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000
Xx_89: .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000
Xx_90: .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000
Xx_91: .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000
Xx_92: .quad 0x4000000000000000, 0xc022000000000000, 0xc008000000000000, 0x402c000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc022000000000000, 0xc008000000000000, 0x402c000000000000
Xx_93: .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000
Xx_94: .quad 0x4000000000000000, 0xc01c000000000000, 0xc008000000000000, 0x4026000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc01c000000000000, 0xc008000000000000, 0x4026000000000000
Xx_95: .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000
Xx_96: .quad 0x4000000000000000, 0xc014000000000000, 0xc008000000000000, 0x4020000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc014000000000000, 0xc008000000000000, 0x4020000000000000
Xx_97: .quad 0x4000000000000000, 0xc014000000000000, 0xc008000000000000, 0x4020000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc014000000000000, 0xc008000000000000, 0x4020000000000000
Xx_98: .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000
Xx_99: .quad 0xc008000000000000, 0x4014000000000000, 0x4014000000000000, 0xc020000000000000 # gcd_base_continued_fraction:106    .quad 0xc008000000000000, 0x4014000000000000, 0x4014000000000000, 0xc020000000000000
Xx_100: .quad 0xc008000000000000, 0x4014000000000000, 0x4014000000000000, 0xc020000000000000 # gcd_base_continued_fraction:106    .quad 0xc008000000000000, 0x4014000000000000, 0x4014000000000000, 0xc020000000000000
Xx_101: .quad 0x4014000000000000, 0xc020000000000000, 0xc020000000000000, 0x402a000000000000 # gcd_base_continued_fraction:106    .quad 0x4014000000000000, 0xc020000000000000, 0xc020000000000000, 0x402a000000000000
Xx_102: .quad 0xc008000000000000, 0x4020000000000000, 0x4014000000000000, 0xc02a000000000000 # gcd_base_continued_fraction:106    .quad 0xc008000000000000, 0x4020000000000000, 0x4014000000000000, 0xc02a000000000000
Xx_103: .quad 0x4000000000000000, 0xc008000000000000, 0xc008000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc008000000000000, 0xc008000000000000, 0x4014000000000000
Xx_104: .quad 0x4000000000000000, 0xc008000000000000, 0xc008000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc008000000000000, 0xc008000000000000, 0x4014000000000000
Xx_105: .quad 0x4000000000000000, 0xc008000000000000, 0xc008000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc008000000000000, 0xc008000000000000, 0x4014000000000000
Xx_106: .quad 0x4000000000000000, 0xc008000000000000, 0xc008000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc008000000000000, 0xc008000000000000, 0x4014000000000000
Xx_107: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
Xx_108: .quad 0xbff0000000000000, 0x4008000000000000, 0x4000000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4000000000000000, 0xc014000000000000
Xx_109: .quad 0xbff0000000000000, 0x4008000000000000, 0x4000000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4000000000000000, 0xc014000000000000
Xx_110: .quad 0xbff0000000000000, 0x4008000000000000, 0x4000000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4000000000000000, 0xc014000000000000
Xx_111: .quad 0xbff0000000000000, 0x4008000000000000, 0x4000000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4000000000000000, 0xc014000000000000
Xx_112: .quad 0x4008000000000000, 0xc01c000000000000, 0xc014000000000000, 0x4028000000000000 # gcd_base_continued_fraction:106    .quad 0x4008000000000000, 0xc01c000000000000, 0xc014000000000000, 0x4028000000000000
Xx_113: .quad 0xbff0000000000000, 0x4008000000000000, 0x4000000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4000000000000000, 0xc014000000000000
Xx_114: .quad 0xc010000000000000, 0x401c000000000000, 0x401c000000000000, 0xc028000000000000 # gcd_base_continued_fraction:106    .quad 0xc010000000000000, 0x401c000000000000, 0x401c000000000000, 0xc028000000000000
Xx_115: .quad 0x4008000000000000, 0xc010000000000000, 0xc014000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x4008000000000000, 0xc010000000000000, 0xc014000000000000, 0x401c000000000000
Xx_116: .quad 0x4008000000000000, 0xc010000000000000, 0xc014000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x4008000000000000, 0xc010000000000000, 0xc014000000000000, 0x401c000000000000
Xx_117: .quad 0x4008000000000000, 0xc010000000000000, 0xc014000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x4008000000000000, 0xc010000000000000, 0xc014000000000000, 0x401c000000000000
Xx_118: .quad 0xbff0000000000000, 0x4010000000000000, 0x4000000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4010000000000000, 0x4000000000000000, 0xc01c000000000000
Xx_119: .quad 0xbff0000000000000, 0x4010000000000000, 0x4000000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4010000000000000, 0x4000000000000000, 0xc01c000000000000
Xx_120: .quad 0xbff0000000000000, 0x4010000000000000, 0x4000000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4010000000000000, 0x4000000000000000, 0xc01c000000000000
Xx_121: .quad 0xbff0000000000000, 0x4010000000000000, 0x4000000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4010000000000000, 0x4000000000000000, 0xc01c000000000000
Xx_122: .quad 0x4010000000000000, 0xc014000000000000, 0xc01c000000000000, 0x4022000000000000 # gcd_base_continued_fraction:106    .quad 0x4010000000000000, 0xc014000000000000, 0xc01c000000000000, 0x4022000000000000
Xx_123: .quad 0x4010000000000000, 0xc014000000000000, 0xc01c000000000000, 0x4022000000000000 # gcd_base_continued_fraction:106    .quad 0x4010000000000000, 0xc014000000000000, 0xc01c000000000000, 0x4022000000000000
Xx_124: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
Xx_125: .quad 0xbff0000000000000, 0x4014000000000000, 0x4000000000000000, 0xc022000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4014000000000000, 0x4000000000000000, 0xc022000000000000
Xx_126: .quad 0xbff0000000000000, 0x4014000000000000, 0x4000000000000000, 0xc022000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4014000000000000, 0x4000000000000000, 0xc022000000000000
Xx_127: .quad 0x4014000000000000, 0xc018000000000000, 0xc022000000000000, 0x4026000000000000 # gcd_base_continued_fraction:106    .quad 0x4014000000000000, 0xc018000000000000, 0xc022000000000000, 0x4026000000000000
Xx_128: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
Xx_129: .quad 0xbff0000000000000, 0x4018000000000000, 0x4000000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4018000000000000, 0x4000000000000000, 0xc026000000000000
Xx_130: .quad 0xbff0000000000000, 0x4018000000000000, 0x4000000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4018000000000000, 0x4000000000000000, 0xc026000000000000
Xx_131: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
Xx_132: .quad 0xbff0000000000000, 0x401c000000000000, 0x4000000000000000, 0xc02a000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x401c000000000000, 0x4000000000000000, 0xc02a000000000000
Xx_133: .quad 0x401c000000000000, 0xc020000000000000, 0xc02a000000000000, 0x402e000000000000 # gcd_base_continued_fraction:106    .quad 0x401c000000000000, 0xc020000000000000, 0xc02a000000000000, 0x402e000000000000
Xx_134: .quad 0xbff0000000000000, 0x4020000000000000, 0x4000000000000000, 0xc02e000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4020000000000000, 0x4000000000000000, 0xc02e000000000000
Xx_135: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
Xx_136: .quad 0xbff0000000000000, 0x4022000000000000, 0x4000000000000000, 0xc031000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4022000000000000, 0x4000000000000000, 0xc031000000000000
Xx_137: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
Xx_138: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
Xx_139: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
Xx_140: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
Xx_141: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
Xx_142: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
Xx_143: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
Xx_144: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
Xx_145: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
Xx_146: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
Xx_147: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
Xx_148: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
Xx_149: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
Xx_150: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000
Xx_151: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000
Xx_152: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000
Xx_153: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000
Xx_154: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000
Xx_155: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000
Xx_156: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000
Xx_157: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000
Xx_158: .quad 0x3ff0000000000000, 0xc01c000000000000, 0xc000000000000000, 0x402e000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc01c000000000000, 0xc000000000000000, 0x402e000000000000
Xx_159: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000
Xx_160: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000
Xx_161: .quad 0x3ff0000000000000, 0xc014000000000000, 0xc000000000000000, 0x4026000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc014000000000000, 0xc000000000000000, 0x4026000000000000
Xx_162: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000
Xx_163: .quad 0xc010000000000000, 0x4014000000000000, 0x4022000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0xc010000000000000, 0x4014000000000000, 0x4022000000000000, 0xc026000000000000
Xx_164: .quad 0x3ff0000000000000, 0xc010000000000000, 0xc000000000000000, 0x4022000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc010000000000000, 0xc000000000000000, 0x4022000000000000
Xx_165: .quad 0x3ff0000000000000, 0xc010000000000000, 0xc000000000000000, 0x4022000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc010000000000000, 0xc000000000000000, 0x4022000000000000
Xx_166: .quad 0xc008000000000000, 0x4010000000000000, 0x401c000000000000, 0xc022000000000000 # gcd_base_continued_fraction:106    .quad 0xc008000000000000, 0x4010000000000000, 0x401c000000000000, 0xc022000000000000
Xx_167: .quad 0xc008000000000000, 0x4010000000000000, 0x401c000000000000, 0xc022000000000000 # gcd_base_continued_fraction:106    .quad 0xc008000000000000, 0x4010000000000000, 0x401c000000000000, 0xc022000000000000
Xx_168: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc000000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc000000000000000, 0x401c000000000000
Xx_169: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc000000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc000000000000000, 0x401c000000000000
Xx_170: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc000000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc000000000000000, 0x401c000000000000
Xx_171: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000
Xx_172: .quad 0xc000000000000000, 0x4008000000000000, 0x4014000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x4008000000000000, 0x4014000000000000, 0xc01c000000000000
Xx_173: .quad 0xc000000000000000, 0x4008000000000000, 0x4014000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x4008000000000000, 0x4014000000000000, 0xc01c000000000000
Xx_174: .quad 0x4008000000000000, 0xc014000000000000, 0xc01c000000000000, 0x4028000000000000 # gcd_base_continued_fraction:106    .quad 0x4008000000000000, 0xc014000000000000, 0xc01c000000000000, 0x4028000000000000
Xx_175: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc000000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc000000000000000, 0x4014000000000000
Xx_176: .quad 0xc000000000000000, 0x4014000000000000, 0x4014000000000000, 0xc028000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x4014000000000000, 0x4014000000000000, 0xc028000000000000
Xx_177: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc000000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc000000000000000, 0x4014000000000000
Xx_178: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc000000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc000000000000000, 0x4014000000000000
Xx_179: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc000000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc000000000000000, 0x4014000000000000
Xx_180: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc000000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc000000000000000, 0x4014000000000000
Xx_181: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc000000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc000000000000000, 0x4014000000000000
Xx_182: .quad 0xbff0000000000000, 0x4000000000000000, 0x4008000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4008000000000000, 0xc014000000000000
Xx_183: .quad 0xbff0000000000000, 0x4000000000000000, 0x4008000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4008000000000000, 0xc014000000000000
Xx_184: .quad 0xbff0000000000000, 0x4000000000000000, 0x4008000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4008000000000000, 0xc014000000000000
Xx_185: .quad 0xbff0000000000000, 0x4000000000000000, 0x4008000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4008000000000000, 0xc014000000000000
Xx_186: .quad 0xbff0000000000000, 0x4000000000000000, 0x4008000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4008000000000000, 0xc014000000000000
Xx_187: .quad 0x4000000000000000, 0xc014000000000000, 0xc014000000000000, 0x402a000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc014000000000000, 0xc014000000000000, 0x402a000000000000
Xx_188: .quad 0xbff0000000000000, 0x4000000000000000, 0x4008000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4008000000000000, 0xc014000000000000
Xx_189: .quad 0xc008000000000000, 0x4014000000000000, 0x4020000000000000, 0xc02a000000000000 # gcd_base_continued_fraction:106    .quad 0xc008000000000000, 0x4014000000000000, 0x4020000000000000, 0xc02a000000000000
Xx_190: .quad 0x4000000000000000, 0xc008000000000000, 0xc014000000000000, 0x4020000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc008000000000000, 0xc014000000000000, 0x4020000000000000
Xx_191: .quad 0x4000000000000000, 0xc008000000000000, 0xc014000000000000, 0x4020000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc008000000000000, 0xc014000000000000, 0x4020000000000000
Xx_192: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000
Xx_193: .quad 0xbff0000000000000, 0x4008000000000000, 0x4008000000000000, 0xc020000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4008000000000000, 0xc020000000000000
Xx_194: .quad 0xbff0000000000000, 0x4008000000000000, 0x4008000000000000, 0xc020000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4008000000000000, 0xc020000000000000
Xx_195: .quad 0xbff0000000000000, 0x4008000000000000, 0x4008000000000000, 0xc020000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4008000000000000, 0xc020000000000000
Xx_196: .quad 0x4008000000000000, 0xc010000000000000, 0xc020000000000000, 0x4026000000000000 # gcd_base_continued_fraction:106    .quad 0x4008000000000000, 0xc010000000000000, 0xc020000000000000, 0x4026000000000000
Xx_197: .quad 0x4008000000000000, 0xc010000000000000, 0xc020000000000000, 0x4026000000000000 # gcd_base_continued_fraction:106    .quad 0x4008000000000000, 0xc010000000000000, 0xc020000000000000, 0x4026000000000000
Xx_198: .quad 0xbff0000000000000, 0x4010000000000000, 0x4008000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4010000000000000, 0x4008000000000000, 0xc026000000000000
Xx_199: .quad 0xbff0000000000000, 0x4010000000000000, 0x4008000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4010000000000000, 0x4008000000000000, 0xc026000000000000
Xx_200: .quad 0x4010000000000000, 0xc014000000000000, 0xc026000000000000, 0x402c000000000000 # gcd_base_continued_fraction:106    .quad 0x4010000000000000, 0xc014000000000000, 0xc026000000000000, 0x402c000000000000
Xx_201: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000
Xx_202: .quad 0xbff0000000000000, 0x4014000000000000, 0x4008000000000000, 0xc02c000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4014000000000000, 0x4008000000000000, 0xc02c000000000000
Xx_203: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000
Xx_204: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000
Xx_205: .quad 0xbff0000000000000, 0x401c000000000000, 0x4008000000000000, 0xc034000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x401c000000000000, 0x4008000000000000, 0xc034000000000000
Xx_206: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000
Xx_207: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000
Xx_208: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000
Xx_209: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000
Xx_210: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000
Xx_211: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000
Xx_212: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000
Xx_213: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000
Xx_214: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000
Xx_215: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000
Xx_216: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000
Xx_217: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000
Xx_218: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000
Xx_219: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000
Xx_220: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000
Xx_221: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000
Xx_222: .quad 0x3ff0000000000000, 0xc01c000000000000, 0xc008000000000000, 0x4036000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc01c000000000000, 0xc008000000000000, 0x4036000000000000
Xx_223: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000
Xx_224: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000
Xx_225: .quad 0x3ff0000000000000, 0xc014000000000000, 0xc008000000000000, 0x4030000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc014000000000000, 0xc008000000000000, 0x4030000000000000
Xx_226: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000
Xx_227: .quad 0xc010000000000000, 0x4014000000000000, 0x402a000000000000, 0xc030000000000000 # gcd_base_continued_fraction:106    .quad 0xc010000000000000, 0x4014000000000000, 0x402a000000000000, 0xc030000000000000
Xx_228: .quad 0x3ff0000000000000, 0xc010000000000000, 0xc008000000000000, 0x402a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc010000000000000, 0xc008000000000000, 0x402a000000000000
Xx_229: .quad 0x3ff0000000000000, 0xc010000000000000, 0xc008000000000000, 0x402a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc010000000000000, 0xc008000000000000, 0x402a000000000000
Xx_230: .quad 0xc008000000000000, 0x4010000000000000, 0x4024000000000000, 0xc02a000000000000 # gcd_base_continued_fraction:106    .quad 0xc008000000000000, 0x4010000000000000, 0x4024000000000000, 0xc02a000000000000
Xx_231: .quad 0xc008000000000000, 0x4010000000000000, 0x4024000000000000, 0xc02a000000000000 # gcd_base_continued_fraction:106    .quad 0xc008000000000000, 0x4010000000000000, 0x4024000000000000, 0xc02a000000000000
Xx_232: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc008000000000000, 0x4024000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc008000000000000, 0x4024000000000000
Xx_233: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc008000000000000, 0x4024000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc008000000000000, 0x4024000000000000
Xx_234: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc008000000000000, 0x4024000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc008000000000000, 0x4024000000000000
Xx_235: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000
Xx_236: .quad 0xc000000000000000, 0x4008000000000000, 0x401c000000000000, 0xc024000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x4008000000000000, 0x401c000000000000, 0xc024000000000000
Xx_237: .quad 0xc000000000000000, 0x4008000000000000, 0x401c000000000000, 0xc024000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x4008000000000000, 0x401c000000000000, 0xc024000000000000
Xx_238: .quad 0x4008000000000000, 0xc014000000000000, 0xc024000000000000, 0x4031000000000000 # gcd_base_continued_fraction:106    .quad 0x4008000000000000, 0xc014000000000000, 0xc024000000000000, 0x4031000000000000
Xx_239: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc008000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc008000000000000, 0x401c000000000000
Xx_240: .quad 0xc000000000000000, 0x4014000000000000, 0x401c000000000000, 0xc031000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x4014000000000000, 0x401c000000000000, 0xc031000000000000
Xx_241: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc008000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc008000000000000, 0x401c000000000000
Xx_242: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc008000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc008000000000000, 0x401c000000000000
Xx_243: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc008000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc008000000000000, 0x401c000000000000
Xx_244: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc008000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc008000000000000, 0x401c000000000000
Xx_245: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc008000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc008000000000000, 0x401c000000000000
Xx_246: .quad 0xbff0000000000000, 0x4000000000000000, 0x4010000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4010000000000000, 0xc01c000000000000
Xx_247: .quad 0xbff0000000000000, 0x4000000000000000, 0x4010000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4010000000000000, 0xc01c000000000000
Xx_248: .quad 0xbff0000000000000, 0x4000000000000000, 0x4010000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4010000000000000, 0xc01c000000000000
Xx_249: .quad 0xbff0000000000000, 0x4000000000000000, 0x4010000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4010000000000000, 0xc01c000000000000
Xx_250: .quad 0xbff0000000000000, 0x4000000000000000, 0x4010000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4010000000000000, 0xc01c000000000000
Xx_251: .quad 0x4000000000000000, 0xc014000000000000, 0xc01c000000000000, 0x4032000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc014000000000000, 0xc01c000000000000, 0x4032000000000000
Xx_252: .quad 0xbff0000000000000, 0x4000000000000000, 0x4010000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4010000000000000, 0xc01c000000000000
Xx_253: .quad 0xc008000000000000, 0x4014000000000000, 0x4026000000000000, 0xc032000000000000 # gcd_base_continued_fraction:106    .quad 0xc008000000000000, 0x4014000000000000, 0x4026000000000000, 0xc032000000000000
Xx_254: .quad 0x4000000000000000, 0xc008000000000000, 0xc01c000000000000, 0x4026000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc008000000000000, 0xc01c000000000000, 0x4026000000000000
Xx_255: .quad 0x4000000000000000, 0xc008000000000000, 0xc01c000000000000, 0x4026000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc008000000000000, 0xc01c000000000000, 0x4026000000000000
Xx_256: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000
Xx_257: .quad 0xbff0000000000000, 0x4008000000000000, 0x4010000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4010000000000000, 0xc026000000000000
Xx_258: .quad 0xbff0000000000000, 0x4008000000000000, 0x4010000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4010000000000000, 0xc026000000000000
Xx_259: .quad 0xbff0000000000000, 0x4008000000000000, 0x4010000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4010000000000000, 0xc026000000000000
Xx_260: .quad 0x4008000000000000, 0xc010000000000000, 0xc026000000000000, 0x402e000000000000 # gcd_base_continued_fraction:106    .quad 0x4008000000000000, 0xc010000000000000, 0xc026000000000000, 0x402e000000000000
Xx_261: .quad 0x4008000000000000, 0xc010000000000000, 0xc026000000000000, 0x402e000000000000 # gcd_base_continued_fraction:106    .quad 0x4008000000000000, 0xc010000000000000, 0xc026000000000000, 0x402e000000000000
Xx_262: .quad 0xbff0000000000000, 0x4010000000000000, 0x4010000000000000, 0xc02e000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4010000000000000, 0x4010000000000000, 0xc02e000000000000
Xx_263: .quad 0xbff0000000000000, 0x4010000000000000, 0x4010000000000000, 0xc02e000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4010000000000000, 0x4010000000000000, 0xc02e000000000000
Xx_264: .quad 0x4010000000000000, 0xc014000000000000, 0xc02e000000000000, 0x4033000000000000 # gcd_base_continued_fraction:106    .quad 0x4010000000000000, 0xc014000000000000, 0xc02e000000000000, 0x4033000000000000
Xx_265: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000
Xx_266: .quad 0xbff0000000000000, 0x4014000000000000, 0x4010000000000000, 0xc033000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4014000000000000, 0x4010000000000000, 0xc033000000000000
Xx_267: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000
Xx_268: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000
Xx_269: .quad 0xbff0000000000000, 0x401c000000000000, 0x4010000000000000, 0xc03b000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x401c000000000000, 0x4010000000000000, 0xc03b000000000000
Xx_270: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000
Xx_271: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000
Xx_272: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000
Xx_273: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000
Xx_274: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000
Xx_275: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000
Xx_276: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000
Xx_277: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000
Xx_278: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc010000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc010000000000000
Xx_279: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc010000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc010000000000000
Xx_280: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc010000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc010000000000000
Xx_281: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc010000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc010000000000000
Xx_282: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc010000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc010000000000000
Xx_283: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc010000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc010000000000000
Xx_284: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc010000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc010000000000000
Xx_285: .quad 0x3ff0000000000000, 0xc010000000000000, 0xc010000000000000, 0x4031000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc010000000000000, 0xc010000000000000, 0x4031000000000000
Xx_286: .quad 0xc008000000000000, 0x4010000000000000, 0x402a000000000000, 0xc031000000000000 # gcd_base_continued_fraction:106    .quad 0xc008000000000000, 0x4010000000000000, 0x402a000000000000, 0xc031000000000000
Xx_287: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc010000000000000, 0x402a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc010000000000000, 0x402a000000000000
Xx_288: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc010000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc010000000000000
Xx_289: .quad 0xc000000000000000, 0x4008000000000000, 0x4022000000000000, 0xc02a000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x4008000000000000, 0x4022000000000000, 0xc02a000000000000
Xx_290: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc010000000000000, 0x4022000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc010000000000000, 0x4022000000000000
Xx_291: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc010000000000000, 0x4022000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc010000000000000, 0x4022000000000000
Xx_292: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc010000000000000, 0x4022000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc010000000000000, 0x4022000000000000
Xx_293: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc010000000000000, 0x4022000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc010000000000000, 0x4022000000000000
Xx_294: .quad 0xbff0000000000000, 0x4000000000000000, 0x4014000000000000, 0xc022000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4014000000000000, 0xc022000000000000
Xx_295: .quad 0xbff0000000000000, 0x4000000000000000, 0x4014000000000000, 0xc022000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4014000000000000, 0xc022000000000000
Xx_296: .quad 0xbff0000000000000, 0x4000000000000000, 0x4014000000000000, 0xc022000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4014000000000000, 0xc022000000000000
Xx_297: .quad 0xbff0000000000000, 0x4000000000000000, 0x4014000000000000, 0xc022000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4014000000000000, 0xc022000000000000
Xx_298: .quad 0x4000000000000000, 0xc008000000000000, 0xc022000000000000, 0x402c000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc008000000000000, 0xc022000000000000, 0x402c000000000000
Xx_299: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc010000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc010000000000000, 0x4014000000000000
Xx_300: .quad 0xbff0000000000000, 0x4008000000000000, 0x4014000000000000, 0xc02c000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4014000000000000, 0xc02c000000000000
Xx_301: .quad 0x4008000000000000, 0xc010000000000000, 0xc02c000000000000, 0x4033000000000000 # gcd_base_continued_fraction:106    .quad 0x4008000000000000, 0xc010000000000000, 0xc02c000000000000, 0x4033000000000000
Xx_302: .quad 0xbff0000000000000, 0x4010000000000000, 0x4014000000000000, 0xc033000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4010000000000000, 0x4014000000000000, 0xc033000000000000
Xx_303: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc010000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc010000000000000, 0x4014000000000000
Xx_304: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc010000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc010000000000000, 0x4014000000000000
Xx_305: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc010000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc010000000000000, 0x4014000000000000
Xx_306: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc010000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc010000000000000, 0x4014000000000000
Xx_307: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc010000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc010000000000000, 0x4014000000000000
Xx_308: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc010000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc010000000000000, 0x4014000000000000
Xx_309: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc010000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc010000000000000, 0x4014000000000000
Xx_310: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc014000000000000
Xx_311: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc014000000000000
Xx_312: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc014000000000000
Xx_313: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc014000000000000
Xx_314: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc014000000000000
Xx_315: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc014000000000000
Xx_316: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc014000000000000
Xx_317: .quad 0x3ff0000000000000, 0xc010000000000000, 0xc014000000000000, 0x4035000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc010000000000000, 0xc014000000000000, 0x4035000000000000
Xx_318: .quad 0xc008000000000000, 0x4010000000000000, 0x4030000000000000, 0xc035000000000000 # gcd_base_continued_fraction:106    .quad 0xc008000000000000, 0x4010000000000000, 0x4030000000000000, 0xc035000000000000
Xx_319: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc014000000000000, 0x4030000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc014000000000000, 0x4030000000000000
Xx_320: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc014000000000000
Xx_321: .quad 0xc000000000000000, 0x4008000000000000, 0x4026000000000000, 0xc030000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x4008000000000000, 0x4026000000000000, 0xc030000000000000
Xx_322: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc014000000000000, 0x4026000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc014000000000000, 0x4026000000000000
Xx_323: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc014000000000000, 0x4026000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc014000000000000, 0x4026000000000000
Xx_324: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc014000000000000, 0x4026000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc014000000000000, 0x4026000000000000
Xx_325: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc014000000000000, 0x4026000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc014000000000000, 0x4026000000000000
Xx_326: .quad 0xbff0000000000000, 0x4000000000000000, 0x4018000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4018000000000000, 0xc026000000000000
Xx_327: .quad 0xbff0000000000000, 0x4000000000000000, 0x4018000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4018000000000000, 0xc026000000000000
Xx_328: .quad 0xbff0000000000000, 0x4000000000000000, 0x4018000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4018000000000000, 0xc026000000000000
Xx_329: .quad 0xbff0000000000000, 0x4000000000000000, 0x4018000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4018000000000000, 0xc026000000000000
Xx_330: .quad 0x4000000000000000, 0xc008000000000000, 0xc026000000000000, 0x4031000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc008000000000000, 0xc026000000000000, 0x4031000000000000
Xx_331: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc014000000000000, 0x4018000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc014000000000000, 0x4018000000000000
Xx_332: .quad 0xbff0000000000000, 0x4008000000000000, 0x4018000000000000, 0xc031000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4018000000000000, 0xc031000000000000
Xx_333: .quad 0x4008000000000000, 0xc010000000000000, 0xc031000000000000, 0x4037000000000000 # gcd_base_continued_fraction:106    .quad 0x4008000000000000, 0xc010000000000000, 0xc031000000000000, 0x4037000000000000
Xx_334: .quad 0xbff0000000000000, 0x4010000000000000, 0x4018000000000000, 0xc037000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4010000000000000, 0x4018000000000000, 0xc037000000000000
Xx_335: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc014000000000000, 0x4018000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc014000000000000, 0x4018000000000000
Xx_336: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc014000000000000, 0x4018000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc014000000000000, 0x4018000000000000
Xx_337: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc014000000000000, 0x4018000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc014000000000000, 0x4018000000000000
Xx_338: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc014000000000000, 0x4018000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc014000000000000, 0x4018000000000000
Xx_339: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc014000000000000, 0x4018000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc014000000000000, 0x4018000000000000
Xx_340: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc014000000000000, 0x4018000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc014000000000000, 0x4018000000000000
Xx_341: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc014000000000000, 0x4018000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc014000000000000, 0x4018000000000000
Xx_342: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc018000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc018000000000000
Xx_343: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc018000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc018000000000000
Xx_344: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc018000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc018000000000000
Xx_345: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc018000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc018000000000000
Xx_346: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc018000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc018000000000000
Xx_347: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc018000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc018000000000000
Xx_348: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc018000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc018000000000000
Xx_349: .quad 0x3ff0000000000000, 0xc010000000000000, 0xc018000000000000, 0x4039000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc010000000000000, 0xc018000000000000, 0x4039000000000000
Xx_350: .quad 0xc008000000000000, 0x4010000000000000, 0x4033000000000000, 0xc039000000000000 # gcd_base_continued_fraction:106    .quad 0xc008000000000000, 0x4010000000000000, 0x4033000000000000, 0xc039000000000000
Xx_351: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc018000000000000, 0x4033000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc018000000000000, 0x4033000000000000
Xx_352: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc018000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc018000000000000
Xx_353: .quad 0xc000000000000000, 0x4008000000000000, 0x402a000000000000, 0xc033000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x4008000000000000, 0x402a000000000000, 0xc033000000000000
Xx_354: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc018000000000000, 0x402a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc018000000000000, 0x402a000000000000
Xx_355: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc018000000000000, 0x402a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc018000000000000, 0x402a000000000000
Xx_356: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc018000000000000, 0x402a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc018000000000000, 0x402a000000000000
Xx_357: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc018000000000000, 0x402a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc018000000000000, 0x402a000000000000
Xx_358: .quad 0xbff0000000000000, 0x4000000000000000, 0x401c000000000000, 0xc02a000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x401c000000000000, 0xc02a000000000000
Xx_359: .quad 0xbff0000000000000, 0x4000000000000000, 0x401c000000000000, 0xc02a000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x401c000000000000, 0xc02a000000000000
Xx_360: .quad 0xbff0000000000000, 0x4000000000000000, 0x401c000000000000, 0xc02a000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x401c000000000000, 0xc02a000000000000
Xx_361: .quad 0xbff0000000000000, 0x4000000000000000, 0x401c000000000000, 0xc02a000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x401c000000000000, 0xc02a000000000000
Xx_362: .quad 0x4000000000000000, 0xc008000000000000, 0xc02a000000000000, 0x4034000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc008000000000000, 0xc02a000000000000, 0x4034000000000000
Xx_363: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc018000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc018000000000000, 0x401c000000000000
Xx_364: .quad 0xbff0000000000000, 0x4008000000000000, 0x401c000000000000, 0xc034000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x401c000000000000, 0xc034000000000000
Xx_365: .quad 0x4008000000000000, 0xc010000000000000, 0xc034000000000000, 0x403b000000000000 # gcd_base_continued_fraction:106    .quad 0x4008000000000000, 0xc010000000000000, 0xc034000000000000, 0x403b000000000000
Xx_366: .quad 0xbff0000000000000, 0x4010000000000000, 0x401c000000000000, 0xc03b000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4010000000000000, 0x401c000000000000, 0xc03b000000000000
Xx_367: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc018000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc018000000000000, 0x401c000000000000
Xx_368: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc018000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc018000000000000, 0x401c000000000000
Xx_369: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc018000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc018000000000000, 0x401c000000000000
Xx_370: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc018000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc018000000000000, 0x401c000000000000
Xx_371: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc018000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc018000000000000, 0x401c000000000000
Xx_372: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc018000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc018000000000000, 0x401c000000000000
Xx_373: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc018000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc018000000000000, 0x401c000000000000
Xx_374: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc01c000000000000
Xx_375: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc01c000000000000
Xx_376: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc01c000000000000
Xx_377: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc01c000000000000
Xx_378: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc01c000000000000
Xx_379: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc01c000000000000
Xx_380: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc01c000000000000
Xx_381: .quad 0x3ff0000000000000, 0xc010000000000000, 0xc01c000000000000, 0x403d000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc010000000000000, 0xc01c000000000000, 0x403d000000000000
Xx_382: .quad 0xc008000000000000, 0x4010000000000000, 0x4036000000000000, 0xc03d000000000000 # gcd_base_continued_fraction:106    .quad 0xc008000000000000, 0x4010000000000000, 0x4036000000000000, 0xc03d000000000000
Xx_383: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc01c000000000000, 0x4036000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc01c000000000000, 0x4036000000000000
Xx_384: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc01c000000000000
Xx_385: .quad 0xc000000000000000, 0x4008000000000000, 0x402e000000000000, 0xc036000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x4008000000000000, 0x402e000000000000, 0xc036000000000000
Xx_386: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc01c000000000000, 0x402e000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc01c000000000000, 0x402e000000000000
Xx_387: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc01c000000000000, 0x402e000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc01c000000000000, 0x402e000000000000
Xx_388: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc01c000000000000, 0x402e000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc01c000000000000, 0x402e000000000000
Xx_389: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc01c000000000000, 0x402e000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc01c000000000000, 0x402e000000000000
Xx_390: .quad 0xbff0000000000000, 0x4000000000000000, 0x4020000000000000, 0xc02e000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4020000000000000, 0xc02e000000000000
Xx_391: .quad 0xbff0000000000000, 0x4000000000000000, 0x4020000000000000, 0xc02e000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4020000000000000, 0xc02e000000000000
Xx_392: .quad 0xbff0000000000000, 0x4000000000000000, 0x4020000000000000, 0xc02e000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4020000000000000, 0xc02e000000000000
Xx_393: .quad 0xbff0000000000000, 0x4000000000000000, 0x4020000000000000, 0xc02e000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4020000000000000, 0xc02e000000000000
Xx_394: .quad 0x4000000000000000, 0xc008000000000000, 0xc02e000000000000, 0x4037000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc008000000000000, 0xc02e000000000000, 0x4037000000000000
Xx_395: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc01c000000000000, 0x4020000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc01c000000000000, 0x4020000000000000
Xx_396: .quad 0xbff0000000000000, 0x4008000000000000, 0x4020000000000000, 0xc037000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4020000000000000, 0xc037000000000000
Xx_397: .quad 0x4008000000000000, 0xc010000000000000, 0xc037000000000000, 0x403f000000000000 # gcd_base_continued_fraction:106    .quad 0x4008000000000000, 0xc010000000000000, 0xc037000000000000, 0x403f000000000000
Xx_398: .quad 0xbff0000000000000, 0x4010000000000000, 0x4020000000000000, 0xc03f000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4010000000000000, 0x4020000000000000, 0xc03f000000000000
Xx_399: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc01c000000000000, 0x4020000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc01c000000000000, 0x4020000000000000
Xx_400: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc01c000000000000, 0x4020000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc01c000000000000, 0x4020000000000000
Xx_401: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc01c000000000000, 0x4020000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc01c000000000000, 0x4020000000000000
Xx_402: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc01c000000000000, 0x4020000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc01c000000000000, 0x4020000000000000
Xx_403: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc01c000000000000, 0x4020000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc01c000000000000, 0x4020000000000000
Xx_404: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc01c000000000000, 0x4020000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc01c000000000000, 0x4020000000000000
Xx_405: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc01c000000000000, 0x4020000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc01c000000000000, 0x4020000000000000
Xx_406: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc020000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc020000000000000
Xx_407: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc020000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc020000000000000
Xx_408: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc020000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc020000000000000
Xx_409: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc020000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc020000000000000
Xx_410: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc020000000000000, 0x4039000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc020000000000000, 0x4039000000000000
Xx_411: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc020000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc020000000000000
Xx_412: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc020000000000000, 0x4031000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc020000000000000, 0x4031000000000000
Xx_413: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc020000000000000, 0x4031000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc020000000000000, 0x4031000000000000
Xx_414: .quad 0xbff0000000000000, 0x4000000000000000, 0x4022000000000000, 0xc031000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4022000000000000, 0xc031000000000000
Xx_415: .quad 0xbff0000000000000, 0x4000000000000000, 0x4022000000000000, 0xc031000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4022000000000000, 0xc031000000000000
Xx_416: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc020000000000000, 0x4022000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc020000000000000, 0x4022000000000000
Xx_417: .quad 0xbff0000000000000, 0x4008000000000000, 0x4022000000000000, 0xc03a000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4022000000000000, 0xc03a000000000000
Xx_418: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc020000000000000, 0x4022000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc020000000000000, 0x4022000000000000
Xx_419: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc020000000000000, 0x4022000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc020000000000000, 0x4022000000000000
Xx_420: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc020000000000000, 0x4022000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc020000000000000, 0x4022000000000000
Xx_421: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc020000000000000, 0x4022000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc020000000000000, 0x4022000000000000
Xx_422: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc022000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc022000000000000
Xx_423: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc022000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc022000000000000
Xx_424: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc022000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc022000000000000
Xx_425: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc022000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc022000000000000
Xx_426: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc022000000000000, 0x403c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc022000000000000, 0x403c000000000000
Xx_427: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc022000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc022000000000000
Xx_428: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc022000000000000, 0x4033000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc022000000000000, 0x4033000000000000
Xx_429: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc022000000000000, 0x4033000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc022000000000000, 0x4033000000000000
Xx_430: .quad 0xbff0000000000000, 0x4000000000000000, 0x4024000000000000, 0xc033000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4024000000000000, 0xc033000000000000
Xx_431: .quad 0xbff0000000000000, 0x4000000000000000, 0x4024000000000000, 0xc033000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4024000000000000, 0xc033000000000000
Xx_432: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc022000000000000, 0x4024000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc022000000000000, 0x4024000000000000
Xx_433: .quad 0xbff0000000000000, 0x4008000000000000, 0x4024000000000000, 0xc03d000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4024000000000000, 0xc03d000000000000
Xx_434: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc022000000000000, 0x4024000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc022000000000000, 0x4024000000000000
Xx_435: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc022000000000000, 0x4024000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc022000000000000, 0x4024000000000000
Xx_436: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc022000000000000, 0x4024000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc022000000000000, 0x4024000000000000
Xx_437: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc022000000000000, 0x4024000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc022000000000000, 0x4024000000000000
Xx_438: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc024000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc024000000000000
Xx_439: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc024000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc024000000000000
Xx_440: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc024000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc024000000000000
Xx_441: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc024000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc024000000000000
Xx_442: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc024000000000000, 0x403f000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc024000000000000, 0x403f000000000000
Xx_443: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc024000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc024000000000000
Xx_444: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc024000000000000, 0x4035000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc024000000000000, 0x4035000000000000
Xx_445: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc024000000000000, 0x4035000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc024000000000000, 0x4035000000000000
Xx_446: .quad 0xbff0000000000000, 0x4000000000000000, 0x4026000000000000, 0xc035000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4026000000000000, 0xc035000000000000
Xx_447: .quad 0xbff0000000000000, 0x4000000000000000, 0x4026000000000000, 0xc035000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4026000000000000, 0xc035000000000000
Xx_448: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc024000000000000, 0x4026000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc024000000000000, 0x4026000000000000
Xx_449: .quad 0xbff0000000000000, 0x4008000000000000, 0x4026000000000000, 0xc040000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4026000000000000, 0xc040000000000000
Xx_450: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc024000000000000, 0x4026000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc024000000000000, 0x4026000000000000
Xx_451: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc024000000000000, 0x4026000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc024000000000000, 0x4026000000000000
Xx_452: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc024000000000000, 0x4026000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc024000000000000, 0x4026000000000000
Xx_453: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc024000000000000, 0x4026000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc024000000000000, 0x4026000000000000
Xx_454: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc026000000000000
Xx_455: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc026000000000000
Xx_456: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc026000000000000
Xx_457: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc026000000000000
Xx_458: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc026000000000000, 0x4041000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc026000000000000, 0x4041000000000000
Xx_459: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc026000000000000
Xx_460: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc026000000000000, 0x4037000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc026000000000000, 0x4037000000000000
Xx_461: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc026000000000000, 0x4037000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc026000000000000, 0x4037000000000000
Xx_462: .quad 0xbff0000000000000, 0x4000000000000000, 0x4028000000000000, 0xc037000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4028000000000000, 0xc037000000000000
Xx_463: .quad 0xbff0000000000000, 0x4000000000000000, 0x4028000000000000, 0xc037000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4028000000000000, 0xc037000000000000
Xx_464: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc026000000000000, 0x4028000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc026000000000000, 0x4028000000000000
Xx_465: .quad 0xbff0000000000000, 0x4008000000000000, 0x4028000000000000, 0xc041800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4028000000000000, 0xc041800000000000
Xx_466: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc026000000000000, 0x4028000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc026000000000000, 0x4028000000000000
Xx_467: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc026000000000000, 0x4028000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc026000000000000, 0x4028000000000000
Xx_468: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc026000000000000, 0x4028000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc026000000000000, 0x4028000000000000
Xx_469: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc026000000000000, 0x4028000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc026000000000000, 0x4028000000000000
Xx_470: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc028000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc028000000000000
Xx_471: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc028000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc028000000000000
Xx_472: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc028000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc028000000000000
Xx_473: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc028000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc028000000000000
Xx_474: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc028000000000000, 0x4042800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc028000000000000, 0x4042800000000000
Xx_475: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc028000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc028000000000000
Xx_476: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc028000000000000, 0x4039000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc028000000000000, 0x4039000000000000
Xx_477: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc028000000000000, 0x4039000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc028000000000000, 0x4039000000000000
Xx_478: .quad 0xbff0000000000000, 0x4000000000000000, 0x402a000000000000, 0xc039000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x402a000000000000, 0xc039000000000000
Xx_479: .quad 0xbff0000000000000, 0x4000000000000000, 0x402a000000000000, 0xc039000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x402a000000000000, 0xc039000000000000
Xx_480: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc028000000000000, 0x402a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc028000000000000, 0x402a000000000000
Xx_481: .quad 0xbff0000000000000, 0x4008000000000000, 0x402a000000000000, 0xc043000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x402a000000000000, 0xc043000000000000
Xx_482: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc028000000000000, 0x402a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc028000000000000, 0x402a000000000000
Xx_483: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc028000000000000, 0x402a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc028000000000000, 0x402a000000000000
Xx_484: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc028000000000000, 0x402a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc028000000000000, 0x402a000000000000
Xx_485: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc028000000000000, 0x402a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc028000000000000, 0x402a000000000000
Xx_486: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02a000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02a000000000000
Xx_487: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02a000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02a000000000000
Xx_488: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02a000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02a000000000000
Xx_489: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02a000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02a000000000000
Xx_490: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc02a000000000000, 0x4044000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc02a000000000000, 0x4044000000000000
Xx_491: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02a000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02a000000000000
Xx_492: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc02a000000000000, 0x403b000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc02a000000000000, 0x403b000000000000
Xx_493: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc02a000000000000, 0x403b000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc02a000000000000, 0x403b000000000000
Xx_494: .quad 0xbff0000000000000, 0x4000000000000000, 0x402c000000000000, 0xc03b000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x402c000000000000, 0xc03b000000000000
Xx_495: .quad 0xbff0000000000000, 0x4000000000000000, 0x402c000000000000, 0xc03b000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x402c000000000000, 0xc03b000000000000
Xx_496: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02a000000000000, 0x402c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02a000000000000, 0x402c000000000000
Xx_497: .quad 0xbff0000000000000, 0x4008000000000000, 0x402c000000000000, 0xc044800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x402c000000000000, 0xc044800000000000
Xx_498: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02a000000000000, 0x402c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02a000000000000, 0x402c000000000000
Xx_499: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02a000000000000, 0x402c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02a000000000000, 0x402c000000000000
Xx_500: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02a000000000000, 0x402c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02a000000000000, 0x402c000000000000
Xx_501: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02a000000000000, 0x402c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02a000000000000, 0x402c000000000000
Xx_502: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02c000000000000
Xx_503: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02c000000000000
Xx_504: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02c000000000000
Xx_505: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02c000000000000
Xx_506: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc02c000000000000, 0x4045800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc02c000000000000, 0x4045800000000000
Xx_507: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02c000000000000
Xx_508: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc02c000000000000, 0x403d000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc02c000000000000, 0x403d000000000000
Xx_509: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc02c000000000000, 0x403d000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc02c000000000000, 0x403d000000000000
Xx_510: .quad 0xbff0000000000000, 0x4000000000000000, 0x402e000000000000, 0xc03d000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x402e000000000000, 0xc03d000000000000
Xx_511: .quad 0xbff0000000000000, 0x4000000000000000, 0x402e000000000000, 0xc03d000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x402e000000000000, 0xc03d000000000000
Xx_512: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02c000000000000, 0x402e000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02c000000000000, 0x402e000000000000
Xx_513: .quad 0xbff0000000000000, 0x4008000000000000, 0x402e000000000000, 0xc046000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x402e000000000000, 0xc046000000000000
Xx_514: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02c000000000000, 0x402e000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02c000000000000, 0x402e000000000000
Xx_515: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02c000000000000, 0x402e000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02c000000000000, 0x402e000000000000
Xx_516: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02c000000000000, 0x402e000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02c000000000000, 0x402e000000000000
Xx_517: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02c000000000000, 0x402e000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02c000000000000, 0x402e000000000000
Xx_518: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02e000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02e000000000000
Xx_519: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02e000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02e000000000000
Xx_520: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02e000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02e000000000000
Xx_521: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02e000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02e000000000000
Xx_522: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc02e000000000000, 0x4047000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc02e000000000000, 0x4047000000000000
Xx_523: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02e000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02e000000000000
Xx_524: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc02e000000000000, 0x403f000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc02e000000000000, 0x403f000000000000
Xx_525: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc02e000000000000, 0x403f000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc02e000000000000, 0x403f000000000000
Xx_526: .quad 0xbff0000000000000, 0x4000000000000000, 0x4030000000000000, 0xc03f000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4030000000000000, 0xc03f000000000000
Xx_527: .quad 0xbff0000000000000, 0x4000000000000000, 0x4030000000000000, 0xc03f000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4030000000000000, 0xc03f000000000000
Xx_528: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02e000000000000, 0x4030000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02e000000000000, 0x4030000000000000
Xx_529: .quad 0xbff0000000000000, 0x4008000000000000, 0x4030000000000000, 0xc047800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4030000000000000, 0xc047800000000000
Xx_530: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02e000000000000, 0x4030000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02e000000000000, 0x4030000000000000
Xx_531: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02e000000000000, 0x4030000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02e000000000000, 0x4030000000000000
Xx_532: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02e000000000000, 0x4030000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02e000000000000, 0x4030000000000000
Xx_533: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02e000000000000, 0x4030000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02e000000000000, 0x4030000000000000
Xx_534: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc030000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc030000000000000
Xx_535: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc030000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc030000000000000
Xx_536: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc030000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc030000000000000
Xx_537: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc030000000000000, 0x4040800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc030000000000000, 0x4040800000000000
Xx_538: .quad 0xbff0000000000000, 0x4000000000000000, 0x4031000000000000, 0xc040800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4031000000000000, 0xc040800000000000
Xx_539: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc030000000000000, 0x4031000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc030000000000000, 0x4031000000000000
Xx_540: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc030000000000000, 0x4031000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc030000000000000, 0x4031000000000000
Xx_541: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc030000000000000, 0x4031000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc030000000000000, 0x4031000000000000
Xx_542: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc031000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc031000000000000
Xx_543: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc031000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc031000000000000
Xx_544: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc031000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc031000000000000
Xx_545: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc031000000000000, 0x4041800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc031000000000000, 0x4041800000000000
Xx_546: .quad 0xbff0000000000000, 0x4000000000000000, 0x4032000000000000, 0xc041800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4032000000000000, 0xc041800000000000
Xx_547: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc031000000000000, 0x4032000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc031000000000000, 0x4032000000000000
Xx_548: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc031000000000000, 0x4032000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc031000000000000, 0x4032000000000000
Xx_549: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc031000000000000, 0x4032000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc031000000000000, 0x4032000000000000
Xx_550: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc032000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc032000000000000
Xx_551: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc032000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc032000000000000
Xx_552: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc032000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc032000000000000
Xx_553: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc032000000000000, 0x4042800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc032000000000000, 0x4042800000000000
Xx_554: .quad 0xbff0000000000000, 0x4000000000000000, 0x4033000000000000, 0xc042800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4033000000000000, 0xc042800000000000
Xx_555: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc032000000000000, 0x4033000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc032000000000000, 0x4033000000000000
Xx_556: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc032000000000000, 0x4033000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc032000000000000, 0x4033000000000000
Xx_557: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc032000000000000, 0x4033000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc032000000000000, 0x4033000000000000
Xx_558: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc033000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc033000000000000
Xx_559: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc033000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc033000000000000
Xx_560: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc033000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc033000000000000
Xx_561: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc033000000000000, 0x4043800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc033000000000000, 0x4043800000000000
Xx_562: .quad 0xbff0000000000000, 0x4000000000000000, 0x4034000000000000, 0xc043800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4034000000000000, 0xc043800000000000
Xx_563: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc033000000000000, 0x4034000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc033000000000000, 0x4034000000000000
Xx_564: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc033000000000000, 0x4034000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc033000000000000, 0x4034000000000000
Xx_565: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc033000000000000, 0x4034000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc033000000000000, 0x4034000000000000
Xx_566: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc034000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc034000000000000
Xx_567: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc034000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc034000000000000
Xx_568: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc034000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc034000000000000
Xx_569: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc034000000000000, 0x4044800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc034000000000000, 0x4044800000000000
Xx_570: .quad 0xbff0000000000000, 0x4000000000000000, 0x4035000000000000, 0xc044800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4035000000000000, 0xc044800000000000
Xx_571: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc034000000000000, 0x4035000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc034000000000000, 0x4035000000000000
Xx_572: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc034000000000000, 0x4035000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc034000000000000, 0x4035000000000000
Xx_573: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc034000000000000, 0x4035000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc034000000000000, 0x4035000000000000
Xx_574: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc035000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc035000000000000
Xx_575: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc035000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc035000000000000
Xx_576: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc035000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc035000000000000
Xx_577: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc035000000000000, 0x4045800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc035000000000000, 0x4045800000000000
Xx_578: .quad 0xbff0000000000000, 0x4000000000000000, 0x4036000000000000, 0xc045800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4036000000000000, 0xc045800000000000
Xx_579: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc035000000000000, 0x4036000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc035000000000000, 0x4036000000000000
Xx_580: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc035000000000000, 0x4036000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc035000000000000, 0x4036000000000000
Xx_581: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc035000000000000, 0x4036000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc035000000000000, 0x4036000000000000
Xx_582: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc036000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc036000000000000
Xx_583: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc036000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc036000000000000
Xx_584: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc036000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc036000000000000
Xx_585: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc036000000000000, 0x4046800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc036000000000000, 0x4046800000000000
Xx_586: .quad 0xbff0000000000000, 0x4000000000000000, 0x4037000000000000, 0xc046800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4037000000000000, 0xc046800000000000
Xx_587: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc036000000000000, 0x4037000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc036000000000000, 0x4037000000000000
Xx_588: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc036000000000000, 0x4037000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc036000000000000, 0x4037000000000000
Xx_589: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc036000000000000, 0x4037000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc036000000000000, 0x4037000000000000
Xx_590: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc037000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc037000000000000
Xx_591: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc037000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc037000000000000
Xx_592: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc037000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc037000000000000
Xx_593: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc037000000000000, 0x4047800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc037000000000000, 0x4047800000000000
Xx_594: .quad 0xbff0000000000000, 0x4000000000000000, 0x4038000000000000, 0xc047800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4038000000000000, 0xc047800000000000
Xx_595: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc037000000000000, 0x4038000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc037000000000000, 0x4038000000000000
Xx_596: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc037000000000000, 0x4038000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc037000000000000, 0x4038000000000000
Xx_597: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc037000000000000, 0x4038000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc037000000000000, 0x4038000000000000
Xx_598: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc038000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc038000000000000
Xx_599: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc038000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc038000000000000
Xx_600: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc038000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc038000000000000
Xx_601: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc038000000000000, 0x4048800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc038000000000000, 0x4048800000000000
Xx_602: .quad 0xbff0000000000000, 0x4000000000000000, 0x4039000000000000, 0xc048800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4039000000000000, 0xc048800000000000
Xx_603: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc038000000000000, 0x4039000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc038000000000000, 0x4039000000000000
Xx_604: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc038000000000000, 0x4039000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc038000000000000, 0x4039000000000000
Xx_605: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc038000000000000, 0x4039000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc038000000000000, 0x4039000000000000
Xx_606: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc039000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc039000000000000
Xx_607: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc039000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc039000000000000
Xx_608: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc039000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc039000000000000
Xx_609: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc039000000000000, 0x4049800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc039000000000000, 0x4049800000000000
Xx_610: .quad 0xbff0000000000000, 0x4000000000000000, 0x403a000000000000, 0xc049800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x403a000000000000, 0xc049800000000000
Xx_611: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc039000000000000, 0x403a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc039000000000000, 0x403a000000000000
Xx_612: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc039000000000000, 0x403a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc039000000000000, 0x403a000000000000
Xx_613: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc039000000000000, 0x403a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc039000000000000, 0x403a000000000000
Xx_614: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03a000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03a000000000000
Xx_615: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03a000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03a000000000000
Xx_616: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03a000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03a000000000000
Xx_617: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc03a000000000000, 0x404a800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc03a000000000000, 0x404a800000000000
Xx_618: .quad 0xbff0000000000000, 0x4000000000000000, 0x403b000000000000, 0xc04a800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x403b000000000000, 0xc04a800000000000
Xx_619: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03a000000000000, 0x403b000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03a000000000000, 0x403b000000000000
Xx_620: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03a000000000000, 0x403b000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03a000000000000, 0x403b000000000000
Xx_621: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03a000000000000, 0x403b000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03a000000000000, 0x403b000000000000
Xx_622: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03b000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03b000000000000
Xx_623: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03b000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03b000000000000
Xx_624: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03b000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03b000000000000
Xx_625: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc03b000000000000, 0x404b800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc03b000000000000, 0x404b800000000000
Xx_626: .quad 0xbff0000000000000, 0x4000000000000000, 0x403c000000000000, 0xc04b800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x403c000000000000, 0xc04b800000000000
Xx_627: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03b000000000000, 0x403c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03b000000000000, 0x403c000000000000
Xx_628: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03b000000000000, 0x403c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03b000000000000, 0x403c000000000000
Xx_629: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03b000000000000, 0x403c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03b000000000000, 0x403c000000000000
Xx_630: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03c000000000000
Xx_631: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03c000000000000
Xx_632: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03c000000000000
Xx_633: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc03c000000000000, 0x404c800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc03c000000000000, 0x404c800000000000
Xx_634: .quad 0xbff0000000000000, 0x4000000000000000, 0x403d000000000000, 0xc04c800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x403d000000000000, 0xc04c800000000000
Xx_635: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03c000000000000, 0x403d000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03c000000000000, 0x403d000000000000
Xx_636: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03c000000000000, 0x403d000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03c000000000000, 0x403d000000000000
Xx_637: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03c000000000000, 0x403d000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03c000000000000, 0x403d000000000000
Xx_638: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03d000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03d000000000000
Xx_639: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03d000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03d000000000000
Xx_640: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03d000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03d000000000000
Xx_641: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc03d000000000000, 0x404d800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc03d000000000000, 0x404d800000000000
Xx_642: .quad 0xbff0000000000000, 0x4000000000000000, 0x403e000000000000, 0xc04d800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x403e000000000000, 0xc04d800000000000
Xx_643: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03d000000000000, 0x403e000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03d000000000000, 0x403e000000000000
Xx_644: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03d000000000000, 0x403e000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03d000000000000, 0x403e000000000000
Xx_645: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03d000000000000, 0x403e000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03d000000000000, 0x403e000000000000
Xx_646: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03e000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03e000000000000
Xx_647: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03e000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03e000000000000
Xx_648: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03e000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03e000000000000
Xx_649: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc03e000000000000, 0x404e800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc03e000000000000, 0x404e800000000000
Xx_650: .quad 0xbff0000000000000, 0x4000000000000000, 0x403f000000000000, 0xc04e800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x403f000000000000, 0xc04e800000000000
Xx_651: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03e000000000000, 0x403f000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03e000000000000, 0x403f000000000000
Xx_652: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03e000000000000, 0x403f000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03e000000000000, 0x403f000000000000
Xx_653: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03e000000000000, 0x403f000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03e000000000000, 0x403f000000000000
Xx_654: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03f000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03f000000000000
Xx_655: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03f000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03f000000000000
Xx_656: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03f000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03f000000000000
Xx_657: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc03f000000000000, 0x404f800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc03f000000000000, 0x404f800000000000
Xx_658: .quad 0xbff0000000000000, 0x4000000000000000, 0x4040000000000000, 0xc04f800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4040000000000000, 0xc04f800000000000
Xx_659: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03f000000000000, 0x4040000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03f000000000000, 0x4040000000000000
Xx_660: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03f000000000000, 0x4040000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03f000000000000, 0x4040000000000000
Xx_661: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03f000000000000, 0x4040000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03f000000000000, 0x4040000000000000
Xx_662: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc040000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc040000000000000
Xx_663: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc040000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc040000000000000
Xx_664: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc040000000000000, 0x4040800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc040000000000000, 0x4040800000000000
Xx_665: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc040000000000000, 0x4040800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc040000000000000, 0x4040800000000000
Xx_666: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc040800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc040800000000000
Xx_667: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc040800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc040800000000000
Xx_668: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc040800000000000, 0x4041000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc040800000000000, 0x4041000000000000
Xx_669: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc040800000000000, 0x4041000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc040800000000000, 0x4041000000000000
Xx_670: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc041000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc041000000000000
Xx_671: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc041000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc041000000000000
Xx_672: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc041000000000000, 0x4041800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc041000000000000, 0x4041800000000000
Xx_673: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc041000000000000, 0x4041800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc041000000000000, 0x4041800000000000
Xx_674: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc041800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc041800000000000
Xx_675: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc041800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc041800000000000
Xx_676: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc041800000000000, 0x4042000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc041800000000000, 0x4042000000000000
Xx_677: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc041800000000000, 0x4042000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc041800000000000, 0x4042000000000000
Xx_678: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc042000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc042000000000000
Xx_679: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc042000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc042000000000000
Xx_680: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc042000000000000, 0x4042800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc042000000000000, 0x4042800000000000
Xx_681: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc042000000000000, 0x4042800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc042000000000000, 0x4042800000000000
Xx_682: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc042800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc042800000000000
Xx_683: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc042800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc042800000000000
Xx_684: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc042800000000000, 0x4043000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc042800000000000, 0x4043000000000000
Xx_685: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc042800000000000, 0x4043000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc042800000000000, 0x4043000000000000
Xx_686: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc043000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc043000000000000
Xx_687: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc043000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc043000000000000
Xx_688: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc043000000000000, 0x4043800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc043000000000000, 0x4043800000000000
Xx_689: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc043000000000000, 0x4043800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc043000000000000, 0x4043800000000000
Xx_690: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc043800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc043800000000000
Xx_691: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc043800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc043800000000000
Xx_692: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc043800000000000, 0x4044000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc043800000000000, 0x4044000000000000
Xx_693: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc043800000000000, 0x4044000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc043800000000000, 0x4044000000000000
Xx_694: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc044000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc044000000000000
Xx_695: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc044000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc044000000000000
Xx_696: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc044000000000000, 0x4044800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc044000000000000, 0x4044800000000000
Xx_697: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc044000000000000, 0x4044800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc044000000000000, 0x4044800000000000
Xx_698: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc044800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc044800000000000
Xx_699: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc044800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc044800000000000
Xx_700: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc044800000000000, 0x4045000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc044800000000000, 0x4045000000000000
Xx_701: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc044800000000000, 0x4045000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc044800000000000, 0x4045000000000000
Xx_702: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc045000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc045000000000000
Xx_703: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc045000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc045000000000000
Xx_704: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc045000000000000, 0x4045800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc045000000000000, 0x4045800000000000
Xx_705: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc045000000000000, 0x4045800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc045000000000000, 0x4045800000000000
Xx_706: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc045800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc045800000000000
Xx_707: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc045800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc045800000000000
Xx_708: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc045800000000000, 0x4046000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc045800000000000, 0x4046000000000000
Xx_709: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc045800000000000, 0x4046000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc045800000000000, 0x4046000000000000
Xx_710: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc046000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc046000000000000
Xx_711: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc046000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc046000000000000
Xx_712: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc046000000000000, 0x4046800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc046000000000000, 0x4046800000000000
Xx_713: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc046000000000000, 0x4046800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc046000000000000, 0x4046800000000000
Xx_714: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc046800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc046800000000000
Xx_715: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc046800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc046800000000000
Xx_716: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc046800000000000, 0x4047000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc046800000000000, 0x4047000000000000
Xx_717: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc046800000000000, 0x4047000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc046800000000000, 0x4047000000000000
Xx_718: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc047000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc047000000000000
Xx_719: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc047000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc047000000000000
Xx_720: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc047000000000000, 0x4047800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc047000000000000, 0x4047800000000000
Xx_721: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc047000000000000, 0x4047800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc047000000000000, 0x4047800000000000
Xx_722: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc047800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc047800000000000
Xx_723: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc047800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc047800000000000
Xx_724: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc047800000000000, 0x4048000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc047800000000000, 0x4048000000000000
Xx_725: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc047800000000000, 0x4048000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc047800000000000, 0x4048000000000000
Xx_726: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc048000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc048000000000000
Xx_727: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc048000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc048000000000000
Xx_728: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc048000000000000, 0x4048800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc048000000000000, 0x4048800000000000
Xx_729: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc048000000000000, 0x4048800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc048000000000000, 0x4048800000000000
Xx_730: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc048800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc048800000000000
Xx_731: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc048800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc048800000000000
Xx_732: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc048800000000000, 0x4049000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc048800000000000, 0x4049000000000000
Xx_733: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc048800000000000, 0x4049000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc048800000000000, 0x4049000000000000
Xx_734: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc049000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc049000000000000
Xx_735: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc049000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc049000000000000
Xx_736: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc049000000000000, 0x4049800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc049000000000000, 0x4049800000000000
Xx_737: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc049000000000000, 0x4049800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc049000000000000, 0x4049800000000000
Xx_738: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc049800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc049800000000000
Xx_739: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc049800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc049800000000000
Xx_740: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc049800000000000, 0x404a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc049800000000000, 0x404a000000000000
Xx_741: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc049800000000000, 0x404a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc049800000000000, 0x404a000000000000
Xx_742: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04a000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04a000000000000
Xx_743: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04a000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04a000000000000
Xx_744: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04a000000000000, 0x404a800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04a000000000000, 0x404a800000000000
Xx_745: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04a000000000000, 0x404a800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04a000000000000, 0x404a800000000000
Xx_746: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04a800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04a800000000000
Xx_747: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04a800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04a800000000000
Xx_748: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04a800000000000, 0x404b000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04a800000000000, 0x404b000000000000
Xx_749: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04a800000000000, 0x404b000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04a800000000000, 0x404b000000000000
Xx_750: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04b000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04b000000000000
Xx_751: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04b000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04b000000000000
Xx_752: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04b000000000000, 0x404b800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04b000000000000, 0x404b800000000000
Xx_753: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04b000000000000, 0x404b800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04b000000000000, 0x404b800000000000
Xx_754: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04b800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04b800000000000
Xx_755: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04b800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04b800000000000
Xx_756: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04b800000000000, 0x404c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04b800000000000, 0x404c000000000000
Xx_757: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04b800000000000, 0x404c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04b800000000000, 0x404c000000000000
Xx_758: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04c000000000000
Xx_759: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04c000000000000
Xx_760: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04c000000000000, 0x404c800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04c000000000000, 0x404c800000000000
Xx_761: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04c000000000000, 0x404c800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04c000000000000, 0x404c800000000000
Xx_762: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04c800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04c800000000000
Xx_763: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04c800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04c800000000000
Xx_764: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04c800000000000, 0x404d000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04c800000000000, 0x404d000000000000
Xx_765: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04c800000000000, 0x404d000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04c800000000000, 0x404d000000000000
Xx_766: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04d000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04d000000000000
Xx_767: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04d000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04d000000000000
Xx_768: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04d000000000000, 0x404d800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04d000000000000, 0x404d800000000000
Xx_769: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04d000000000000, 0x404d800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04d000000000000, 0x404d800000000000
Xx_770: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04d800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04d800000000000
Xx_771: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04d800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04d800000000000
Xx_772: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04d800000000000, 0x404e000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04d800000000000, 0x404e000000000000
Xx_773: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04d800000000000, 0x404e000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04d800000000000, 0x404e000000000000
Xx_774: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04e000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04e000000000000
Xx_775: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04e000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04e000000000000
Xx_776: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04e000000000000, 0x404e800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04e000000000000, 0x404e800000000000
Xx_777: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04e000000000000, 0x404e800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04e000000000000, 0x404e800000000000
Xx_778: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04e800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04e800000000000
Xx_779: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04e800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04e800000000000
Xx_780: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04e800000000000, 0x404f000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04e800000000000, 0x404f000000000000
Xx_781: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04e800000000000, 0x404f000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04e800000000000, 0x404f000000000000
Xx_782: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04f000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04f000000000000
Xx_783: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04f000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04f000000000000
Xx_784: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04f000000000000, 0x404f800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04f000000000000, 0x404f800000000000
Xx_785: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04f000000000000, 0x404f800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04f000000000000, 0x404f800000000000
Xx_786: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04f800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04f800000000000
Xx_787: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04f800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04f800000000000
Xx_788: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04f800000000000, 0x4050000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04f800000000000, 0x4050000000000000
Xx_789: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04f800000000000, 0x4050000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04f800000000000, 0x4050000000000000
Xx_790: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc050000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc050000000000000
Xx_791: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc050000000000000, 0x4050400000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc050000000000000, 0x4050400000000000
Xx_792: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc050400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc050400000000000
Xx_793: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc050400000000000, 0x4050800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc050400000000000, 0x4050800000000000
Xx_794: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc050800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc050800000000000
Xx_795: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc050800000000000, 0x4050c00000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc050800000000000, 0x4050c00000000000
Xx_796: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc050c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc050c00000000000
Xx_797: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc050c00000000000, 0x4051000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc050c00000000000, 0x4051000000000000
Xx_798: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc051000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc051000000000000
Xx_799: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc051000000000000, 0x4051400000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc051000000000000, 0x4051400000000000
Xx_800: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc051400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc051400000000000
Xx_801: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc051400000000000, 0x4051800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc051400000000000, 0x4051800000000000
Xx_802: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc051800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc051800000000000
Xx_803: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc051800000000000, 0x4051c00000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc051800000000000, 0x4051c00000000000
Xx_804: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc051c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc051c00000000000
Xx_805: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc051c00000000000, 0x4052000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc051c00000000000, 0x4052000000000000
Xx_806: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc052000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc052000000000000
Xx_807: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc052000000000000, 0x4052400000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc052000000000000, 0x4052400000000000
Xx_808: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc052400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc052400000000000
Xx_809: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc052400000000000, 0x4052800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc052400000000000, 0x4052800000000000
Xx_810: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc052800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc052800000000000
Xx_811: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc052800000000000, 0x4052c00000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc052800000000000, 0x4052c00000000000
Xx_812: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc052c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc052c00000000000
Xx_813: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc052c00000000000, 0x4053000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc052c00000000000, 0x4053000000000000
Xx_814: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc053000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc053000000000000
Xx_815: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc053000000000000, 0x4053400000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc053000000000000, 0x4053400000000000
Xx_816: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc053400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc053400000000000
Xx_817: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc053400000000000, 0x4053800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc053400000000000, 0x4053800000000000
Xx_818: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc053800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc053800000000000
Xx_819: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc053800000000000, 0x4053c00000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc053800000000000, 0x4053c00000000000
Xx_820: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc053c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc053c00000000000
Xx_821: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc053c00000000000, 0x4054000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc053c00000000000, 0x4054000000000000
Xx_822: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc054000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc054000000000000
Xx_823: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc054000000000000, 0x4054400000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc054000000000000, 0x4054400000000000
Xx_824: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc054400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc054400000000000
Xx_825: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc054400000000000, 0x4054800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc054400000000000, 0x4054800000000000
Xx_826: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc054800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc054800000000000
Xx_827: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc054800000000000, 0x4054c00000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc054800000000000, 0x4054c00000000000
Xx_828: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc054c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc054c00000000000
Xx_829: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc054c00000000000, 0x4055000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc054c00000000000, 0x4055000000000000
Xx_830: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc055000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc055000000000000
Xx_831: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc055000000000000, 0x4055400000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc055000000000000, 0x4055400000000000
Xx_832: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc055400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc055400000000000
Xx_833: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc055400000000000, 0x4055800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc055400000000000, 0x4055800000000000
Xx_834: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc055800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc055800000000000
Xx_835: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc055800000000000, 0x4055c00000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc055800000000000, 0x4055c00000000000
Xx_836: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc055c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc055c00000000000
Xx_837: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc055c00000000000, 0x4056000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc055c00000000000, 0x4056000000000000
Xx_838: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc056000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc056000000000000
Xx_839: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc056000000000000, 0x4056400000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc056000000000000, 0x4056400000000000
Xx_840: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc056400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc056400000000000
Xx_841: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc056400000000000, 0x4056800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc056400000000000, 0x4056800000000000
Xx_842: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc056800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc056800000000000
Xx_843: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc056800000000000, 0x4056c00000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc056800000000000, 0x4056c00000000000
Xx_844: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc056c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc056c00000000000
Xx_845: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc056c00000000000, 0x4057000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc056c00000000000, 0x4057000000000000
Xx_846: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc057000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc057000000000000
Xx_847: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc057000000000000, 0x4057400000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc057000000000000, 0x4057400000000000
Xx_848: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc057400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc057400000000000
Xx_849: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc057400000000000, 0x4057800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc057400000000000, 0x4057800000000000
Xx_850: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc057800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc057800000000000
Xx_851: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc057800000000000, 0x4057c00000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc057800000000000, 0x4057c00000000000
Xx_852: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc057c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc057c00000000000
Xx_853: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc057c00000000000, 0x4058000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc057c00000000000, 0x4058000000000000
Xx_854: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc058000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc058000000000000
Xx_855: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc058000000000000, 0x4058400000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc058000000000000, 0x4058400000000000
Xx_856: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc058400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc058400000000000
Xx_857: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc058400000000000, 0x4058800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc058400000000000, 0x4058800000000000
Xx_858: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc058800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc058800000000000
Xx_859: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc058800000000000, 0x4058c00000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc058800000000000, 0x4058c00000000000
Xx_860: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc058c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc058c00000000000
Xx_861: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc058c00000000000, 0x4059000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc058c00000000000, 0x4059000000000000
Xx_862: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc059000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc059000000000000
Xx_863: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc059000000000000, 0x4059400000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc059000000000000, 0x4059400000000000
Xx_864: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc059400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc059400000000000
Xx_865: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc059400000000000, 0x4059800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc059400000000000, 0x4059800000000000
Xx_866: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc059800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc059800000000000
Xx_867: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc059800000000000, 0x4059c00000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc059800000000000, 0x4059c00000000000
Xx_868: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc059c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc059c00000000000
Xx_869: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc059c00000000000, 0x405a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc059c00000000000, 0x405a000000000000
Xx_870: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05a000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05a000000000000
Xx_871: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05a000000000000, 0x405a400000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05a000000000000, 0x405a400000000000
Xx_872: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05a400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05a400000000000
Xx_873: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05a400000000000, 0x405a800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05a400000000000, 0x405a800000000000
Xx_874: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05a800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05a800000000000
Xx_875: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05a800000000000, 0x405ac00000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05a800000000000, 0x405ac00000000000
Xx_876: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05ac00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05ac00000000000
Xx_877: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05ac00000000000, 0x405b000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05ac00000000000, 0x405b000000000000
Xx_878: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05b000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05b000000000000
Xx_879: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05b000000000000, 0x405b400000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05b000000000000, 0x405b400000000000
Xx_880: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05b400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05b400000000000
Xx_881: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05b400000000000, 0x405b800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05b400000000000, 0x405b800000000000
Xx_882: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05b800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05b800000000000
Xx_883: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05b800000000000, 0x405bc00000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05b800000000000, 0x405bc00000000000
Xx_884: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05bc00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05bc00000000000
Xx_885: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05bc00000000000, 0x405c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05bc00000000000, 0x405c000000000000
Xx_886: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05c000000000000
Xx_887: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05c000000000000, 0x405c400000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05c000000000000, 0x405c400000000000
Xx_888: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05c400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05c400000000000
Xx_889: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05c400000000000, 0x405c800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05c400000000000, 0x405c800000000000
Xx_890: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05c800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05c800000000000
Xx_891: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05c800000000000, 0x405cc00000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05c800000000000, 0x405cc00000000000
Xx_892: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05cc00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05cc00000000000
Xx_893: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05cc00000000000, 0x405d000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05cc00000000000, 0x405d000000000000
Xx_894: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05d000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05d000000000000
Xx_895: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05d000000000000, 0x405d400000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05d000000000000, 0x405d400000000000
Xx_896: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05d400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05d400000000000
Xx_897: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05d400000000000, 0x405d800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05d400000000000, 0x405d800000000000
Xx_898: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05d800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05d800000000000
Xx_899: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05d800000000000, 0x405dc00000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05d800000000000, 0x405dc00000000000
Xx_900: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05dc00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05dc00000000000
Xx_901: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05dc00000000000, 0x405e000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05dc00000000000, 0x405e000000000000
Xx_902: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05e000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05e000000000000
Xx_903: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05e000000000000, 0x405e400000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05e000000000000, 0x405e400000000000
Xx_904: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05e400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05e400000000000
Xx_905: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05e400000000000, 0x405e800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05e400000000000, 0x405e800000000000
Xx_906: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05e800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05e800000000000
Xx_907: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05e800000000000, 0x405ec00000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05e800000000000, 0x405ec00000000000
Xx_908: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05ec00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05ec00000000000
Xx_909: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05ec00000000000, 0x405f000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05ec00000000000, 0x405f000000000000
Xx_910: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05f000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05f000000000000
Xx_911: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05f000000000000, 0x405f400000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05f000000000000, 0x405f400000000000
Xx_912: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05f400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05f400000000000
Xx_913: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05f400000000000, 0x405f800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05f400000000000, 0x405f800000000000
Xx_914: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05f800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05f800000000000
Xx_915: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05f800000000000, 0x405fc00000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05f800000000000, 0x405fc00000000000
Xx_916: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05fc00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05fc00000000000
Xx_917: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05fc00000000000, 0x4060000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05fc00000000000, 0x4060000000000000
Xx_918: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc060000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc060000000000000
Xx_919: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc060200000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc060200000000000
Xx_920: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc060400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc060400000000000
Xx_921: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc060600000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc060600000000000
Xx_922: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc060800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc060800000000000
Xx_923: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc060a00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc060a00000000000
Xx_924: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc060c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc060c00000000000
Xx_925: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc060e00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc060e00000000000
Xx_926: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc061000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc061000000000000
Xx_927: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc061200000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc061200000000000
Xx_928: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc061400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc061400000000000
Xx_929: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc061600000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc061600000000000
Xx_930: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc061800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc061800000000000
Xx_931: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc061a00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc061a00000000000
Xx_932: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc061c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc061c00000000000
Xx_933: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc061e00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc061e00000000000
Xx_934: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc062000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc062000000000000
Xx_935: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc062200000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc062200000000000
Xx_936: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc062400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc062400000000000
Xx_937: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc062600000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc062600000000000
Xx_938: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc062800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc062800000000000
Xx_939: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc062a00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc062a00000000000
Xx_940: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc062c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc062c00000000000
Xx_941: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc062e00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc062e00000000000
Xx_942: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc063000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc063000000000000
Xx_943: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc063200000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc063200000000000
Xx_944: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc063400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc063400000000000
Xx_945: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc063600000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc063600000000000
Xx_946: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc063800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc063800000000000
Xx_947: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc063a00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc063a00000000000
Xx_948: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc063c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc063c00000000000
Xx_949: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc063e00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc063e00000000000
Xx_950: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc064000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc064000000000000
Xx_951: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc064200000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc064200000000000
Xx_952: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc064400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc064400000000000
Xx_953: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc064600000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc064600000000000
Xx_954: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc064800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc064800000000000
Xx_955: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc064a00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc064a00000000000
Xx_956: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc064c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc064c00000000000
Xx_957: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc064e00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc064e00000000000
Xx_958: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc065000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc065000000000000
Xx_959: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc065200000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc065200000000000
Xx_960: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc065400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc065400000000000
Xx_961: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc065600000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc065600000000000
Xx_962: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc065800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc065800000000000
Xx_963: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc065a00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc065a00000000000
Xx_964: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc065c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc065c00000000000
Xx_965: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc065e00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc065e00000000000
Xx_966: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc066000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc066000000000000
Xx_967: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc066200000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc066200000000000
Xx_968: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc066400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc066400000000000
Xx_969: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc066600000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc066600000000000
Xx_970: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc066800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc066800000000000
Xx_971: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc066a00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc066a00000000000
Xx_972: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc066c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc066c00000000000
Xx_973: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc066e00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc066e00000000000
Xx_974: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc067000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc067000000000000
Xx_975: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc067200000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc067200000000000
Xx_976: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc067400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc067400000000000
Xx_977: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc067600000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc067600000000000
Xx_978: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc067800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc067800000000000
Xx_979: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc067a00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc067a00000000000
Xx_980: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc067c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc067c00000000000
Xx_981: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc067e00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc067e00000000000
Xx_982: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc068000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc068000000000000
Xx_983: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc068200000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc068200000000000
Xx_984: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc068400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc068400000000000
Xx_985: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc068600000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc068600000000000
Xx_986: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc068800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc068800000000000
Xx_987: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc068a00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc068a00000000000
Xx_988: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc068c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc068c00000000000
Xx_989: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc068e00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc068e00000000000
Xx_990: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc069000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc069000000000000
Xx_991: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc069200000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc069200000000000
Xx_992: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc069400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc069400000000000
Xx_993: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc069600000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc069600000000000
Xx_994: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc069800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc069800000000000
Xx_995: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc069a00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc069a00000000000
Xx_996: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc069c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc069c00000000000
Xx_997: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc069e00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc069e00000000000
Xx_998: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06a000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06a000000000000
Xx_999: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06a200000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06a200000000000
Xx_1000: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06a400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06a400000000000
Xx_1001: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06a600000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06a600000000000
Xx_1002: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06a800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06a800000000000
Xx_1003: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06aa00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06aa00000000000
Xx_1004: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06ac00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06ac00000000000
Xx_1005: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06ae00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06ae00000000000
Xx_1006: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06b000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06b000000000000
Xx_1007: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06b200000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06b200000000000
Xx_1008: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06b400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06b400000000000
Xx_1009: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06b600000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06b600000000000
Xx_1010: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06b800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06b800000000000
Xx_1011: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06ba00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06ba00000000000
Xx_1012: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06bc00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06bc00000000000
Xx_1013: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06be00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06be00000000000
Xx_1014: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06c000000000000
Xx_1015: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06c200000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06c200000000000
Xx_1016: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06c400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06c400000000000
Xx_1017: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06c600000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06c600000000000
Xx_1018: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06c800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06c800000000000
Xx_1019: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06ca00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06ca00000000000
Xx_1020: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06cc00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06cc00000000000
Xx_1021: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06ce00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06ce00000000000
Xx_1022: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06d000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06d000000000000
Xx_1023: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06d200000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06d200000000000
Xx_1024: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06d400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06d400000000000
Xx_1025: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06d600000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06d600000000000
Xx_1026: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06d800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06d800000000000
Xx_1027: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06da00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06da00000000000
Xx_1028: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06dc00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06dc00000000000
Xx_1029: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06de00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06de00000000000
Xx_1030: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06e000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06e000000000000
Xx_1031: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06e200000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06e200000000000
Xx_1032: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06e400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06e400000000000
Xx_1033: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06e600000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06e600000000000
Xx_1034: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06e800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06e800000000000
Xx_1035: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06ea00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06ea00000000000
Xx_1036: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06ec00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06ec00000000000
Xx_1037: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06ee00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06ee00000000000
Xx_1038: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06f000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06f000000000000
Xx_1039: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06f200000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06f200000000000
Xx_1040: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06f400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06f400000000000
Xx_1041: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06f600000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06f600000000000
Xx_1042: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06f800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06f800000000000
Xx_1043: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06fa00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06fa00000000000
Xx_1044: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06fc00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06fc00000000000
Xx_1045: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06fe00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06fe00000000000
Xx_1046: .text                           # gcd_base_continued_fraction:110    .text
Xx_1047: .text                           # gcd_base_continued_fraction:109    .text 
Xx_1048: .balign 16                      # gcd_base_continued_fraction:113    .balign 16
Xx_1049: _label_3:                       # gcd_base_continued_fraction:114    _label_3:
Xx_1050: .quad 0x1fffffffffff            # gcd_base_continued_fraction:115    .quad 0x1fffffffffff
Xx_1051: .quad 0x1fffffffffff            # gcd_base_continued_fraction:116    .quad 0x1fffffffffff
Xx_1052: .text                           # gcd_base_continued_fraction:117    .text
Xx_1053: MOV R12, [RIP+_label_3]         # gcd_base_continued_fraction:141    MOV `c_table_delta_minus_1, [RIP+_label_3]
Xx_1054: MOV R11, 0x5                    # gcd_base_continued_fraction:146    MOV `loop_counter, 0x5
Xx_1055: .text                           # gcd_base_continued_fraction:109    .text 
Xx_1056: .balign 16                      # gcd_base_continued_fraction:113    .balign 16
Xx_1057: _label_6:                       # gcd_base_continued_fraction:114    _label_6:
Xx_1058: .quad 0x3ff0000000000000        # gcd_base_continued_fraction:115    .quad 0x3ff0000000000000
Xx_1059: .quad 0x0                       # gcd_base_continued_fraction:116    .quad 0x0
Xx_1060: .text                           # gcd_base_continued_fraction:117    .text
Xx_1061: MOVAPD XMM1, [RIP+_label_6]     # gcd_base_continued_fraction:148    MOVAPD `u, [RIP+_label_6]
Xx_1062: .text                           # gcd_base_continued_fraction:109    .text 
Xx_1063: .balign 16                      # gcd_base_continued_fraction:113    .balign 16
Xx_1064: _label_7:                       # gcd_base_continued_fraction:114    _label_7:
Xx_1065: .quad 0x0                       # gcd_base_continued_fraction:115    .quad 0x0
Xx_1066: .quad 0x3ff0000000000000        # gcd_base_continued_fraction:116    .quad 0x3ff0000000000000
Xx_1067: .text                           # gcd_base_continued_fraction:117    .text
Xx_1068: MOVAPD XMM2, [RIP+_label_7]     # gcd_base_continued_fraction:149    MOVAPD `v, [RIP+_label_7]
Xx_1069: .text                           # gcd_base_continued_fraction:109    .text 
Xx_1070: .balign 16                      # gcd_base_continued_fraction:113    .balign 16
Xx_1071: _label_8:                       # gcd_base_continued_fraction:114    _label_8:
Xx_1072: .quad 0x433fffffffffffff        # gcd_base_continued_fraction:115    .quad 0x433fffffffffffff
Xx_1073: .quad 0x433fffffffffffff        # gcd_base_continued_fraction:116    .quad 0x433fffffffffffff
Xx_1074: .text                           # gcd_base_continued_fraction:117    .text
Xx_1075: MOVAPD XMM14, [RIP+_label_8]    # gcd_base_continued_fraction:150    MOVAPD `range_check_range, [RIP+_label_8]
Xx_1076: .text                           # gcd_base_continued_fraction:109    .text 
Xx_1077: .balign 16                      # gcd_base_continued_fraction:113    .balign 16
Xx_1078: _label_9:                       # gcd_base_continued_fraction:114    _label_9:
Xx_1079: .quad 0x7fffffffffffffff        # gcd_base_continued_fraction:115    .quad 0x7fffffffffffffff
Xx_1080: .quad 0x7fffffffffffffff        # gcd_base_continued_fraction:116    .quad 0x7fffffffffffffff
Xx_1081: .text                           # gcd_base_continued_fraction:117    .text
Xx_1082: MOVAPD XMM15, [RIP+_label_9]    # gcd_base_continued_fraction:151    MOVAPD `double_abs_mask, [RIP+_label_9]
Xx_1083: MOVAPD XMM9, XMM0               # gcd_base_continued_fraction:154    MOVAPD `tmp, `ab
Xx_1084: SHUFPD XMM9, XMM9, 3            # gcd_base_continued_fraction:155    SHUFPD `tmp, `tmp, 3
Xx_1085: MOVAPD XMM13, XMM0              # gcd_base_continued_fraction:156    MOVAPD `q, `ab
Xx_1086: DIVSD XMM13, XMM9               # gcd_base_continued_fraction:157    DIVSD `q, `tmp
Xx_1087: _label_5:                       # gcd_base_continued_fraction:160    _label_5:
Xx_1088: #gcd_base loop start            # gcd_base_continued_fraction:166    #gcd_base loop start
Xx_1089: MOVQ RBX, XMM13                 # gcd_base_continued_fraction:169    MOVQ `q_scalar, `q
Xx_1090: MOV RBP, RBX                    # gcd_base_continued_fraction:170    MOV `q_scalar_2, `q_scalar
Xx_1091: MOV R10, RBX                    # gcd_base_continued_fraction:171    MOV `q_scalar_3, `q_scalar
Xx_1092: SHR RBX, 0x28                   # gcd_base_continued_fraction:175    SHR `q_scalar, 0x28
Xx_1093: AND RBX, -32                    # gcd_base_continued_fraction:176    AND `q_scalar, -32
Xx_1094: SUB RBX, 0x3ff000               # gcd_base_continued_fraction:181    SUB `q_scalar, 0x3ff000
Xx_1095: JB _label_10                    # gcd_base_continued_fraction:182    JB _label_10
Xx_1096: CMP RBX, 0x8000                 # gcd_base_continued_fraction:183    CMP `q_scalar, 0x8000
Xx_1097: JAE _label_10                   # gcd_base_continued_fraction:184    JAE _label_10
Xx_1098: LEA RSI,[RIP+gcd_base_table]    # gcd_base_continued_fraction:189    LEA RSI,[RIP+gcd_base_table]
Xx_1099: MOVAPD XMM5, [RBX+RSI]          # gcd_base_continued_fraction:190    MOVAPD `m_0, [`q_scalar+RSI]
Xx_1100: MOVAPD XMM6, [16+RBX+RSI]       # gcd_base_continued_fraction:191    MOVAPD `m_1, [16+`q_scalar+RSI]
Xx_1101: MOVAPD XMM9, XMM0               # gcd_base_continued_fraction:199    MOVAPD `tmp, `ab
Xx_1102: CMPLEPD XMM9, XMM4              # gcd_base_continued_fraction:200    CMPLEPD `tmp, `ab_threshold
Xx_1103: PTEST XMM9, XMM9                # gcd_base_continued_fraction:201    PTEST `tmp, `tmp
Xx_1104: JNZ _label_4                    # gcd_base_continued_fraction:202    JNZ _label_4
Xx_1105: AND RBP, R12                    # gcd_base_continued_fraction:205    AND `q_scalar_2, `c_table_delta_minus_1
Xx_1106: JZ _label_10                    # gcd_base_continued_fraction:206    JZ _label_10
Xx_1107: CMP RBP, R12                    # gcd_base_continued_fraction:207    CMP `q_scalar_2, `c_table_delta_minus_1
Xx_1108: JE _label_10                    # gcd_base_continued_fraction:208    JE _label_10
Xx_1109: MOVAPD XMM9, XMM0               # gcd_base_continued_fraction:214    MOVAPD `tmp, `ab
Xx_1110: SHUFPD XMM9, XMM9, 0            # gcd_base_continued_fraction:215    SHUFPD `tmp, `tmp, 0
Xx_1111: MOVAPD XMM10, XMM0              # gcd_base_continued_fraction:217    MOVAPD `tmp2, `ab
Xx_1112: SHUFPD XMM10, XMM10, 3          # gcd_base_continued_fraction:218    SHUFPD `tmp2, `tmp2, 3
Xx_1113: MULPD XMM9, XMM5                # dot_product_exact:46               MULPD `b_0, `a_0
Xx_1114: MOVAPD XMM7, XMM9               # dot_product_exact:47               MOVAPD `v, `b_0
Xx_1115: ANDPD XMM9, XMM15               # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1116: CMPNLEPD XMM9, XMM14            # range_check:24                     CMPNLEPD `tmp, `range
Xx_1117: PTEST XMM9, XMM9                # range_check:30                     PTEST `tmp, `tmp
Xx_1118: JNZ _label_10                   # range_check:31                     JNZ _label_10
Xx_1119: MULPD XMM10, XMM6               # dot_product_exact:54               MULPD `b_1, `a_1
Xx_1120: ADDPD XMM7, XMM10               # dot_product_exact:55               ADDPD `v, `b_1
Xx_1121: ANDPD XMM10, XMM15              # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1122: CMPNLEPD XMM10, XMM14           # range_check:24                     CMPNLEPD `tmp, `range
Xx_1123: PTEST XMM10, XMM10              # range_check:30                     PTEST `tmp, `tmp
Xx_1124: JNZ _label_10                   # range_check:31                     JNZ _label_10
Xx_1125: MOVAPD XMM8, XMM7               # gcd_base_continued_fraction:226    MOVAPD `new_ab_1, `new_ab
Xx_1126: SHUFPD XMM8, XMM8, 3            # gcd_base_continued_fraction:227    SHUFPD `new_ab_1, `new_ab_1, 3
Xx_1127: MOVAPD XMM13, XMM7              # gcd_base_continued_fraction:231    MOVAPD `q, `new_ab
Xx_1128: DIVSD XMM13, XMM8               # gcd_base_continued_fraction:232    DIVSD `q, `new_ab_1
Xx_1129: MOVAPD XMM9, XMM1               # gcd_base_continued_fraction:234    MOVAPD `tmp, `u
Xx_1130: SHUFPD XMM9, XMM9, 0            # gcd_base_continued_fraction:235    SHUFPD `tmp, `tmp, 0
Xx_1131: MOVAPD XMM10, XMM1              # gcd_base_continued_fraction:237    MOVAPD `tmp2, `u
Xx_1132: SHUFPD XMM10, XMM10, 3          # gcd_base_continued_fraction:238    SHUFPD `tmp2, `tmp2, 3
Xx_1133: MULPD XMM9, XMM5                # dot_product_exact:46               MULPD `b_0, `a_0
Xx_1134: MOVAPD XMM11, XMM9              # dot_product_exact:47               MOVAPD `v, `b_0
Xx_1135: ANDPD XMM9, XMM15               # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1136: CMPNLEPD XMM9, XMM14            # range_check:24                     CMPNLEPD `tmp, `range
Xx_1137: PTEST XMM9, XMM9                # range_check:30                     PTEST `tmp, `tmp
Xx_1138: JNZ _label_10                   # range_check:31                     JNZ _label_10
Xx_1139: MULPD XMM10, XMM6               # dot_product_exact:54               MULPD `b_1, `a_1
Xx_1140: ADDPD XMM11, XMM10              # dot_product_exact:55               ADDPD `v, `b_1
Xx_1141: ANDPD XMM10, XMM15              # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1142: CMPNLEPD XMM10, XMM14           # range_check:24                     CMPNLEPD `tmp, `range
Xx_1143: PTEST XMM10, XMM10              # range_check:30                     PTEST `tmp, `tmp
Xx_1144: JNZ _label_10                   # range_check:31                     JNZ _label_10
Xx_1145: MOVAPD XMM9, XMM11              # dot_product_exact:60               MOVAPD `b_0, `v
Xx_1146: ANDPD XMM9, XMM15               # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1147: CMPNLEPD XMM9, XMM14            # range_check:24                     CMPNLEPD `tmp, `range
Xx_1148: PTEST XMM9, XMM9                # range_check:30                     PTEST `tmp, `tmp
Xx_1149: JNZ _label_10                   # range_check:31                     JNZ _label_10
Xx_1150: MOVAPD XMM9, XMM2               # gcd_base_continued_fraction:246    MOVAPD `tmp, `v
Xx_1151: SHUFPD XMM9, XMM9, 0            # gcd_base_continued_fraction:247    SHUFPD `tmp, `tmp, 0
Xx_1152: MOVAPD XMM10, XMM2              # gcd_base_continued_fraction:249    MOVAPD `tmp2, `v
Xx_1153: SHUFPD XMM10, XMM10, 3          # gcd_base_continued_fraction:250    SHUFPD `tmp2, `tmp2, 3
Xx_1154: MULPD XMM9, XMM5                # dot_product_exact:46               MULPD `b_0, `a_0
Xx_1155: MOVAPD XMM12, XMM9              # dot_product_exact:47               MOVAPD `v, `b_0
Xx_1156: ANDPD XMM9, XMM15               # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1157: CMPNLEPD XMM9, XMM14            # range_check:24                     CMPNLEPD `tmp, `range
Xx_1158: PTEST XMM9, XMM9                # range_check:30                     PTEST `tmp, `tmp
Xx_1159: JNZ _label_10                   # range_check:31                     JNZ _label_10
Xx_1160: MULPD XMM10, XMM6               # dot_product_exact:54               MULPD `b_1, `a_1
Xx_1161: ADDPD XMM12, XMM10              # dot_product_exact:55               ADDPD `v, `b_1
Xx_1162: ANDPD XMM10, XMM15              # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1163: CMPNLEPD XMM10, XMM14           # range_check:24                     CMPNLEPD `tmp, `range
Xx_1164: PTEST XMM10, XMM10              # range_check:30                     PTEST `tmp, `tmp
Xx_1165: JNZ _label_10                   # range_check:31                     JNZ _label_10
Xx_1166: MOVAPD XMM9, XMM12              # dot_product_exact:60               MOVAPD `b_0, `v
Xx_1167: ANDPD XMM9, XMM15               # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1168: CMPNLEPD XMM9, XMM14            # range_check:24                     CMPNLEPD `tmp, `range
Xx_1169: PTEST XMM9, XMM9                # range_check:30                     PTEST `tmp, `tmp
Xx_1170: JNZ _label_10                   # range_check:31                     JNZ _label_10
Xx_1171: UCOMISD XMM7, XMM4              # gcd_base_continued_fraction:260    UCOMISD `new_ab, `ab_threshold
Xx_1172: JBE _label_10                   # gcd_base_continued_fraction:261    JBE _label_10
Xx_1173: JMP _label_11                   # gcd_base_continued_fraction:264    JMP _label_11
Xx_1174: _label_10:                      # gcd_base_continued_fraction:266    _label_10:
Xx_1175: #gcd_base no table              # gcd_base_continued_fraction:267    #gcd_base no table
Xx_1176: MOVAPD XMM9, XMM0               # gcd_base_continued_fraction:272    MOVAPD `tmp, `ab
Xx_1177: CMPLEPD XMM9, XMM4              # gcd_base_continued_fraction:273    CMPLEPD `tmp, `ab_threshold
Xx_1178: PTEST XMM9, XMM9                # gcd_base_continued_fraction:274    PTEST `tmp, `tmp
Xx_1179: JNZ _label_4                    # gcd_base_continued_fraction:275    JNZ _label_4
Xx_1180: MOVQ XMM13, R10                 # gcd_base_continued_fraction:278    MOVQ `q, `q_scalar_3
Xx_1181: ROUNDSD XMM13, XMM13, 1         # gcd_base_continued_fraction:282    ROUNDSD `q, `q, 1
Xx_1182: MOVAPD XMM5, [RIP+_label_7]     # gcd_base_continued_fraction:288    MOVAPD `m_0, [RIP+_label_7]
Xx_1183: MOVAPD XMM6, XMM5               # gcd_base_continued_fraction:289    MOVAPD `m_1, `m_0
Xx_1184: SUBSD XMM6, XMM13               # gcd_base_continued_fraction:290    SUBSD `m_1, `q
Xx_1185: SHUFPD XMM6, XMM6, 1            # gcd_base_continued_fraction:291    SHUFPD `m_1, `m_1, 1
Xx_1186: MOVAPD XMM9, XMM0               # gcd_base_continued_fraction:214    MOVAPD `tmp, `ab
Xx_1187: SHUFPD XMM9, XMM9, 0            # gcd_base_continued_fraction:215    SHUFPD `tmp, `tmp, 0
Xx_1188: MOVAPD XMM10, XMM0              # gcd_base_continued_fraction:217    MOVAPD `tmp2, `ab
Xx_1189: SHUFPD XMM10, XMM10, 3          # gcd_base_continued_fraction:218    SHUFPD `tmp2, `tmp2, 3
Xx_1190: MULPD XMM9, XMM5                # dot_product_exact:46               MULPD `b_0, `a_0
Xx_1191: MOVAPD XMM7, XMM9               # dot_product_exact:47               MOVAPD `v, `b_0
Xx_1192: ANDPD XMM9, XMM15               # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1193: CMPNLEPD XMM9, XMM14            # range_check:24                     CMPNLEPD `tmp, `range
Xx_1194: PTEST XMM9, XMM9                # range_check:30                     PTEST `tmp, `tmp
Xx_1195: JNZ _label_4                    # range_check:31                     JNZ _label_4
Xx_1196: MULPD XMM10, XMM6               # dot_product_exact:54               MULPD `b_1, `a_1
Xx_1197: ADDPD XMM7, XMM10               # dot_product_exact:55               ADDPD `v, `b_1
Xx_1198: ANDPD XMM10, XMM15              # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1199: CMPNLEPD XMM10, XMM14           # range_check:24                     CMPNLEPD `tmp, `range
Xx_1200: PTEST XMM10, XMM10              # range_check:30                     PTEST `tmp, `tmp
Xx_1201: JNZ _label_4                    # range_check:31                     JNZ _label_4
Xx_1202: MOVAPD XMM8, XMM7               # gcd_base_continued_fraction:226    MOVAPD `new_ab_1, `new_ab
Xx_1203: SHUFPD XMM8, XMM8, 3            # gcd_base_continued_fraction:227    SHUFPD `new_ab_1, `new_ab_1, 3
Xx_1204: MOVAPD XMM13, XMM7              # gcd_base_continued_fraction:231    MOVAPD `q, `new_ab
Xx_1205: DIVSD XMM13, XMM8               # gcd_base_continued_fraction:232    DIVSD `q, `new_ab_1
Xx_1206: MOVAPD XMM9, XMM1               # gcd_base_continued_fraction:234    MOVAPD `tmp, `u
Xx_1207: SHUFPD XMM9, XMM9, 0            # gcd_base_continued_fraction:235    SHUFPD `tmp, `tmp, 0
Xx_1208: MOVAPD XMM10, XMM1              # gcd_base_continued_fraction:237    MOVAPD `tmp2, `u
Xx_1209: SHUFPD XMM10, XMM10, 3          # gcd_base_continued_fraction:238    SHUFPD `tmp2, `tmp2, 3
Xx_1210: MULPD XMM9, XMM5                # dot_product_exact:46               MULPD `b_0, `a_0
Xx_1211: MOVAPD XMM11, XMM9              # dot_product_exact:47               MOVAPD `v, `b_0
Xx_1212: ANDPD XMM9, XMM15               # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1213: CMPNLEPD XMM9, XMM14            # range_check:24                     CMPNLEPD `tmp, `range
Xx_1214: PTEST XMM9, XMM9                # range_check:30                     PTEST `tmp, `tmp
Xx_1215: JNZ _label_4                    # range_check:31                     JNZ _label_4
Xx_1216: MULPD XMM10, XMM6               # dot_product_exact:54               MULPD `b_1, `a_1
Xx_1217: ADDPD XMM11, XMM10              # dot_product_exact:55               ADDPD `v, `b_1
Xx_1218: ANDPD XMM10, XMM15              # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1219: CMPNLEPD XMM10, XMM14           # range_check:24                     CMPNLEPD `tmp, `range
Xx_1220: PTEST XMM10, XMM10              # range_check:30                     PTEST `tmp, `tmp
Xx_1221: JNZ _label_4                    # range_check:31                     JNZ _label_4
Xx_1222: MOVAPD XMM9, XMM11              # dot_product_exact:60               MOVAPD `b_0, `v
Xx_1223: ANDPD XMM9, XMM15               # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1224: CMPNLEPD XMM9, XMM14            # range_check:24                     CMPNLEPD `tmp, `range
Xx_1225: PTEST XMM9, XMM9                # range_check:30                     PTEST `tmp, `tmp
Xx_1226: JNZ _label_4                    # range_check:31                     JNZ _label_4
Xx_1227: MOVAPD XMM9, XMM2               # gcd_base_continued_fraction:246    MOVAPD `tmp, `v
Xx_1228: SHUFPD XMM9, XMM9, 0            # gcd_base_continued_fraction:247    SHUFPD `tmp, `tmp, 0
Xx_1229: MOVAPD XMM10, XMM2              # gcd_base_continued_fraction:249    MOVAPD `tmp2, `v
Xx_1230: SHUFPD XMM10, XMM10, 3          # gcd_base_continued_fraction:250    SHUFPD `tmp2, `tmp2, 3
Xx_1231: MULPD XMM9, XMM5                # dot_product_exact:46               MULPD `b_0, `a_0
Xx_1232: MOVAPD XMM12, XMM9              # dot_product_exact:47               MOVAPD `v, `b_0
Xx_1233: ANDPD XMM9, XMM15               # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1234: CMPNLEPD XMM9, XMM14            # range_check:24                     CMPNLEPD `tmp, `range
Xx_1235: PTEST XMM9, XMM9                # range_check:30                     PTEST `tmp, `tmp
Xx_1236: JNZ _label_4                    # range_check:31                     JNZ _label_4
Xx_1237: MULPD XMM10, XMM6               # dot_product_exact:54               MULPD `b_1, `a_1
Xx_1238: ADDPD XMM12, XMM10              # dot_product_exact:55               ADDPD `v, `b_1
Xx_1239: ANDPD XMM10, XMM15              # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1240: CMPNLEPD XMM10, XMM14           # range_check:24                     CMPNLEPD `tmp, `range
Xx_1241: PTEST XMM10, XMM10              # range_check:30                     PTEST `tmp, `tmp
Xx_1242: JNZ _label_4                    # range_check:31                     JNZ _label_4
Xx_1243: MOVAPD XMM9, XMM12              # dot_product_exact:60               MOVAPD `b_0, `v
Xx_1244: ANDPD XMM9, XMM15               # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1245: CMPNLEPD XMM9, XMM14            # range_check:24                     CMPNLEPD `tmp, `range
Xx_1246: PTEST XMM9, XMM9                # range_check:30                     PTEST `tmp, `tmp
Xx_1247: JNZ _label_4                    # range_check:31                     JNZ _label_4
Xx_1248: _label_11:                      # gcd_base_continued_fraction:296    _label_11:
Xx_1249: #gcd_base end no table          # gcd_base_continued_fraction:297    #gcd_base end no table
Xx_1250: MOVAPD XMM5, XMM11              # gcd_base_continued_fraction:322    MOVAPD `m_0, `new_u
Xx_1251: SHUFPD XMM5, XMM12, 0           # gcd_base_continued_fraction:323    SHUFPD `m_0, `new_v, 0
Xx_1252: MOVAPD XMM6, XMM11              # gcd_base_continued_fraction:326    MOVAPD `m_1, `new_u
Xx_1253: SHUFPD XMM6, XMM12, 3           # gcd_base_continued_fraction:327    SHUFPD `m_1, `new_v, 3
Xx_1254: MOVAPD XMM9, XMM7               # gcd_base_continued_fraction:330    MOVAPD `tmp, `new_ab
Xx_1255: SHUFPD XMM9, XMM9, 0            # gcd_base_continued_fraction:331    SHUFPD `tmp, `tmp, 0
Xx_1256: SUBPD XMM9, XMM8                # gcd_base_continued_fraction:334    SUBPD `tmp, `new_ab_1
Xx_1257: ADDPD XMM9, XMM5                # gcd_base_continued_fraction:337    ADDPD `tmp, `m_0
Xx_1258: CMPLTPD XMM9, XMM6              # gcd_base_continued_fraction:340    CMPLTPD `tmp, `m_1
Xx_1259: .text                           # gcd_base_continued_fraction:109    .text 
Xx_1260: .balign 16                      # gcd_base_continued_fraction:113    .balign 16
Xx_1261: _label_12:                      # gcd_base_continued_fraction:114    _label_12:
Xx_1262: .quad 0x8000000000000000        # gcd_base_continued_fraction:115    .quad 0x8000000000000000
Xx_1263: .quad 0x8000000000000000        # gcd_base_continued_fraction:116    .quad 0x8000000000000000
Xx_1264: .text                           # gcd_base_continued_fraction:117    .text
Xx_1265: XORPD XMM6, [RIP+_label_12]     # gcd_base_continued_fraction:343    XORPD `m_1, [RIP+_label_12]
Xx_1266: CMPLTPD XMM8, XMM6              # gcd_base_continued_fraction:346    CMPLTPD `new_ab_1, `m_1
Xx_1267: ORPD XMM9, XMM8                 # gcd_base_continued_fraction:350    ORPD `tmp, `new_ab_1
Xx_1268: ANDPD XMM9, XMM3                # gcd_base_continued_fraction:351    ANDPD `tmp, `is_lehmer
Xx_1269: PTEST XMM9, XMM9                # gcd_base_continued_fraction:352    PTEST `tmp, `tmp
Xx_1270: JNZ _label_4                    # gcd_base_continued_fraction:353    JNZ _label_4
Xx_1271: MOVAPD XMM0, XMM7               # gcd_base_continued_fraction:355    MOVAPD `ab, `new_ab
Xx_1272: MOVAPD XMM1, XMM11              # gcd_base_continued_fraction:356    MOVAPD `u, `new_u
Xx_1273: MOVAPD XMM2, XMM12              # gcd_base_continued_fraction:357    MOVAPD `v, `new_v
Xx_1274: DEC R11                         # gcd_base_continued_fraction:360    DEC `loop_counter
Xx_1275: JNZ _label_5                    # gcd_base_continued_fraction:361    JNZ _label_5
Xx_1276: #gcd_base loop end              # gcd_base_continued_fraction:363    #gcd_base loop end
Xx_1277: _label_4:                       # gcd_base_continued_fraction:368    _label_4:
Xx_1278: CMP R11, 0x5                    # gcd_base_continued_fraction:370    CMP `loop_counter, 0x5
Xx_1279: JE _label_0                     # gcd_base_continued_fraction:371    JE _label_0
Xx_1280: JMP _label_1                    # compile_asm_gcd_base:49            JMP _label_1
Xx_1281: _label_0:                       # compile_asm_gcd_base:50            _label_0:
Xx_1282: MOV QWORD PTR [R9], 1           # compile_asm_gcd_base:52            MOV QWORD PTR [`no_progress_addr], 1
Xx_1283: JMP _label_2                    # compile_asm_gcd_base:53            JMP _label_2
Xx_1284: _label_1:                       # compile_asm_gcd_base:55            _label_1:
Xx_1285: MOV QWORD PTR [R9], 0           # compile_asm_gcd_base:57            MOV QWORD PTR [`no_progress_addr], 0
Xx_1286: _label_2:                       # compile_asm_gcd_base:59            _label_2:
Xx_1287: MOVDQU [RDI], XMM0              # compile_asm_gcd_base:61            MOVDQU [`ab_addr], `ab
Xx_1288: MOVDQU [RSI], XMM1              # compile_asm_gcd_base:62            MOVDQU [`u_addr], `u
Xx_1289: MOVDQU [RDX], XMM2              # compile_asm_gcd_base:63            MOVDQU [`v_addr], `v
Xx_1290: MOVDQU [RCX], XMM3              # compile_asm_gcd_base:64            MOVDQU [`is_lehmer_addr], `is_lehmer
Xx_1291: MOVDQU [R8], XMM4               # compile_asm_gcd_base:65            MOVDQU [`ab_threshold_addr], `ab_threshold
Xx_1292: MOV RAX, 0                      # ~asm_function:107                  MOV RAX, 0
Xx_1293: _label_13:                      # ~asm_function:110                  _label_13:
Xx_1294: MOV RSP, [RSP]                  # ~asm_function:112                  MOV RSP, [RSP]
Xx_1295: POP R15                         # ~asm_function:114                  POP R15
Xx_1296: POP R14                         # ~asm_function:114                  POP R14
Xx_1297: POP R13                         # ~asm_function:114                  POP R13
Xx_1298: POP R12                         # ~asm_function:114                  POP R12
Xx_1299: POP RBX                         # ~asm_function:114                  POP RBX
Xx_1300: POP RBP                         # ~asm_function:114                  POP RBP
Xx_1301: RET                             # ~asm_function:116                  RET
Xx_1302: .global _asm_func_gcd_128       # asm_function:64                    .global _asm_func_gcd_128
Xx_1303: _asm_func_gcd_128:              # asm_function:65                    _asm_func_gcd_128:
Xx_1304: PUSH RBP                        # asm_function:84                    PUSH RBP
Xx_1305: PUSH RBX                        # asm_function:84                    PUSH RBX
Xx_1306: PUSH R12                        # asm_function:84                    PUSH R12
Xx_1307: PUSH R13                        # asm_function:84                    PUSH R13
Xx_1308: PUSH R14                        # asm_function:84                    PUSH R14
Xx_1309: PUSH R15                        # asm_function:84                    PUSH R15
Xx_1310: MOV RAX, RSP                    # asm_function:96                    MOV RAX, RSP
Xx_1311: AND RSP, -64                    # asm_function:97                    AND RSP, -64
Xx_1312: SUB RSP, 64                     # asm_function:98                    SUB RSP, 64
Xx_1313: MOV [RSP], RAX                  # asm_function:99                    MOV [RSP], RAX
Xx_1314: MOV [RSP+-0x400], RDI           # compile_asm_gcd_128:112            MOV `spill_data_addr, `data_addr
Xx_1315: MOV RBX, [RDI+0x0]              # compile_asm_gcd_128:115            MOV `tmp, [`data_addr+0x0]
Xx_1316: MOV [RSP+-0x3f8], RBX           # compile_asm_gcd_128:116            MOV [RSP+-0x3f8], `tmp
Xx_1317: MOV RBX, [RDI+0x8]              # compile_asm_gcd_128:115            MOV `tmp, [`data_addr+0x8]
Xx_1318: MOV [RSP+-0x3f0], RBX           # compile_asm_gcd_128:116            MOV [RSP+-0x3f0], `tmp
Xx_1319: MOV RBX, [RDI+0x10]             # compile_asm_gcd_128:115            MOV `tmp, [`data_addr+0x10]
Xx_1320: MOV [RSP+-0x3e8], RBX           # compile_asm_gcd_128:116            MOV [RSP+-0x3e8], `tmp
Xx_1321: MOV RBX, [RDI+0x18]             # compile_asm_gcd_128:115            MOV `tmp, [`data_addr+0x18]
Xx_1322: MOV [RSP+-0x3e0], RBX           # compile_asm_gcd_128:116            MOV [RSP+-0x3e0], `tmp
Xx_1323: MOV RBX, [RDI+0x20]             # compile_asm_gcd_128:115            MOV `tmp, [`data_addr+0x20]
Xx_1324: MOV [RSP+-0x3d8], RBX           # compile_asm_gcd_128:116            MOV [RSP+-0x3d8], `tmp
Xx_1325: MOV RBX, [RDI+0x28]             # compile_asm_gcd_128:115            MOV `tmp, [`data_addr+0x28]
Xx_1326: MOV [RSP+-0x3d0], RBX           # compile_asm_gcd_128:116            MOV [RSP+-0x3d0], `tmp
Xx_1327: MOV RBX, [RDI+0x30]             # compile_asm_gcd_128:115            MOV `tmp, [`data_addr+0x30]
Xx_1328: MOV [RSP+-0x3c8], RBX           # compile_asm_gcd_128:116            MOV [RSP+-0x3c8], `tmp
Xx_1329: MOV RBX, [RDI+0x38]             # compile_asm_gcd_128:115            MOV `tmp, [`data_addr+0x38]
Xx_1330: MOV [RSP+-0x3c0], RBX           # compile_asm_gcd_128:116            MOV [RSP+-0x3c0], `tmp
Xx_1331: MOV RBX, [RDI+0x40]             # compile_asm_gcd_128:115            MOV `tmp, [`data_addr+0x40]
Xx_1332: MOV [RSP+-0x3b8], RBX           # compile_asm_gcd_128:116            MOV [RSP+-0x3b8], `tmp
Xx_1333: MOV RBX, [RDI+0x48]             # compile_asm_gcd_128:115            MOV `tmp, [`data_addr+0x48]
Xx_1334: MOV [RSP+-0x3b0], RBX           # compile_asm_gcd_128:116            MOV [RSP+-0x3b0], `tmp
Xx_1335: MOV RBX, [RDI+0x50]             # compile_asm_gcd_128:115            MOV `tmp, [`data_addr+0x50]
Xx_1336: MOV [RSP+-0x3a8], RBX           # compile_asm_gcd_128:116            MOV [RSP+-0x3a8], `tmp
Xx_1337: MOV RBX, [RDI+0x58]             # compile_asm_gcd_128:115            MOV `tmp, [`data_addr+0x58]
Xx_1338: MOV [RSP+-0x3a0], RBX           # compile_asm_gcd_128:116            MOV [RSP+-0x3a0], `tmp
Xx_1339: MOV RBX, [RDI+0x60]             # compile_asm_gcd_128:115            MOV `tmp, [`data_addr+0x60]
Xx_1340: MOV [RSP+-0x398], RBX           # compile_asm_gcd_128:116            MOV [RSP+-0x398], `tmp
Xx_1341: MOV QWORD PTR [RSP+-0x3d8], 1   # gcd_128:107                        MOV QWORD PTR `spill_u_0, 1
Xx_1342: MOV QWORD PTR [RSP+-0x3d0], 0   # gcd_128:108                        MOV QWORD PTR `spill_u_1, 0
Xx_1343: MOV QWORD PTR [RSP+-0x3c8], 0   # gcd_128:109                        MOV QWORD PTR `spill_v_0, 0
Xx_1344: MOV QWORD PTR [RSP+-0x3c0], 1   # gcd_128:110                        MOV QWORD PTR `spill_v_1, 1
Xx_1345: MOV QWORD PTR [RSP+-0x3b8], 0   # gcd_128:111                        MOV QWORD PTR `spill_parity, 0
Xx_1346: MOV QWORD PTR [RSP+-0x390], 0x3 # gcd_128:112                        MOV QWORD PTR `spill_iter, 0x3
Xx_1347: JMP _label_21                   # gcd_128:120                        JMP _label_21
Xx_1348: _label_18:                      # gcd_128:122                        _label_18:
Xx_1349: MOV R12, [RIP+_label_3]         # gcd_base_continued_fraction:141    MOV `c_table_delta_minus_1, [RIP+_label_3]
Xx_1350: MOV R11, 0x5                    # gcd_base_continued_fraction:146    MOV `loop_counter, 0x5
Xx_1351: MOVAPD XMM1, [RIP+_label_6]     # gcd_base_continued_fraction:148    MOVAPD `u, [RIP+_label_6]
Xx_1352: MOVAPD XMM2, [RIP+_label_7]     # gcd_base_continued_fraction:149    MOVAPD `v, [RIP+_label_7]
Xx_1353: MOVAPD XMM14, [RIP+_label_8]    # gcd_base_continued_fraction:150    MOVAPD `range_check_range, [RIP+_label_8]
Xx_1354: MOVAPD XMM15, [RIP+_label_9]    # gcd_base_continued_fraction:151    MOVAPD `double_abs_mask, [RIP+_label_9]
Xx_1355: MOVAPD XMM9, XMM0               # gcd_base_continued_fraction:154    MOVAPD `tmp, `ab
Xx_1356: SHUFPD XMM9, XMM9, 3            # gcd_base_continued_fraction:155    SHUFPD `tmp, `tmp, 3
Xx_1357: MOVAPD XMM13, XMM0              # gcd_base_continued_fraction:156    MOVAPD `q, `ab
Xx_1358: DIVSD XMM13, XMM9               # gcd_base_continued_fraction:157    DIVSD `q, `tmp
Xx_1359: _label_23:                      # gcd_base_continued_fraction:160    _label_23:
Xx_1360: #gcd_base loop start            # gcd_base_continued_fraction:166    #gcd_base loop start
Xx_1361: MOVQ R8, XMM13                  # gcd_base_continued_fraction:169    MOVQ `q_scalar, `q
Xx_1362: MOV R9, R8                      # gcd_base_continued_fraction:170    MOV `q_scalar_2, `q_scalar
Xx_1363: MOV R10, R8                     # gcd_base_continued_fraction:171    MOV `q_scalar_3, `q_scalar
Xx_1364: SHR R8, 0x28                    # gcd_base_continued_fraction:175    SHR `q_scalar, 0x28
Xx_1365: AND R8, -32                     # gcd_base_continued_fraction:176    AND `q_scalar, -32
Xx_1366: SUB R8, 0x3ff000                # gcd_base_continued_fraction:181    SUB `q_scalar, 0x3ff000
Xx_1367: JB _label_24                    # gcd_base_continued_fraction:182    JB _label_24
Xx_1368: CMP R8, 0x8000                  # gcd_base_continued_fraction:183    CMP `q_scalar, 0x8000
Xx_1369: JAE _label_24                   # gcd_base_continued_fraction:184    JAE _label_24
Xx_1370: LEA RSI,[RIP+gcd_base_table]    # gcd_base_continued_fraction:189    LEA RSI,[RIP+gcd_base_table]
Xx_1371: MOVAPD XMM5, [R8+RSI]           # gcd_base_continued_fraction:190    MOVAPD `m_0, [`q_scalar+RSI]
Xx_1372: MOVAPD XMM6, [16+R8+RSI]        # gcd_base_continued_fraction:191    MOVAPD `m_1, [16+`q_scalar+RSI]
Xx_1373: MOVAPD XMM9, XMM0               # gcd_base_continued_fraction:199    MOVAPD `tmp, `ab
Xx_1374: CMPLEPD XMM9, XMM4              # gcd_base_continued_fraction:200    CMPLEPD `tmp, `ab_threshold
Xx_1375: PTEST XMM9, XMM9                # gcd_base_continued_fraction:201    PTEST `tmp, `tmp
Xx_1376: JNZ _label_22                   # gcd_base_continued_fraction:202    JNZ _label_22
Xx_1377: AND R9, R12                     # gcd_base_continued_fraction:205    AND `q_scalar_2, `c_table_delta_minus_1
Xx_1378: JZ _label_24                    # gcd_base_continued_fraction:206    JZ _label_24
Xx_1379: CMP R9, R12                     # gcd_base_continued_fraction:207    CMP `q_scalar_2, `c_table_delta_minus_1
Xx_1380: JE _label_24                    # gcd_base_continued_fraction:208    JE _label_24
Xx_1381: MOVAPD XMM9, XMM0               # gcd_base_continued_fraction:214    MOVAPD `tmp, `ab
Xx_1382: SHUFPD XMM9, XMM9, 0            # gcd_base_continued_fraction:215    SHUFPD `tmp, `tmp, 0
Xx_1383: MOVAPD XMM10, XMM0              # gcd_base_continued_fraction:217    MOVAPD `tmp2, `ab
Xx_1384: SHUFPD XMM10, XMM10, 3          # gcd_base_continued_fraction:218    SHUFPD `tmp2, `tmp2, 3
Xx_1385: MULPD XMM9, XMM5                # dot_product_exact:46               MULPD `b_0, `a_0
Xx_1386: MOVAPD XMM7, XMM9               # dot_product_exact:47               MOVAPD `v, `b_0
Xx_1387: ANDPD XMM9, XMM15               # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1388: CMPNLEPD XMM9, XMM14            # range_check:24                     CMPNLEPD `tmp, `range
Xx_1389: PTEST XMM9, XMM9                # range_check:30                     PTEST `tmp, `tmp
Xx_1390: JNZ _label_24                   # range_check:31                     JNZ _label_24
Xx_1391: MULPD XMM10, XMM6               # dot_product_exact:54               MULPD `b_1, `a_1
Xx_1392: ADDPD XMM7, XMM10               # dot_product_exact:55               ADDPD `v, `b_1
Xx_1393: ANDPD XMM10, XMM15              # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1394: CMPNLEPD XMM10, XMM14           # range_check:24                     CMPNLEPD `tmp, `range
Xx_1395: PTEST XMM10, XMM10              # range_check:30                     PTEST `tmp, `tmp
Xx_1396: JNZ _label_24                   # range_check:31                     JNZ _label_24
Xx_1397: MOVAPD XMM8, XMM7               # gcd_base_continued_fraction:226    MOVAPD `new_ab_1, `new_ab
Xx_1398: SHUFPD XMM8, XMM8, 3            # gcd_base_continued_fraction:227    SHUFPD `new_ab_1, `new_ab_1, 3
Xx_1399: MOVAPD XMM13, XMM7              # gcd_base_continued_fraction:231    MOVAPD `q, `new_ab
Xx_1400: DIVSD XMM13, XMM8               # gcd_base_continued_fraction:232    DIVSD `q, `new_ab_1
Xx_1401: MOVAPD XMM9, XMM1               # gcd_base_continued_fraction:234    MOVAPD `tmp, `u
Xx_1402: SHUFPD XMM9, XMM9, 0            # gcd_base_continued_fraction:235    SHUFPD `tmp, `tmp, 0
Xx_1403: MOVAPD XMM10, XMM1              # gcd_base_continued_fraction:237    MOVAPD `tmp2, `u
Xx_1404: SHUFPD XMM10, XMM10, 3          # gcd_base_continued_fraction:238    SHUFPD `tmp2, `tmp2, 3
Xx_1405: MULPD XMM9, XMM5                # dot_product_exact:46               MULPD `b_0, `a_0
Xx_1406: MOVAPD XMM11, XMM9              # dot_product_exact:47               MOVAPD `v, `b_0
Xx_1407: ANDPD XMM9, XMM15               # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1408: CMPNLEPD XMM9, XMM14            # range_check:24                     CMPNLEPD `tmp, `range
Xx_1409: PTEST XMM9, XMM9                # range_check:30                     PTEST `tmp, `tmp
Xx_1410: JNZ _label_24                   # range_check:31                     JNZ _label_24
Xx_1411: MULPD XMM10, XMM6               # dot_product_exact:54               MULPD `b_1, `a_1
Xx_1412: ADDPD XMM11, XMM10              # dot_product_exact:55               ADDPD `v, `b_1
Xx_1413: ANDPD XMM10, XMM15              # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1414: CMPNLEPD XMM10, XMM14           # range_check:24                     CMPNLEPD `tmp, `range
Xx_1415: PTEST XMM10, XMM10              # range_check:30                     PTEST `tmp, `tmp
Xx_1416: JNZ _label_24                   # range_check:31                     JNZ _label_24
Xx_1417: MOVAPD XMM9, XMM11              # dot_product_exact:60               MOVAPD `b_0, `v
Xx_1418: ANDPD XMM9, XMM15               # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1419: CMPNLEPD XMM9, XMM14            # range_check:24                     CMPNLEPD `tmp, `range
Xx_1420: PTEST XMM9, XMM9                # range_check:30                     PTEST `tmp, `tmp
Xx_1421: JNZ _label_24                   # range_check:31                     JNZ _label_24
Xx_1422: MOVAPD XMM9, XMM2               # gcd_base_continued_fraction:246    MOVAPD `tmp, `v
Xx_1423: SHUFPD XMM9, XMM9, 0            # gcd_base_continued_fraction:247    SHUFPD `tmp, `tmp, 0
Xx_1424: MOVAPD XMM10, XMM2              # gcd_base_continued_fraction:249    MOVAPD `tmp2, `v
Xx_1425: SHUFPD XMM10, XMM10, 3          # gcd_base_continued_fraction:250    SHUFPD `tmp2, `tmp2, 3
Xx_1426: MULPD XMM9, XMM5                # dot_product_exact:46               MULPD `b_0, `a_0
Xx_1427: MOVAPD XMM12, XMM9              # dot_product_exact:47               MOVAPD `v, `b_0
Xx_1428: ANDPD XMM9, XMM15               # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1429: CMPNLEPD XMM9, XMM14            # range_check:24                     CMPNLEPD `tmp, `range
Xx_1430: PTEST XMM9, XMM9                # range_check:30                     PTEST `tmp, `tmp
Xx_1431: JNZ _label_24                   # range_check:31                     JNZ _label_24
Xx_1432: MULPD XMM10, XMM6               # dot_product_exact:54               MULPD `b_1, `a_1
Xx_1433: ADDPD XMM12, XMM10              # dot_product_exact:55               ADDPD `v, `b_1
Xx_1434: ANDPD XMM10, XMM15              # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1435: CMPNLEPD XMM10, XMM14           # range_check:24                     CMPNLEPD `tmp, `range
Xx_1436: PTEST XMM10, XMM10              # range_check:30                     PTEST `tmp, `tmp
Xx_1437: JNZ _label_24                   # range_check:31                     JNZ _label_24
Xx_1438: MOVAPD XMM9, XMM12              # dot_product_exact:60               MOVAPD `b_0, `v
Xx_1439: ANDPD XMM9, XMM15               # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1440: CMPNLEPD XMM9, XMM14            # range_check:24                     CMPNLEPD `tmp, `range
Xx_1441: PTEST XMM9, XMM9                # range_check:30                     PTEST `tmp, `tmp
Xx_1442: JNZ _label_24                   # range_check:31                     JNZ _label_24
Xx_1443: UCOMISD XMM7, XMM4              # gcd_base_continued_fraction:260    UCOMISD `new_ab, `ab_threshold
Xx_1444: JBE _label_24                   # gcd_base_continued_fraction:261    JBE _label_24
Xx_1445: JMP _label_25                   # gcd_base_continued_fraction:264    JMP _label_25
Xx_1446: _label_24:                      # gcd_base_continued_fraction:266    _label_24:
Xx_1447: #gcd_base no table              # gcd_base_continued_fraction:267    #gcd_base no table
Xx_1448: MOVAPD XMM9, XMM0               # gcd_base_continued_fraction:272    MOVAPD `tmp, `ab
Xx_1449: CMPLEPD XMM9, XMM4              # gcd_base_continued_fraction:273    CMPLEPD `tmp, `ab_threshold
Xx_1450: PTEST XMM9, XMM9                # gcd_base_continued_fraction:274    PTEST `tmp, `tmp
Xx_1451: JNZ _label_22                   # gcd_base_continued_fraction:275    JNZ _label_22
Xx_1452: MOVQ XMM13, R10                 # gcd_base_continued_fraction:278    MOVQ `q, `q_scalar_3
Xx_1453: ROUNDSD XMM13, XMM13, 1         # gcd_base_continued_fraction:282    ROUNDSD `q, `q, 1
Xx_1454: MOVAPD XMM5, [RIP+_label_7]     # gcd_base_continued_fraction:288    MOVAPD `m_0, [RIP+_label_7]
Xx_1455: MOVAPD XMM6, XMM5               # gcd_base_continued_fraction:289    MOVAPD `m_1, `m_0
Xx_1456: SUBSD XMM6, XMM13               # gcd_base_continued_fraction:290    SUBSD `m_1, `q
Xx_1457: SHUFPD XMM6, XMM6, 1            # gcd_base_continued_fraction:291    SHUFPD `m_1, `m_1, 1
Xx_1458: MOVAPD XMM9, XMM0               # gcd_base_continued_fraction:214    MOVAPD `tmp, `ab
Xx_1459: SHUFPD XMM9, XMM9, 0            # gcd_base_continued_fraction:215    SHUFPD `tmp, `tmp, 0
Xx_1460: MOVAPD XMM10, XMM0              # gcd_base_continued_fraction:217    MOVAPD `tmp2, `ab
Xx_1461: SHUFPD XMM10, XMM10, 3          # gcd_base_continued_fraction:218    SHUFPD `tmp2, `tmp2, 3
Xx_1462: MULPD XMM9, XMM5                # dot_product_exact:46               MULPD `b_0, `a_0
Xx_1463: MOVAPD XMM7, XMM9               # dot_product_exact:47               MOVAPD `v, `b_0
Xx_1464: ANDPD XMM9, XMM15               # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1465: CMPNLEPD XMM9, XMM14            # range_check:24                     CMPNLEPD `tmp, `range
Xx_1466: PTEST XMM9, XMM9                # range_check:30                     PTEST `tmp, `tmp
Xx_1467: JNZ _label_22                   # range_check:31                     JNZ _label_22
Xx_1468: MULPD XMM10, XMM6               # dot_product_exact:54               MULPD `b_1, `a_1
Xx_1469: ADDPD XMM7, XMM10               # dot_product_exact:55               ADDPD `v, `b_1
Xx_1470: ANDPD XMM10, XMM15              # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1471: CMPNLEPD XMM10, XMM14           # range_check:24                     CMPNLEPD `tmp, `range
Xx_1472: PTEST XMM10, XMM10              # range_check:30                     PTEST `tmp, `tmp
Xx_1473: JNZ _label_22                   # range_check:31                     JNZ _label_22
Xx_1474: MOVAPD XMM8, XMM7               # gcd_base_continued_fraction:226    MOVAPD `new_ab_1, `new_ab
Xx_1475: SHUFPD XMM8, XMM8, 3            # gcd_base_continued_fraction:227    SHUFPD `new_ab_1, `new_ab_1, 3
Xx_1476: MOVAPD XMM13, XMM7              # gcd_base_continued_fraction:231    MOVAPD `q, `new_ab
Xx_1477: DIVSD XMM13, XMM8               # gcd_base_continued_fraction:232    DIVSD `q, `new_ab_1
Xx_1478: MOVAPD XMM9, XMM1               # gcd_base_continued_fraction:234    MOVAPD `tmp, `u
Xx_1479: SHUFPD XMM9, XMM9, 0            # gcd_base_continued_fraction:235    SHUFPD `tmp, `tmp, 0
Xx_1480: MOVAPD XMM10, XMM1              # gcd_base_continued_fraction:237    MOVAPD `tmp2, `u
Xx_1481: SHUFPD XMM10, XMM10, 3          # gcd_base_continued_fraction:238    SHUFPD `tmp2, `tmp2, 3
Xx_1482: MULPD XMM9, XMM5                # dot_product_exact:46               MULPD `b_0, `a_0
Xx_1483: MOVAPD XMM11, XMM9              # dot_product_exact:47               MOVAPD `v, `b_0
Xx_1484: ANDPD XMM9, XMM15               # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1485: CMPNLEPD XMM9, XMM14            # range_check:24                     CMPNLEPD `tmp, `range
Xx_1486: PTEST XMM9, XMM9                # range_check:30                     PTEST `tmp, `tmp
Xx_1487: JNZ _label_22                   # range_check:31                     JNZ _label_22
Xx_1488: MULPD XMM10, XMM6               # dot_product_exact:54               MULPD `b_1, `a_1
Xx_1489: ADDPD XMM11, XMM10              # dot_product_exact:55               ADDPD `v, `b_1
Xx_1490: ANDPD XMM10, XMM15              # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1491: CMPNLEPD XMM10, XMM14           # range_check:24                     CMPNLEPD `tmp, `range
Xx_1492: PTEST XMM10, XMM10              # range_check:30                     PTEST `tmp, `tmp
Xx_1493: JNZ _label_22                   # range_check:31                     JNZ _label_22
Xx_1494: MOVAPD XMM9, XMM11              # dot_product_exact:60               MOVAPD `b_0, `v
Xx_1495: ANDPD XMM9, XMM15               # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1496: CMPNLEPD XMM9, XMM14            # range_check:24                     CMPNLEPD `tmp, `range
Xx_1497: PTEST XMM9, XMM9                # range_check:30                     PTEST `tmp, `tmp
Xx_1498: JNZ _label_22                   # range_check:31                     JNZ _label_22
Xx_1499: MOVAPD XMM9, XMM2               # gcd_base_continued_fraction:246    MOVAPD `tmp, `v
Xx_1500: SHUFPD XMM9, XMM9, 0            # gcd_base_continued_fraction:247    SHUFPD `tmp, `tmp, 0
Xx_1501: MOVAPD XMM10, XMM2              # gcd_base_continued_fraction:249    MOVAPD `tmp2, `v
Xx_1502: SHUFPD XMM10, XMM10, 3          # gcd_base_continued_fraction:250    SHUFPD `tmp2, `tmp2, 3
Xx_1503: MULPD XMM9, XMM5                # dot_product_exact:46               MULPD `b_0, `a_0
Xx_1504: MOVAPD XMM12, XMM9              # dot_product_exact:47               MOVAPD `v, `b_0
Xx_1505: ANDPD XMM9, XMM15               # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1506: CMPNLEPD XMM9, XMM14            # range_check:24                     CMPNLEPD `tmp, `range
Xx_1507: PTEST XMM9, XMM9                # range_check:30                     PTEST `tmp, `tmp
Xx_1508: JNZ _label_22                   # range_check:31                     JNZ _label_22
Xx_1509: MULPD XMM10, XMM6               # dot_product_exact:54               MULPD `b_1, `a_1
Xx_1510: ADDPD XMM12, XMM10              # dot_product_exact:55               ADDPD `v, `b_1
Xx_1511: ANDPD XMM10, XMM15              # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1512: CMPNLEPD XMM10, XMM14           # range_check:24                     CMPNLEPD `tmp, `range
Xx_1513: PTEST XMM10, XMM10              # range_check:30                     PTEST `tmp, `tmp
Xx_1514: JNZ _label_22                   # range_check:31                     JNZ _label_22
Xx_1515: MOVAPD XMM9, XMM12              # dot_product_exact:60               MOVAPD `b_0, `v
Xx_1516: ANDPD XMM9, XMM15               # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1517: CMPNLEPD XMM9, XMM14            # range_check:24                     CMPNLEPD `tmp, `range
Xx_1518: PTEST XMM9, XMM9                # range_check:30                     PTEST `tmp, `tmp
Xx_1519: JNZ _label_22                   # range_check:31                     JNZ _label_22
Xx_1520: _label_25:                      # gcd_base_continued_fraction:296    _label_25:
Xx_1521: #gcd_base end no table          # gcd_base_continued_fraction:297    #gcd_base end no table
Xx_1522: MOVAPD XMM5, XMM11              # gcd_base_continued_fraction:322    MOVAPD `m_0, `new_u
Xx_1523: SHUFPD XMM5, XMM12, 0           # gcd_base_continued_fraction:323    SHUFPD `m_0, `new_v, 0
Xx_1524: MOVAPD XMM6, XMM11              # gcd_base_continued_fraction:326    MOVAPD `m_1, `new_u
Xx_1525: SHUFPD XMM6, XMM12, 3           # gcd_base_continued_fraction:327    SHUFPD `m_1, `new_v, 3
Xx_1526: MOVAPD XMM9, XMM7               # gcd_base_continued_fraction:330    MOVAPD `tmp, `new_ab
Xx_1527: SHUFPD XMM9, XMM9, 0            # gcd_base_continued_fraction:331    SHUFPD `tmp, `tmp, 0
Xx_1528: SUBPD XMM9, XMM8                # gcd_base_continued_fraction:334    SUBPD `tmp, `new_ab_1
Xx_1529: ADDPD XMM9, XMM5                # gcd_base_continued_fraction:337    ADDPD `tmp, `m_0
Xx_1530: CMPLTPD XMM9, XMM6              # gcd_base_continued_fraction:340    CMPLTPD `tmp, `m_1
Xx_1531: XORPD XMM6, [RIP+_label_12]     # gcd_base_continued_fraction:343    XORPD `m_1, [RIP+_label_12]
Xx_1532: CMPLTPD XMM8, XMM6              # gcd_base_continued_fraction:346    CMPLTPD `new_ab_1, `m_1
Xx_1533: ORPD XMM9, XMM8                 # gcd_base_continued_fraction:350    ORPD `tmp, `new_ab_1
Xx_1534: ANDPD XMM9, XMM3                # gcd_base_continued_fraction:351    ANDPD `tmp, `is_lehmer
Xx_1535: PTEST XMM9, XMM9                # gcd_base_continued_fraction:352    PTEST `tmp, `tmp
Xx_1536: JNZ _label_22                   # gcd_base_continued_fraction:353    JNZ _label_22
Xx_1537: MOVAPD XMM0, XMM7               # gcd_base_continued_fraction:355    MOVAPD `ab, `new_ab
Xx_1538: MOVAPD XMM1, XMM11              # gcd_base_continued_fraction:356    MOVAPD `u, `new_u
Xx_1539: MOVAPD XMM2, XMM12              # gcd_base_continued_fraction:357    MOVAPD `v, `new_v
Xx_1540: DEC R11                         # gcd_base_continued_fraction:360    DEC `loop_counter
Xx_1541: JNZ _label_23                   # gcd_base_continued_fraction:361    JNZ _label_23
Xx_1542: #gcd_base loop end              # gcd_base_continued_fraction:363    #gcd_base loop end
Xx_1543: _label_22:                      # gcd_base_continued_fraction:368    _label_22:
Xx_1544: CMP R11, 0x5                    # gcd_base_continued_fraction:370    CMP `loop_counter, 0x5
Xx_1545: JE _label_19                    # gcd_base_continued_fraction:371    JE _label_19
Xx_1546: MOVAPD XMM8, [RIP+_label_9]     # gcd_128:175                        MOVAPD `double_abs_mask, [RIP+_label_9]
Xx_1547: MOVAPD XMM5, XMM1               # gcd_128:203                        MOVAPD `tmp_a, `vector_u
Xx_1548: PAND XMM5, XMM8                 # gcd_128:189                        PAND `tmp_a, `double_abs_mask
Xx_1549: CVTTSD2SI R8, XMM5              # gcd_128:197                        CVTTSD2SI `m_0_0, `tmp_a
Xx_1550: SHUFPD XMM5, XMM5, 3            # gcd_128:206                        SHUFPD `tmp_a, `tmp_a, 3
Xx_1551: CVTTSD2SI R10, XMM5             # gcd_128:197                        CVTTSD2SI `m_1_0, `tmp_a
Xx_1552: MOVAPD XMM5, XMM2               # gcd_128:211                        MOVAPD `tmp_a, `vector_v
Xx_1553: PAND XMM5, XMM8                 # gcd_128:189                        PAND `tmp_a, `double_abs_mask
Xx_1554: CVTTSD2SI R9, XMM5              # gcd_128:197                        CVTTSD2SI `m_0_1, `tmp_a
Xx_1555: SHUFPD XMM5, XMM5, 3            # gcd_128:214                        SHUFPD `tmp_a, `tmp_a, 3
Xx_1556: CVTTSD2SI R11, XMM5             # gcd_128:197                        CVTTSD2SI `m_1_1, `tmp_a
Xx_1557: MOV R12, [RSP+-0x3d8]           # gcd_128:217                        MOV `tmp_0, `spill_u_0
Xx_1558: MOV R13, [RSP+-0x3d0]           # gcd_128:218                        MOV `tmp_1, `spill_u_1
Xx_1559: MOV RAX, R8                     # dot_product_exact:56               MOV RAX, `a_0
Xx_1560: MUL R12                         # dot_product_exact:57               MUL `b_0
Xx_1561: JC _label_19                    # dot_product_exact:58               JC _label_19
Xx_1562: MOV RBX, RAX                    # dot_product_exact:59               MOV `out, RAX
Xx_1563: MOV RAX, R9                     # dot_product_exact:62               MOV RAX, `a_1
Xx_1564: MUL R13                         # dot_product_exact:63               MUL `b_1
Xx_1565: JC _label_19                    # dot_product_exact:64               JC _label_19
Xx_1566: ADD RBX, RAX                    # dot_product_exact:67               ADD `out, RAX
Xx_1567: JC _label_19                    # dot_product_exact:68               JC _label_19
Xx_1568: MOV RAX, R10                    # dot_product_exact:56               MOV RAX, `a_0
Xx_1569: MUL R12                         # dot_product_exact:57               MUL `b_0
Xx_1570: JC _label_19                    # dot_product_exact:58               JC _label_19
Xx_1571: MOV RBP, RAX                    # dot_product_exact:59               MOV `out, RAX
Xx_1572: MOV RAX, R11                    # dot_product_exact:62               MOV RAX, `a_1
Xx_1573: MUL R13                         # dot_product_exact:63               MUL `b_1
Xx_1574: JC _label_19                    # dot_product_exact:64               JC _label_19
Xx_1575: ADD RBP, RAX                    # dot_product_exact:67               ADD `out, RAX
Xx_1576: JC _label_19                    # dot_product_exact:68               JC _label_19
Xx_1577: MOV R12, [RSP+-0x3c8]           # gcd_128:222                        MOV `tmp_0, `spill_v_0
Xx_1578: MOV R13, [RSP+-0x3c0]           # gcd_128:223                        MOV `tmp_1, `spill_v_1
Xx_1579: MOV RAX, R8                     # dot_product_exact:56               MOV RAX, `a_0
Xx_1580: MUL R12                         # dot_product_exact:57               MUL `b_0
Xx_1581: JC _label_19                    # dot_product_exact:58               JC _label_19
Xx_1582: MOV RSI, RAX                    # dot_product_exact:59               MOV `out, RAX
Xx_1583: MOV RAX, R9                     # dot_product_exact:62               MOV RAX, `a_1
Xx_1584: MUL R13                         # dot_product_exact:63               MUL `b_1
Xx_1585: JC _label_19                    # dot_product_exact:64               JC _label_19
Xx_1586: ADD RSI, RAX                    # dot_product_exact:67               ADD `out, RAX
Xx_1587: JC _label_19                    # dot_product_exact:68               JC _label_19
Xx_1588: MOV RAX, R10                    # dot_product_exact:56               MOV RAX, `a_0
Xx_1589: MUL R12                         # dot_product_exact:57               MUL `b_0
Xx_1590: JC _label_19                    # dot_product_exact:58               JC _label_19
Xx_1591: MOV RDI, RAX                    # dot_product_exact:59               MOV `out, RAX
Xx_1592: MOV RAX, R11                    # dot_product_exact:62               MOV RAX, `a_1
Xx_1593: MUL R13                         # dot_product_exact:63               MUL `b_1
Xx_1594: JC _label_19                    # dot_product_exact:64               JC _label_19
Xx_1595: ADD RDI, RAX                    # dot_product_exact:67               ADD `out, RAX
Xx_1596: JC _label_19                    # dot_product_exact:68               JC _label_19
Xx_1597: MOV R13, [RSP+-0x3f8]           # gcd_128:249                        MOV `ab_start_0_0, `spill_ab_start_0_0
Xx_1598: MOV R14, [RSP+-0x3f0]           # gcd_128:250                        MOV `ab_start_0_1, `spill_ab_start_0_1
Xx_1599: MOV R15, [RSP+-0x3e8]           # gcd_128:251                        MOV `ab_start_1_0, `spill_ab_start_1_0
Xx_1600: MOV RCX, [RSP+-0x3e0]           # gcd_128:252                        MOV `ab_start_1_1, `spill_ab_start_1_1
Xx_1601: MOVAPD XMM5, XMM2               # gcd_128:256                        MOVAPD `tmp_a, `vector_v
Xx_1602: SHUFPD XMM5, XMM5, 3            # gcd_128:257                        SHUFPD `tmp_a, `tmp_a, 3
Xx_1603: MOVQ RAX, XMM5                  # gcd_128:258                        MOVQ RAX, `tmp_a
Xx_1604: SHR RAX, 63                     # gcd_128:259                        SHR RAX, 63
Xx_1605: MOV R12, [RSP+-0x3b8]           # gcd_128:262                        MOV `new_parity, `spill_parity
Xx_1606: XOR R12, RAX                    # gcd_128:263                        XOR `new_parity, RAX
Xx_1607: MOV RAX, R13                    # gcd_128:268                        MOV RAX, `ab_start_0_0
Xx_1608: MUL RBX                         # gcd_128:269                        MUL `new_u_0
Xx_1609: MOV R8, RAX                     # gcd_128:272                        MOV `new_ab_0_0, RAX
Xx_1610: MOV R9, RDX                     # gcd_128:273                        MOV `new_ab_0_1, RDX
Xx_1611: MOV RAX, R14                    # gcd_128:276                        MOV RAX, `ab_start_0_1
Xx_1612: MUL RBX                         # gcd_128:277                        MUL `new_u_0
Xx_1613: ADD R9, RAX                     # gcd_128:280                        ADD `new_ab_0_1, RAX
Xx_1614: MOV RAX, R15                    # gcd_128:283                        MOV RAX, `ab_start_1_0
Xx_1615: MUL RSI                         # gcd_128:284                        MUL `new_v_0
Xx_1616: SUB R8, RAX                     # gcd_128:287                        SUB `new_ab_0_0, RAX
Xx_1617: SBB R9, RDX                     # gcd_128:288                        SBB `new_ab_0_1, RDX
Xx_1618: MOV RAX, RCX                    # gcd_128:291                        MOV RAX, `ab_start_1_1
Xx_1619: MUL RSI                         # gcd_128:292                        MUL `new_v_0
Xx_1620: SUB R9, RAX                     # gcd_128:295                        SUB `new_ab_0_1, RAX
Xx_1621: MOV RAX, R15                    # gcd_128:268                        MOV RAX, `ab_start_1_0
Xx_1622: MUL RDI                         # gcd_128:269                        MUL `new_v_1
Xx_1623: MOV R10, RAX                    # gcd_128:272                        MOV `new_ab_1_0, RAX
Xx_1624: MOV R11, RDX                    # gcd_128:273                        MOV `new_ab_1_1, RDX
Xx_1625: MOV RAX, RCX                    # gcd_128:276                        MOV RAX, `ab_start_1_1
Xx_1626: MUL RDI                         # gcd_128:277                        MUL `new_v_1
Xx_1627: ADD R11, RAX                    # gcd_128:280                        ADD `new_ab_1_1, RAX
Xx_1628: MOV RAX, R13                    # gcd_128:283                        MOV RAX, `ab_start_0_0
Xx_1629: MUL RBP                         # gcd_128:284                        MUL `new_u_1
Xx_1630: SUB R10, RAX                    # gcd_128:287                        SUB `new_ab_1_0, RAX
Xx_1631: SBB R11, RDX                    # gcd_128:288                        SBB `new_ab_1_1, RDX
Xx_1632: MOV RAX, R14                    # gcd_128:291                        MOV RAX, `ab_start_0_1
Xx_1633: MUL RBP                         # gcd_128:292                        MUL `new_u_1
Xx_1634: SUB R11, RAX                    # gcd_128:295                        SUB `new_ab_1_1, RAX
Xx_1635: MOV RAX, -1                     # gcd_128:326                        MOV RAX, -1
Xx_1636: ADD RAX, R12                    # gcd_128:327                        ADD RAX, `new_parity
Xx_1637: NOT RAX                         # gcd_128:328                        NOT RAX
Xx_1638: XOR R8, RAX                     # gcd_128:333                        XOR `new_ab_0_0, RAX
Xx_1639: XOR R9, RAX                     # gcd_128:334                        XOR `new_ab_0_1, RAX
Xx_1640: ADD R8, R12                     # gcd_128:337                        ADD `new_ab_0_0, `new_parity
Xx_1641: ADC R9, 0                       # gcd_128:338                        ADC `new_ab_0_1, 0
Xx_1642: XOR R10, RAX                    # gcd_128:333                        XOR `new_ab_1_0, RAX
Xx_1643: XOR R11, RAX                    # gcd_128:334                        XOR `new_ab_1_1, RAX
Xx_1644: ADD R10, R12                    # gcd_128:337                        ADD `new_ab_1_0, `new_parity
Xx_1645: ADC R11, 0                      # gcd_128:338                        ADC `new_ab_1_1, 0
Xx_1646: MOV RAX, [RSP+-0x3b0]           # gcd_128:366                        MOV `is_lehmer, `spill_is_lehmer
Xx_1647: MOV R15, R8                     # gcd_128:369                        MOV `ab_delta_0, `new_ab_0_0
Xx_1648: MOV RCX, R9                     # gcd_128:370                        MOV `ab_delta_1, `new_ab_0_1
Xx_1649: SUB R15, R10                    # gcd_128:371                        SUB `ab_delta_0, `new_ab_1_0
Xx_1650: SBB RCX, R11                    # gcd_128:372                        SBB `ab_delta_1, `new_ab_1_1
Xx_1651: CMP R12, 0                      # gcd_128:391                        CMP `new_parity, 0
Xx_1652: MOV R13, RBP                    # gcd_128:392                        MOV `ab_threshold_0, `new_u_1
Xx_1653: CMOVE R13, RDI                  # gcd_128:393                        CMOVE `ab_threshold_0, `new_v_1
Xx_1654: MOV R14, RBX                    # gcd_128:397                        MOV `ab_threshold_1, `new_u_0
Xx_1655: CMOVE R14, RSI                  # gcd_128:398                        CMOVE `ab_threshold_1, `new_v_0
Xx_1656: MOV RDX, RDI                    # gcd_128:401                        MOV `b_new_min, `new_v_1
Xx_1657: CMOVE RDX, RBP                  # gcd_128:402                        CMOVE `b_new_min, `new_u_1
Xx_1658: CMP RAX, 0                      # gcd_128:405                        CMP `is_lehmer, 0
Xx_1659: CMOVE R13, RAX                  # gcd_128:406                        CMOVE `ab_threshold_0, `is_lehmer
Xx_1660: CMOVE R14, RAX                  # gcd_128:407                        CMOVE `ab_threshold_1, `is_lehmer
Xx_1661: CMOVE RDX, RAX                  # gcd_128:410                        CMOVE `b_new_min, `is_lehmer
Xx_1662: ADD R13, R14                    # gcd_128:413                        ADD `ab_threshold_0, `ab_threshold_1
Xx_1663: MOV R14, 0                      # gcd_128:414                        MOV `ab_threshold_1, 0
Xx_1664: ADC R14, 0                      # gcd_128:415                        ADC `ab_threshold_1, 0
Xx_1665: SUB R15, R13                    # gcd_128:420                        SUB `ab_delta_0, `ab_threshold_0
Xx_1666: SBB RCX, R14                    # gcd_128:421                        SBB `ab_delta_1, `ab_threshold_1
Xx_1667: JC _label_19                    # gcd_128:422                        JC _label_19
Xx_1668: CMP R10, RDX                    # gcd_128:426                        CMP `new_ab_1_0, `b_new_min
Xx_1669: MOV RDX, R11                    # gcd_128:427                        MOV `b_new_min, `new_ab_1_1
Xx_1670: SBB RDX, 0                      # gcd_128:428                        SBB `b_new_min, 0
Xx_1671: JC _label_19                    # gcd_128:429                        JC _label_19
Xx_1672: MOV R13, [RSP+-0x3a8]           # gcd_128:434                        MOV `ab_threshold_0, `spill_ab_threshold_0
Xx_1673: MOV R14, [RSP+-0x3a0]           # gcd_128:435                        MOV `ab_threshold_1, `spill_ab_threshold_1
Xx_1674: MOV R15, R13                    # gcd_128:438                        MOV `ab_delta_0, `ab_threshold_0
Xx_1675: MOV RCX, R14                    # gcd_128:439                        MOV `ab_delta_1, `ab_threshold_1
Xx_1676: SUB R15, R8                     # gcd_128:440                        SUB `ab_delta_0, `new_ab_0_0
Xx_1677: SBB RCX, R9                     # gcd_128:441                        SBB `ab_delta_1, `new_ab_0_1
Xx_1678: JNC _label_19                   # gcd_128:442                        JNC _label_19
Xx_1679: MOV [RSP+-0x3d8], RBX           # gcd_128:445                        MOV `spill_u_0, `new_u_0
Xx_1680: MOV [RSP+-0x3d0], RBP           # gcd_128:446                        MOV `spill_u_1, `new_u_1
Xx_1681: MOV [RSP+-0x3c8], RSI           # gcd_128:449                        MOV `spill_v_0, `new_v_0
Xx_1682: MOV [RSP+-0x3c0], RDI           # gcd_128:450                        MOV `spill_v_1, `new_v_1
Xx_1683: MOV [RSP+-0x3b8], R12           # gcd_128:453                        MOV `spill_parity, `new_parity
Xx_1684: MOV R15, [RSP+-0x390]           # gcd_128:459                        MOV `ab_delta_0, `spill_iter
Xx_1685: DEC R15                         # gcd_128:460                        DEC `ab_delta_0
Xx_1686: MOV [RSP+-0x390], R15           # gcd_128:461                        MOV `spill_iter, `ab_delta_0
Xx_1687: JZ _label_20                    # gcd_128:462                        JZ _label_20
Xx_1688: _label_17:                      # gcd_128:465                        _label_17:
Xx_1689: XOR RCX, RCX                    # gcd_128:492                        XOR `tmp_3, `tmp_3
Xx_1690: MOV RAX, R10                    # gcd_128:495                        MOV `tmp_0, `ab_1_0
Xx_1691: MOV RDX, R11                    # gcd_128:496                        MOV `tmp_1, `ab_1_1
Xx_1692: SUB RAX, R13                    # gcd_128:497                        SUB `tmp_0, `ab_threshold_0
Xx_1693: SBB RDX, R14                    # gcd_128:498                        SBB `tmp_1, `ab_threshold_1
Xx_1694: JC _label_19                    # gcd_128:501                        JC _label_19
Xx_1695: MOV R15, RAX                    # gcd_128:504                        MOV `tmp_2, `tmp_0
Xx_1696: OR R15, RDX                     # gcd_128:505                        OR `tmp_2, `tmp_1
Xx_1697: JZ _label_19                    # gcd_128:506                        JZ _label_19
Xx_1698: MOV RAX, R9                     # gcd_128:511                        MOV `tmp_0, `ab_0_1
Xx_1699: MOV RDX, 64                     # gcd_128:512                        MOV `tmp_1, 64
Xx_1700: CMP R9, 0                       # gcd_128:513                        CMP `ab_0_1, 0
Xx_1701: JNE _label_26                   # gcd_128:516                        JNE _label_26
Xx_1702: MOV RAX, R8                     # gcd_128:517                        MOV `tmp_0, `ab_0_0
Xx_1703: _label_26:                      # gcd_128:518                        _label_26:
Xx_1704: JNE _label_27                   # gcd_128:521                        JNE _label_27
Xx_1705: MOV RDX, RCX                    # gcd_128:522                        MOV `tmp_1, `tmp_3
Xx_1706: _label_27:                      # gcd_128:523                        _label_27:
Xx_1707: BSR RAX, RAX                    # gcd_128:530                        BSR `tmp_0, `tmp_0
Xx_1708: ADD RDX, RAX                    # gcd_128:533                        ADD `tmp_1, `tmp_0
Xx_1709: INC RDX                         # gcd_128:534                        INC `tmp_1
Xx_1710: XOR RAX, RAX                    # gcd_128:545                        XOR `tmp_0, `tmp_0
Xx_1711: MOV R15, [RSP+-0x3b0]           # gcd_128:546                        MOV `tmp_2, `spill_is_lehmer
Xx_1712: CMP R15, 0                      # gcd_128:547                        CMP `tmp_2, 0
Xx_1713: MOV RCX, 96                     # gcd_128:548                        MOV `tmp_3, 96
Xx_1714: CMOVNE RAX, RCX                 # gcd_128:549                        CMOVNE `tmp_0, `tmp_3
Xx_1715: XOR RCX, RCX                    # gcd_128:550                        XOR `tmp_3, `tmp_3
Xx_1716: CMP RDX, RAX                    # gcd_128:553                        CMP `tmp_1, `tmp_0
Xx_1717: CMOVB RDX, RAX                  # gcd_128:554                        CMOVB `tmp_1, `tmp_0
Xx_1718: SUB RDX, 0x32                   # gcd_128:562                        SUB `tmp_1, 0x32
Xx_1719: CMOVB RDX, RCX                  # gcd_128:566                        CMOVB `tmp_1, `tmp_3
Xx_1720: OR R15, RDX                     # gcd_128:569                        OR `tmp_2, `tmp_1
Xx_1721: .text                           # gcd_128:109                        .text 
Xx_1722: .balign 16                      # gcd_128:113                        .balign 16
Xx_1723: _label_28:                      # gcd_128:114                        _label_28:
Xx_1724: .quad 0x0                       # gcd_128:115                        .quad 0x0
Xx_1725: .quad 0x0                       # gcd_128:116                        .quad 0x0
Xx_1726: .text                           # gcd_128:117                        .text
Xx_1727: LEA RCX, [RIP+_label_28]        # gcd_128:572                        LEA `tmp_3, [RIP+_label_28]
Xx_1728: .text                           # gcd_128:109                        .text 
Xx_1729: .balign 16                      # gcd_128:113                        .balign 16
Xx_1730: _label_29:                      # gcd_128:114                        _label_29:
Xx_1731: .quad 0xffffffffffffffff        # gcd_128:115                        .quad 0xffffffffffffffff
Xx_1732: .quad 0xffffffffffffffff        # gcd_128:116                        .quad 0xffffffffffffffff
Xx_1733: .text                           # gcd_128:117                        .text
Xx_1734: LEA RAX, [RIP+_label_29]        # gcd_128:573                        LEA `tmp_0, [RIP+_label_29]
Xx_1735: CMOVZ RAX, RCX                  # gcd_128:587                        CMOVZ `tmp_0, `tmp_3
Xx_1736: MOVAPD XMM3, [RAX]              # gcd_128:588                        MOVAPD `vector_is_lehmer, [`tmp_0]
Xx_1737: MOV RCX, RDX                    # shift_right:23                     MOV RCX, `amount
Xx_1738: MOV RBP, R10                    # shift_right:24                     MOV `res, `v_0
Xx_1739: SHRD RBP, R11, CL               # shift_right:25                     SHRD `res, `v_1, CL
Xx_1740: XOR R15, R15                    # shift_right:28                     XOR `res_2, `res_2
Xx_1741: SUB RCX, 64                     # shift_right:31                     SUB RCX, 64
Xx_1742: CMOVAE RBP, R15                 # shift_right:35                     CMOVAE `res, `res_2
Xx_1743: CMOVAE R15, R11                 # shift_right:36                     CMOVAE `res_2, `v_1
Xx_1744: SHR R15, CL                     # shift_right:39                     SHR `res_2, CL
Xx_1745: OR RBP, R15                     # shift_right:42                     OR `res, `res_2
Xx_1746: CVTSI2SD XMM0, RBP              # gcd_128:604                        CVTSI2SD `vector_ab, `new_u_1
Xx_1747: SHUFPD XMM0, XMM0, 0            # gcd_128:609                        SHUFPD `vector_ab, `vector_ab, 0
Xx_1748: MOV RCX, RDX                    # shift_right:23                     MOV RCX, `amount
Xx_1749: MOV RBX, R8                     # shift_right:24                     MOV `res, `v_0
Xx_1750: SHRD RBX, R9, CL                # shift_right:25                     SHRD `res, `v_1, CL
Xx_1751: XOR R15, R15                    # shift_right:28                     XOR `res_2, `res_2
Xx_1752: SUB RCX, 64                     # shift_right:31                     SUB RCX, 64
Xx_1753: CMOVAE RBX, R15                 # shift_right:35                     CMOVAE `res, `res_2
Xx_1754: CMOVAE R15, R9                  # shift_right:36                     CMOVAE `res_2, `v_1
Xx_1755: SHR R15, CL                     # shift_right:39                     SHR `res_2, CL
Xx_1756: OR RBX, R15                     # shift_right:42                     OR `res, `res_2
Xx_1757: CVTSI2SD XMM0, RBX              # gcd_128:616                        CVTSI2SD `vector_ab, `new_u_0
Xx_1758: MOV RCX, RDX                    # shift_right:23                     MOV RCX, `amount
Xx_1759: MOV RSI, R13                    # shift_right:24                     MOV `res, `v_0
Xx_1760: SHRD RSI, R14, CL               # shift_right:25                     SHRD `res, `v_1, CL
Xx_1761: XOR R15, R15                    # shift_right:28                     XOR `res_2, `res_2
Xx_1762: SUB RCX, 64                     # shift_right:31                     SUB RCX, 64
Xx_1763: CMOVAE RSI, R15                 # shift_right:35                     CMOVAE `res, `res_2
Xx_1764: CMOVAE R15, R14                 # shift_right:36                     CMOVAE `res_2, `v_1
Xx_1765: SHR R15, CL                     # shift_right:39                     SHR `res_2, CL
Xx_1766: OR RSI, R15                     # shift_right:42                     OR `res, `res_2
Xx_1767: CVTSI2SD XMM4, RSI              # gcd_128:625                        CVTSI2SD `vector_ab_threshold, `new_v_0
Xx_1768: SHUFPD XMM4, XMM4, 0            # gcd_128:626                        SHUFPD `vector_ab_threshold, `vector_ab_threshold, 0
Xx_1769: JMP _label_18                   # gcd_128:630                        JMP _label_18
Xx_1770: _label_19:                      # gcd_128:635                        _label_19:
Xx_1771: MOV R15, [RSP+-0x390]           # gcd_128:643                        MOV `tmp, `spill_iter
Xx_1772: CMP R15, 0x3                    # gcd_128:644                        CMP `tmp, 0x3
Xx_1773: JE _label_14                    # gcd_128:645                        JE _label_14
Xx_1774: JMP _label_20                   # gcd_128:647                        JMP _label_20
Xx_1775: _label_21:                      # gcd_128:652                        _label_21:
Xx_1776: MOV R8, [RSP+-0x3f8]            # gcd_128:654                        MOV `new_ab_0_0, `spill_ab_start_0_0
Xx_1777: MOV R9, [RSP+-0x3f0]            # gcd_128:655                        MOV `new_ab_0_1, `spill_ab_start_0_1
Xx_1778: MOV R10, [RSP+-0x3e8]           # gcd_128:656                        MOV `new_ab_1_0, `spill_ab_start_1_0
Xx_1779: MOV R11, [RSP+-0x3e0]           # gcd_128:657                        MOV `new_ab_1_1, `spill_ab_start_1_1
Xx_1780: MOV R13, [RSP+-0x3a8]           # gcd_128:658                        MOV `ab_threshold_0, `spill_ab_threshold_0
Xx_1781: MOV R14, [RSP+-0x3a0]           # gcd_128:659                        MOV `ab_threshold_1, `spill_ab_threshold_1
Xx_1782: JMP _label_17                   # gcd_128:661                        JMP _label_17
Xx_1783: _label_20:                      # gcd_128:666                        _label_20:
Xx_1784: JMP _label_15                   # compile_asm_gcd_128:140            JMP _label_15
Xx_1785: _label_14:                      # compile_asm_gcd_128:141            _label_14:
Xx_1786: MOV RBX, 1                      # compile_asm_gcd_128:143            MOV `tmp, 1
Xx_1787: JMP _label_16                   # compile_asm_gcd_128:144            JMP _label_16
Xx_1788: _label_15:                      # compile_asm_gcd_128:146            _label_15:
Xx_1789: MOV RBX, 0                      # compile_asm_gcd_128:148            MOV `tmp, 0
Xx_1790: _label_16:                      # compile_asm_gcd_128:150            _label_16:
Xx_1791: MOV [RSP+-0x398], RBX           # compile_asm_gcd_128:152            MOV [RSP+-0x398], `tmp
Xx_1792: MOV RBP, [RSP+-0x400]           # compile_asm_gcd_128:154            MOV `data_addr, `spill_data_addr
Xx_1793: MOV RBX, [RSP+-0x3f8]           # compile_asm_gcd_128:157            MOV `tmp, [RSP+-0x3f8]
Xx_1794: MOV [RBP+0x0], RBX              # compile_asm_gcd_128:158            MOV [`data_addr+0x0], `tmp
Xx_1795: MOV RBX, [RSP+-0x3f0]           # compile_asm_gcd_128:157            MOV `tmp, [RSP+-0x3f0]
Xx_1796: MOV [RBP+0x8], RBX              # compile_asm_gcd_128:158            MOV [`data_addr+0x8], `tmp
Xx_1797: MOV RBX, [RSP+-0x3e8]           # compile_asm_gcd_128:157            MOV `tmp, [RSP+-0x3e8]
Xx_1798: MOV [RBP+0x10], RBX             # compile_asm_gcd_128:158            MOV [`data_addr+0x10], `tmp
Xx_1799: MOV RBX, [RSP+-0x3e0]           # compile_asm_gcd_128:157            MOV `tmp, [RSP+-0x3e0]
Xx_1800: MOV [RBP+0x18], RBX             # compile_asm_gcd_128:158            MOV [`data_addr+0x18], `tmp
Xx_1801: MOV RBX, [RSP+-0x3d8]           # compile_asm_gcd_128:157            MOV `tmp, [RSP+-0x3d8]
Xx_1802: MOV [RBP+0x20], RBX             # compile_asm_gcd_128:158            MOV [`data_addr+0x20], `tmp
Xx_1803: MOV RBX, [RSP+-0x3d0]           # compile_asm_gcd_128:157            MOV `tmp, [RSP+-0x3d0]
Xx_1804: MOV [RBP+0x28], RBX             # compile_asm_gcd_128:158            MOV [`data_addr+0x28], `tmp
Xx_1805: MOV RBX, [RSP+-0x3c8]           # compile_asm_gcd_128:157            MOV `tmp, [RSP+-0x3c8]
Xx_1806: MOV [RBP+0x30], RBX             # compile_asm_gcd_128:158            MOV [`data_addr+0x30], `tmp
Xx_1807: MOV RBX, [RSP+-0x3c0]           # compile_asm_gcd_128:157            MOV `tmp, [RSP+-0x3c0]
Xx_1808: MOV [RBP+0x38], RBX             # compile_asm_gcd_128:158            MOV [`data_addr+0x38], `tmp
Xx_1809: MOV RBX, [RSP+-0x3b8]           # compile_asm_gcd_128:157            MOV `tmp, [RSP+-0x3b8]
Xx_1810: MOV [RBP+0x40], RBX             # compile_asm_gcd_128:158            MOV [`data_addr+0x40], `tmp
Xx_1811: MOV RBX, [RSP+-0x3b0]           # compile_asm_gcd_128:157            MOV `tmp, [RSP+-0x3b0]
Xx_1812: MOV [RBP+0x48], RBX             # compile_asm_gcd_128:158            MOV [`data_addr+0x48], `tmp
Xx_1813: MOV RBX, [RSP+-0x3a8]           # compile_asm_gcd_128:157            MOV `tmp, [RSP+-0x3a8]
Xx_1814: MOV [RBP+0x50], RBX             # compile_asm_gcd_128:158            MOV [`data_addr+0x50], `tmp
Xx_1815: MOV RBX, [RSP+-0x3a0]           # compile_asm_gcd_128:157            MOV `tmp, [RSP+-0x3a0]
Xx_1816: MOV [RBP+0x58], RBX             # compile_asm_gcd_128:158            MOV [`data_addr+0x58], `tmp
Xx_1817: MOV RBX, [RSP+-0x398]           # compile_asm_gcd_128:157            MOV `tmp, [RSP+-0x398]
Xx_1818: MOV [RBP+0x60], RBX             # compile_asm_gcd_128:158            MOV [`data_addr+0x60], `tmp
Xx_1819: MOV RAX, 0                      # ~asm_function:107                  MOV RAX, 0
Xx_1820: _label_30:                      # ~asm_function:110                  _label_30:
Xx_1821: MOV RSP, [RSP]                  # ~asm_function:112                  MOV RSP, [RSP]
Xx_1822: POP R15                         # ~asm_function:114                  POP R15
Xx_1823: POP R14                         # ~asm_function:114                  POP R14
Xx_1824: POP R13                         # ~asm_function:114                  POP R13
Xx_1825: POP R12                         # ~asm_function:114                  POP R12
Xx_1826: POP RBX                         # ~asm_function:114                  POP RBX
Xx_1827: POP RBP                         # ~asm_function:114                  POP RBP
Xx_1828: RET                             # ~asm_function:116                  RET
Xx_1829: .global _asm_func_gcd_unsigned  # asm_function:64                    .global _asm_func_gcd_unsigned
Xx_1830: _asm_func_gcd_unsigned:         # asm_function:65                    _asm_func_gcd_unsigned:
Xx_1831: PUSH RBP                        # asm_function:84                    PUSH RBP
Xx_1832: PUSH RBX                        # asm_function:84                    PUSH RBX
Xx_1833: PUSH R12                        # asm_function:84                    PUSH R12
Xx_1834: PUSH R13                        # asm_function:84                    PUSH R13
Xx_1835: PUSH R14                        # asm_function:84                    PUSH R14
Xx_1836: PUSH R15                        # asm_function:84                    PUSH R15
Xx_1837: MOV RAX, RSP                    # asm_function:96                    MOV RAX, RSP
Xx_1838: AND RSP, -64                    # asm_function:97                    AND RSP, -64
Xx_1839: SUB RSP, 64                     # asm_function:98                    SUB RSP, 64
Xx_1840: MOV [RSP], RAX                  # asm_function:99                    MOV [RSP], RAX
Xx_1841: MOV [RSP+-0x400], RDI           # compile_asm_gcd_unsigned:202       MOV `spill_data_addr, `data_addr
Xx_1842: MOV RBX, [RDI+0x0]              # compile_asm_gcd_unsigned:205       MOV `tmp, [`data_addr+0x0]
Xx_1843: MOV [RSP+-0x3f8], RBX           # compile_asm_gcd_unsigned:206       MOV [RSP+-0x3f8], `tmp
Xx_1844: MOV RBX, [RDI+0x8]              # compile_asm_gcd_unsigned:205       MOV `tmp, [`data_addr+0x8]
Xx_1845: MOV [RSP+-0x3f0], RBX           # compile_asm_gcd_unsigned:206       MOV [RSP+-0x3f0], `tmp
Xx_1846: MOV RBX, [RDI+0x10]             # compile_asm_gcd_unsigned:205       MOV `tmp, [`data_addr+0x10]
Xx_1847: MOV [RSP+-0x3e8], RBX           # compile_asm_gcd_unsigned:206       MOV [RSP+-0x3e8], `tmp
Xx_1848: MOV RBX, [RDI+0x18]             # compile_asm_gcd_unsigned:205       MOV `tmp, [`data_addr+0x18]
Xx_1849: MOV [RSP+-0x3e0], RBX           # compile_asm_gcd_unsigned:206       MOV [RSP+-0x3e0], `tmp
Xx_1850: MOV RBX, [RDI+0x20]             # compile_asm_gcd_unsigned:205       MOV `tmp, [`data_addr+0x20]
Xx_1851: MOV [RSP+-0x3d8], RBX           # compile_asm_gcd_unsigned:206       MOV [RSP+-0x3d8], `tmp
Xx_1852: MOV RBX, [RDI+0x28]             # compile_asm_gcd_unsigned:205       MOV `tmp, [`data_addr+0x28]
Xx_1853: MOV [RSP+-0x3d0], RBX           # compile_asm_gcd_unsigned:206       MOV [RSP+-0x3d0], `tmp
Xx_1854: MOV RBX, [RDI+0x30]             # compile_asm_gcd_unsigned:205       MOV `tmp, [`data_addr+0x30]
Xx_1855: MOV [RSP+-0x3c8], RBX           # compile_asm_gcd_unsigned:206       MOV [RSP+-0x3c8], `tmp
Xx_1856: MOV RBX, [RDI+0x38]             # compile_asm_gcd_unsigned:205       MOV `tmp, [`data_addr+0x38]
Xx_1857: MOV [RSP+-0x3c0], RBX           # compile_asm_gcd_unsigned:206       MOV [RSP+-0x3c0], `tmp
Xx_1858: MOV RBX, [RDI+0x40]             # compile_asm_gcd_unsigned:205       MOV `tmp, [`data_addr+0x40]
Xx_1859: MOV [RSP+-0x3b8], RBX           # compile_asm_gcd_unsigned:206       MOV [RSP+-0x3b8], `tmp
Xx_1860: MOV RBX, [RDI+0x48]             # compile_asm_gcd_unsigned:205       MOV `tmp, [`data_addr+0x48]
Xx_1861: MOV [RSP+-0x3b0], RBX           # compile_asm_gcd_unsigned:206       MOV [RSP+-0x3b0], `tmp
Xx_1862: MOV QWORD PTR [RSP+-0x3b8], -1  # gcd_unsigned:415                   MOV QWORD PTR `spill_iter, -1
Xx_1863: JMP _label_31                   # gcd_unsigned:421                   JMP _label_31
Xx_1864: _label_32:                      # gcd_unsigned:423                   _label_32:
Xx_1865: MOV QWORD PTR [RSP+-0x3a8], 1   # gcd_128:107                        MOV QWORD PTR `spill_u_0, 1
Xx_1866: MOV QWORD PTR [RSP+-0x3a0], 0   # gcd_128:108                        MOV QWORD PTR `spill_u_1, 0
Xx_1867: MOV QWORD PTR [RSP+-0x398], 0   # gcd_128:109                        MOV QWORD PTR `spill_v_0, 0
Xx_1868: MOV QWORD PTR [RSP+-0x390], 1   # gcd_128:110                        MOV QWORD PTR `spill_v_1, 1
Xx_1869: MOV QWORD PTR [RSP+-0x388], 0   # gcd_128:111                        MOV QWORD PTR `spill_parity, 0
Xx_1870: MOV QWORD PTR [RSP+-0x348], 0x3 # gcd_128:112                        MOV QWORD PTR `spill_iter, 0x3
Xx_1871: JMP _label_38                   # gcd_128:120                        JMP _label_38
Xx_1872: _label_35:                      # gcd_128:122                        _label_35:
Xx_1873: MOV R12, [RIP+_label_3]         # gcd_base_continued_fraction:141    MOV `c_table_delta_minus_1, [RIP+_label_3]
Xx_1874: MOV R11, 0x5                    # gcd_base_continued_fraction:146    MOV `loop_counter, 0x5
Xx_1875: MOVAPD XMM1, [RIP+_label_6]     # gcd_base_continued_fraction:148    MOVAPD `u, [RIP+_label_6]
Xx_1876: MOVAPD XMM2, [RIP+_label_7]     # gcd_base_continued_fraction:149    MOVAPD `v, [RIP+_label_7]
Xx_1877: MOVAPD XMM14, [RIP+_label_8]    # gcd_base_continued_fraction:150    MOVAPD `range_check_range, [RIP+_label_8]
Xx_1878: MOVAPD XMM15, [RIP+_label_9]    # gcd_base_continued_fraction:151    MOVAPD `double_abs_mask, [RIP+_label_9]
Xx_1879: MOVAPD XMM9, XMM0               # gcd_base_continued_fraction:154    MOVAPD `tmp, `ab
Xx_1880: SHUFPD XMM9, XMM9, 3            # gcd_base_continued_fraction:155    SHUFPD `tmp, `tmp, 3
Xx_1881: MOVAPD XMM13, XMM0              # gcd_base_continued_fraction:156    MOVAPD `q, `ab
Xx_1882: DIVSD XMM13, XMM9               # gcd_base_continued_fraction:157    DIVSD `q, `tmp
Xx_1883: _label_40:                      # gcd_base_continued_fraction:160    _label_40:
Xx_1884: #gcd_base loop start            # gcd_base_continued_fraction:166    #gcd_base loop start
Xx_1885: MOVQ R8, XMM13                  # gcd_base_continued_fraction:169    MOVQ `q_scalar, `q
Xx_1886: MOV R9, R8                      # gcd_base_continued_fraction:170    MOV `q_scalar_2, `q_scalar
Xx_1887: MOV R10, R8                     # gcd_base_continued_fraction:171    MOV `q_scalar_3, `q_scalar
Xx_1888: SHR R8, 0x28                    # gcd_base_continued_fraction:175    SHR `q_scalar, 0x28
Xx_1889: AND R8, -32                     # gcd_base_continued_fraction:176    AND `q_scalar, -32
Xx_1890: SUB R8, 0x3ff000                # gcd_base_continued_fraction:181    SUB `q_scalar, 0x3ff000
Xx_1891: JB _label_41                    # gcd_base_continued_fraction:182    JB _label_41
Xx_1892: CMP R8, 0x8000                  # gcd_base_continued_fraction:183    CMP `q_scalar, 0x8000
Xx_1893: JAE _label_41                   # gcd_base_continued_fraction:184    JAE _label_41
Xx_1894: LEA RSI,[RIP+gcd_base_table]    # gcd_base_continued_fraction:189    LEA RSI,[RIP+gcd_base_table]
Xx_1895: MOVAPD XMM5, [R8+RSI]           # gcd_base_continued_fraction:190    MOVAPD `m_0, [`q_scalar+RSI]
Xx_1896: MOVAPD XMM6, [16+R8+RSI]        # gcd_base_continued_fraction:191    MOVAPD `m_1, [16+`q_scalar+RSI]
Xx_1897: MOVAPD XMM9, XMM0               # gcd_base_continued_fraction:199    MOVAPD `tmp, `ab
Xx_1898: CMPLEPD XMM9, XMM4              # gcd_base_continued_fraction:200    CMPLEPD `tmp, `ab_threshold
Xx_1899: PTEST XMM9, XMM9                # gcd_base_continued_fraction:201    PTEST `tmp, `tmp
Xx_1900: JNZ _label_39                   # gcd_base_continued_fraction:202    JNZ _label_39
Xx_1901: AND R9, R12                     # gcd_base_continued_fraction:205    AND `q_scalar_2, `c_table_delta_minus_1
Xx_1902: JZ _label_41                    # gcd_base_continued_fraction:206    JZ _label_41
Xx_1903: CMP R9, R12                     # gcd_base_continued_fraction:207    CMP `q_scalar_2, `c_table_delta_minus_1
Xx_1904: JE _label_41                    # gcd_base_continued_fraction:208    JE _label_41
Xx_1905: MOVAPD XMM9, XMM0               # gcd_base_continued_fraction:214    MOVAPD `tmp, `ab
Xx_1906: SHUFPD XMM9, XMM9, 0            # gcd_base_continued_fraction:215    SHUFPD `tmp, `tmp, 0
Xx_1907: MOVAPD XMM10, XMM0              # gcd_base_continued_fraction:217    MOVAPD `tmp2, `ab
Xx_1908: SHUFPD XMM10, XMM10, 3          # gcd_base_continued_fraction:218    SHUFPD `tmp2, `tmp2, 3
Xx_1909: MULPD XMM9, XMM5                # dot_product_exact:46               MULPD `b_0, `a_0
Xx_1910: MOVAPD XMM7, XMM9               # dot_product_exact:47               MOVAPD `v, `b_0
Xx_1911: ANDPD XMM9, XMM15               # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1912: CMPNLEPD XMM9, XMM14            # range_check:24                     CMPNLEPD `tmp, `range
Xx_1913: PTEST XMM9, XMM9                # range_check:30                     PTEST `tmp, `tmp
Xx_1914: JNZ _label_41                   # range_check:31                     JNZ _label_41
Xx_1915: MULPD XMM10, XMM6               # dot_product_exact:54               MULPD `b_1, `a_1
Xx_1916: ADDPD XMM7, XMM10               # dot_product_exact:55               ADDPD `v, `b_1
Xx_1917: ANDPD XMM10, XMM15              # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1918: CMPNLEPD XMM10, XMM14           # range_check:24                     CMPNLEPD `tmp, `range
Xx_1919: PTEST XMM10, XMM10              # range_check:30                     PTEST `tmp, `tmp
Xx_1920: JNZ _label_41                   # range_check:31                     JNZ _label_41
Xx_1921: MOVAPD XMM8, XMM7               # gcd_base_continued_fraction:226    MOVAPD `new_ab_1, `new_ab
Xx_1922: SHUFPD XMM8, XMM8, 3            # gcd_base_continued_fraction:227    SHUFPD `new_ab_1, `new_ab_1, 3
Xx_1923: MOVAPD XMM13, XMM7              # gcd_base_continued_fraction:231    MOVAPD `q, `new_ab
Xx_1924: DIVSD XMM13, XMM8               # gcd_base_continued_fraction:232    DIVSD `q, `new_ab_1
Xx_1925: MOVAPD XMM9, XMM1               # gcd_base_continued_fraction:234    MOVAPD `tmp, `u
Xx_1926: SHUFPD XMM9, XMM9, 0            # gcd_base_continued_fraction:235    SHUFPD `tmp, `tmp, 0
Xx_1927: MOVAPD XMM10, XMM1              # gcd_base_continued_fraction:237    MOVAPD `tmp2, `u
Xx_1928: SHUFPD XMM10, XMM10, 3          # gcd_base_continued_fraction:238    SHUFPD `tmp2, `tmp2, 3
Xx_1929: MULPD XMM9, XMM5                # dot_product_exact:46               MULPD `b_0, `a_0
Xx_1930: MOVAPD XMM11, XMM9              # dot_product_exact:47               MOVAPD `v, `b_0
Xx_1931: ANDPD XMM9, XMM15               # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1932: CMPNLEPD XMM9, XMM14            # range_check:24                     CMPNLEPD `tmp, `range
Xx_1933: PTEST XMM9, XMM9                # range_check:30                     PTEST `tmp, `tmp
Xx_1934: JNZ _label_41                   # range_check:31                     JNZ _label_41
Xx_1935: MULPD XMM10, XMM6               # dot_product_exact:54               MULPD `b_1, `a_1
Xx_1936: ADDPD XMM11, XMM10              # dot_product_exact:55               ADDPD `v, `b_1
Xx_1937: ANDPD XMM10, XMM15              # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1938: CMPNLEPD XMM10, XMM14           # range_check:24                     CMPNLEPD `tmp, `range
Xx_1939: PTEST XMM10, XMM10              # range_check:30                     PTEST `tmp, `tmp
Xx_1940: JNZ _label_41                   # range_check:31                     JNZ _label_41
Xx_1941: MOVAPD XMM9, XMM11              # dot_product_exact:60               MOVAPD `b_0, `v
Xx_1942: ANDPD XMM9, XMM15               # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1943: CMPNLEPD XMM9, XMM14            # range_check:24                     CMPNLEPD `tmp, `range
Xx_1944: PTEST XMM9, XMM9                # range_check:30                     PTEST `tmp, `tmp
Xx_1945: JNZ _label_41                   # range_check:31                     JNZ _label_41
Xx_1946: MOVAPD XMM9, XMM2               # gcd_base_continued_fraction:246    MOVAPD `tmp, `v
Xx_1947: SHUFPD XMM9, XMM9, 0            # gcd_base_continued_fraction:247    SHUFPD `tmp, `tmp, 0
Xx_1948: MOVAPD XMM10, XMM2              # gcd_base_continued_fraction:249    MOVAPD `tmp2, `v
Xx_1949: SHUFPD XMM10, XMM10, 3          # gcd_base_continued_fraction:250    SHUFPD `tmp2, `tmp2, 3
Xx_1950: MULPD XMM9, XMM5                # dot_product_exact:46               MULPD `b_0, `a_0
Xx_1951: MOVAPD XMM12, XMM9              # dot_product_exact:47               MOVAPD `v, `b_0
Xx_1952: ANDPD XMM9, XMM15               # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1953: CMPNLEPD XMM9, XMM14            # range_check:24                     CMPNLEPD `tmp, `range
Xx_1954: PTEST XMM9, XMM9                # range_check:30                     PTEST `tmp, `tmp
Xx_1955: JNZ _label_41                   # range_check:31                     JNZ _label_41
Xx_1956: MULPD XMM10, XMM6               # dot_product_exact:54               MULPD `b_1, `a_1
Xx_1957: ADDPD XMM12, XMM10              # dot_product_exact:55               ADDPD `v, `b_1
Xx_1958: ANDPD XMM10, XMM15              # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1959: CMPNLEPD XMM10, XMM14           # range_check:24                     CMPNLEPD `tmp, `range
Xx_1960: PTEST XMM10, XMM10              # range_check:30                     PTEST `tmp, `tmp
Xx_1961: JNZ _label_41                   # range_check:31                     JNZ _label_41
Xx_1962: MOVAPD XMM9, XMM12              # dot_product_exact:60               MOVAPD `b_0, `v
Xx_1963: ANDPD XMM9, XMM15               # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1964: CMPNLEPD XMM9, XMM14            # range_check:24                     CMPNLEPD `tmp, `range
Xx_1965: PTEST XMM9, XMM9                # range_check:30                     PTEST `tmp, `tmp
Xx_1966: JNZ _label_41                   # range_check:31                     JNZ _label_41
Xx_1967: UCOMISD XMM7, XMM4              # gcd_base_continued_fraction:260    UCOMISD `new_ab, `ab_threshold
Xx_1968: JBE _label_41                   # gcd_base_continued_fraction:261    JBE _label_41
Xx_1969: JMP _label_42                   # gcd_base_continued_fraction:264    JMP _label_42
Xx_1970: _label_41:                      # gcd_base_continued_fraction:266    _label_41:
Xx_1971: #gcd_base no table              # gcd_base_continued_fraction:267    #gcd_base no table
Xx_1972: MOVAPD XMM9, XMM0               # gcd_base_continued_fraction:272    MOVAPD `tmp, `ab
Xx_1973: CMPLEPD XMM9, XMM4              # gcd_base_continued_fraction:273    CMPLEPD `tmp, `ab_threshold
Xx_1974: PTEST XMM9, XMM9                # gcd_base_continued_fraction:274    PTEST `tmp, `tmp
Xx_1975: JNZ _label_39                   # gcd_base_continued_fraction:275    JNZ _label_39
Xx_1976: MOVQ XMM13, R10                 # gcd_base_continued_fraction:278    MOVQ `q, `q_scalar_3
Xx_1977: ROUNDSD XMM13, XMM13, 1         # gcd_base_continued_fraction:282    ROUNDSD `q, `q, 1
Xx_1978: MOVAPD XMM5, [RIP+_label_7]     # gcd_base_continued_fraction:288    MOVAPD `m_0, [RIP+_label_7]
Xx_1979: MOVAPD XMM6, XMM5               # gcd_base_continued_fraction:289    MOVAPD `m_1, `m_0
Xx_1980: SUBSD XMM6, XMM13               # gcd_base_continued_fraction:290    SUBSD `m_1, `q
Xx_1981: SHUFPD XMM6, XMM6, 1            # gcd_base_continued_fraction:291    SHUFPD `m_1, `m_1, 1
Xx_1982: MOVAPD XMM9, XMM0               # gcd_base_continued_fraction:214    MOVAPD `tmp, `ab
Xx_1983: SHUFPD XMM9, XMM9, 0            # gcd_base_continued_fraction:215    SHUFPD `tmp, `tmp, 0
Xx_1984: MOVAPD XMM10, XMM0              # gcd_base_continued_fraction:217    MOVAPD `tmp2, `ab
Xx_1985: SHUFPD XMM10, XMM10, 3          # gcd_base_continued_fraction:218    SHUFPD `tmp2, `tmp2, 3
Xx_1986: MULPD XMM9, XMM5                # dot_product_exact:46               MULPD `b_0, `a_0
Xx_1987: MOVAPD XMM7, XMM9               # dot_product_exact:47               MOVAPD `v, `b_0
Xx_1988: ANDPD XMM9, XMM15               # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1989: CMPNLEPD XMM9, XMM14            # range_check:24                     CMPNLEPD `tmp, `range
Xx_1990: PTEST XMM9, XMM9                # range_check:30                     PTEST `tmp, `tmp
Xx_1991: JNZ _label_39                   # range_check:31                     JNZ _label_39
Xx_1992: MULPD XMM10, XMM6               # dot_product_exact:54               MULPD `b_1, `a_1
Xx_1993: ADDPD XMM7, XMM10               # dot_product_exact:55               ADDPD `v, `b_1
Xx_1994: ANDPD XMM10, XMM15              # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_1995: CMPNLEPD XMM10, XMM14           # range_check:24                     CMPNLEPD `tmp, `range
Xx_1996: PTEST XMM10, XMM10              # range_check:30                     PTEST `tmp, `tmp
Xx_1997: JNZ _label_39                   # range_check:31                     JNZ _label_39
Xx_1998: MOVAPD XMM8, XMM7               # gcd_base_continued_fraction:226    MOVAPD `new_ab_1, `new_ab
Xx_1999: SHUFPD XMM8, XMM8, 3            # gcd_base_continued_fraction:227    SHUFPD `new_ab_1, `new_ab_1, 3
Xx_2000: MOVAPD XMM13, XMM7              # gcd_base_continued_fraction:231    MOVAPD `q, `new_ab
Xx_2001: DIVSD XMM13, XMM8               # gcd_base_continued_fraction:232    DIVSD `q, `new_ab_1
Xx_2002: MOVAPD XMM9, XMM1               # gcd_base_continued_fraction:234    MOVAPD `tmp, `u
Xx_2003: SHUFPD XMM9, XMM9, 0            # gcd_base_continued_fraction:235    SHUFPD `tmp, `tmp, 0
Xx_2004: MOVAPD XMM10, XMM1              # gcd_base_continued_fraction:237    MOVAPD `tmp2, `u
Xx_2005: SHUFPD XMM10, XMM10, 3          # gcd_base_continued_fraction:238    SHUFPD `tmp2, `tmp2, 3
Xx_2006: MULPD XMM9, XMM5                # dot_product_exact:46               MULPD `b_0, `a_0
Xx_2007: MOVAPD XMM11, XMM9              # dot_product_exact:47               MOVAPD `v, `b_0
Xx_2008: ANDPD XMM9, XMM15               # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_2009: CMPNLEPD XMM9, XMM14            # range_check:24                     CMPNLEPD `tmp, `range
Xx_2010: PTEST XMM9, XMM9                # range_check:30                     PTEST `tmp, `tmp
Xx_2011: JNZ _label_39                   # range_check:31                     JNZ _label_39
Xx_2012: MULPD XMM10, XMM6               # dot_product_exact:54               MULPD `b_1, `a_1
Xx_2013: ADDPD XMM11, XMM10              # dot_product_exact:55               ADDPD `v, `b_1
Xx_2014: ANDPD XMM10, XMM15              # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_2015: CMPNLEPD XMM10, XMM14           # range_check:24                     CMPNLEPD `tmp, `range
Xx_2016: PTEST XMM10, XMM10              # range_check:30                     PTEST `tmp, `tmp
Xx_2017: JNZ _label_39                   # range_check:31                     JNZ _label_39
Xx_2018: MOVAPD XMM9, XMM11              # dot_product_exact:60               MOVAPD `b_0, `v
Xx_2019: ANDPD XMM9, XMM15               # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_2020: CMPNLEPD XMM9, XMM14            # range_check:24                     CMPNLEPD `tmp, `range
Xx_2021: PTEST XMM9, XMM9                # range_check:30                     PTEST `tmp, `tmp
Xx_2022: JNZ _label_39                   # range_check:31                     JNZ _label_39
Xx_2023: MOVAPD XMM9, XMM2               # gcd_base_continued_fraction:246    MOVAPD `tmp, `v
Xx_2024: SHUFPD XMM9, XMM9, 0            # gcd_base_continued_fraction:247    SHUFPD `tmp, `tmp, 0
Xx_2025: MOVAPD XMM10, XMM2              # gcd_base_continued_fraction:249    MOVAPD `tmp2, `v
Xx_2026: SHUFPD XMM10, XMM10, 3          # gcd_base_continued_fraction:250    SHUFPD `tmp2, `tmp2, 3
Xx_2027: MULPD XMM9, XMM5                # dot_product_exact:46               MULPD `b_0, `a_0
Xx_2028: MOVAPD XMM12, XMM9              # dot_product_exact:47               MOVAPD `v, `b_0
Xx_2029: ANDPD XMM9, XMM15               # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_2030: CMPNLEPD XMM9, XMM14            # range_check:24                     CMPNLEPD `tmp, `range
Xx_2031: PTEST XMM9, XMM9                # range_check:30                     PTEST `tmp, `tmp
Xx_2032: JNZ _label_39                   # range_check:31                     JNZ _label_39
Xx_2033: MULPD XMM10, XMM6               # dot_product_exact:54               MULPD `b_1, `a_1
Xx_2034: ADDPD XMM12, XMM10              # dot_product_exact:55               ADDPD `v, `b_1
Xx_2035: ANDPD XMM10, XMM15              # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_2036: CMPNLEPD XMM10, XMM14           # range_check:24                     CMPNLEPD `tmp, `range
Xx_2037: PTEST XMM10, XMM10              # range_check:30                     PTEST `tmp, `tmp
Xx_2038: JNZ _label_39                   # range_check:31                     JNZ _label_39
Xx_2039: MOVAPD XMM9, XMM12              # dot_product_exact:60               MOVAPD `b_0, `v
Xx_2040: ANDPD XMM9, XMM15               # range_check:21                     ANDPD `tmp, `double_abs_mask
Xx_2041: CMPNLEPD XMM9, XMM14            # range_check:24                     CMPNLEPD `tmp, `range
Xx_2042: PTEST XMM9, XMM9                # range_check:30                     PTEST `tmp, `tmp
Xx_2043: JNZ _label_39                   # range_check:31                     JNZ _label_39
Xx_2044: _label_42:                      # gcd_base_continued_fraction:296    _label_42:
Xx_2045: #gcd_base end no table          # gcd_base_continued_fraction:297    #gcd_base end no table
Xx_2046: MOVAPD XMM5, XMM11              # gcd_base_continued_fraction:322    MOVAPD `m_0, `new_u
Xx_2047: SHUFPD XMM5, XMM12, 0           # gcd_base_continued_fraction:323    SHUFPD `m_0, `new_v, 0
Xx_2048: MOVAPD XMM6, XMM11              # gcd_base_continued_fraction:326    MOVAPD `m_1, `new_u
Xx_2049: SHUFPD XMM6, XMM12, 3           # gcd_base_continued_fraction:327    SHUFPD `m_1, `new_v, 3
Xx_2050: MOVAPD XMM9, XMM7               # gcd_base_continued_fraction:330    MOVAPD `tmp, `new_ab
Xx_2051: SHUFPD XMM9, XMM9, 0            # gcd_base_continued_fraction:331    SHUFPD `tmp, `tmp, 0
Xx_2052: SUBPD XMM9, XMM8                # gcd_base_continued_fraction:334    SUBPD `tmp, `new_ab_1
Xx_2053: ADDPD XMM9, XMM5                # gcd_base_continued_fraction:337    ADDPD `tmp, `m_0
Xx_2054: CMPLTPD XMM9, XMM6              # gcd_base_continued_fraction:340    CMPLTPD `tmp, `m_1
Xx_2055: XORPD XMM6, [RIP+_label_12]     # gcd_base_continued_fraction:343    XORPD `m_1, [RIP+_label_12]
Xx_2056: CMPLTPD XMM8, XMM6              # gcd_base_continued_fraction:346    CMPLTPD `new_ab_1, `m_1
Xx_2057: ORPD XMM9, XMM8                 # gcd_base_continued_fraction:350    ORPD `tmp, `new_ab_1
Xx_2058: ANDPD XMM9, XMM3                # gcd_base_continued_fraction:351    ANDPD `tmp, `is_lehmer
Xx_2059: PTEST XMM9, XMM9                # gcd_base_continued_fraction:352    PTEST `tmp, `tmp
Xx_2060: JNZ _label_39                   # gcd_base_continued_fraction:353    JNZ _label_39
Xx_2061: MOVAPD XMM0, XMM7               # gcd_base_continued_fraction:355    MOVAPD `ab, `new_ab
Xx_2062: MOVAPD XMM1, XMM11              # gcd_base_continued_fraction:356    MOVAPD `u, `new_u
Xx_2063: MOVAPD XMM2, XMM12              # gcd_base_continued_fraction:357    MOVAPD `v, `new_v
Xx_2064: DEC R11                         # gcd_base_continued_fraction:360    DEC `loop_counter
Xx_2065: JNZ _label_40                   # gcd_base_continued_fraction:361    JNZ _label_40
Xx_2066: #gcd_base loop end              # gcd_base_continued_fraction:363    #gcd_base loop end
Xx_2067: _label_39:                      # gcd_base_continued_fraction:368    _label_39:
Xx_2068: CMP R11, 0x5                    # gcd_base_continued_fraction:370    CMP `loop_counter, 0x5
Xx_2069: JE _label_36                    # gcd_base_continued_fraction:371    JE _label_36
Xx_2070: MOVAPD XMM8, [RIP+_label_9]     # gcd_128:175                        MOVAPD `double_abs_mask, [RIP+_label_9]
Xx_2071: MOVAPD XMM5, XMM1               # gcd_128:203                        MOVAPD `tmp_a, `vector_u
Xx_2072: PAND XMM5, XMM8                 # gcd_128:189                        PAND `tmp_a, `double_abs_mask
Xx_2073: CVTTSD2SI R8, XMM5              # gcd_128:197                        CVTTSD2SI `m_0_0, `tmp_a
Xx_2074: SHUFPD XMM5, XMM5, 3            # gcd_128:206                        SHUFPD `tmp_a, `tmp_a, 3
Xx_2075: CVTTSD2SI R10, XMM5             # gcd_128:197                        CVTTSD2SI `m_1_0, `tmp_a
Xx_2076: MOVAPD XMM5, XMM2               # gcd_128:211                        MOVAPD `tmp_a, `vector_v
Xx_2077: PAND XMM5, XMM8                 # gcd_128:189                        PAND `tmp_a, `double_abs_mask
Xx_2078: CVTTSD2SI R9, XMM5              # gcd_128:197                        CVTTSD2SI `m_0_1, `tmp_a
Xx_2079: SHUFPD XMM5, XMM5, 3            # gcd_128:214                        SHUFPD `tmp_a, `tmp_a, 3
Xx_2080: CVTTSD2SI R11, XMM5             # gcd_128:197                        CVTTSD2SI `m_1_1, `tmp_a
Xx_2081: MOV R12, [RSP+-0x3a8]           # gcd_128:217                        MOV `tmp_0, `spill_u_0
Xx_2082: MOV R13, [RSP+-0x3a0]           # gcd_128:218                        MOV `tmp_1, `spill_u_1
Xx_2083: MOV RAX, R8                     # dot_product_exact:56               MOV RAX, `a_0
Xx_2084: MUL R12                         # dot_product_exact:57               MUL `b_0
Xx_2085: JC _label_36                    # dot_product_exact:58               JC _label_36
Xx_2086: MOV RBX, RAX                    # dot_product_exact:59               MOV `out, RAX
Xx_2087: MOV RAX, R9                     # dot_product_exact:62               MOV RAX, `a_1
Xx_2088: MUL R13                         # dot_product_exact:63               MUL `b_1
Xx_2089: JC _label_36                    # dot_product_exact:64               JC _label_36
Xx_2090: ADD RBX, RAX                    # dot_product_exact:67               ADD `out, RAX
Xx_2091: JC _label_36                    # dot_product_exact:68               JC _label_36
Xx_2092: MOV RAX, R10                    # dot_product_exact:56               MOV RAX, `a_0
Xx_2093: MUL R12                         # dot_product_exact:57               MUL `b_0
Xx_2094: JC _label_36                    # dot_product_exact:58               JC _label_36
Xx_2095: MOV RBP, RAX                    # dot_product_exact:59               MOV `out, RAX
Xx_2096: MOV RAX, R11                    # dot_product_exact:62               MOV RAX, `a_1
Xx_2097: MUL R13                         # dot_product_exact:63               MUL `b_1
Xx_2098: JC _label_36                    # dot_product_exact:64               JC _label_36
Xx_2099: ADD RBP, RAX                    # dot_product_exact:67               ADD `out, RAX
Xx_2100: JC _label_36                    # dot_product_exact:68               JC _label_36
Xx_2101: MOV R12, [RSP+-0x398]           # gcd_128:222                        MOV `tmp_0, `spill_v_0
Xx_2102: MOV R13, [RSP+-0x390]           # gcd_128:223                        MOV `tmp_1, `spill_v_1
Xx_2103: MOV RAX, R8                     # dot_product_exact:56               MOV RAX, `a_0
Xx_2104: MUL R12                         # dot_product_exact:57               MUL `b_0
Xx_2105: JC _label_36                    # dot_product_exact:58               JC _label_36
Xx_2106: MOV RSI, RAX                    # dot_product_exact:59               MOV `out, RAX
Xx_2107: MOV RAX, R9                     # dot_product_exact:62               MOV RAX, `a_1
Xx_2108: MUL R13                         # dot_product_exact:63               MUL `b_1
Xx_2109: JC _label_36                    # dot_product_exact:64               JC _label_36
Xx_2110: ADD RSI, RAX                    # dot_product_exact:67               ADD `out, RAX
Xx_2111: JC _label_36                    # dot_product_exact:68               JC _label_36
Xx_2112: MOV RAX, R10                    # dot_product_exact:56               MOV RAX, `a_0
Xx_2113: MUL R12                         # dot_product_exact:57               MUL `b_0
Xx_2114: JC _label_36                    # dot_product_exact:58               JC _label_36
Xx_2115: MOV RDI, RAX                    # dot_product_exact:59               MOV `out, RAX
Xx_2116: MOV RAX, R11                    # dot_product_exact:62               MOV RAX, `a_1
Xx_2117: MUL R13                         # dot_product_exact:63               MUL `b_1
Xx_2118: JC _label_36                    # dot_product_exact:64               JC _label_36
Xx_2119: ADD RDI, RAX                    # dot_product_exact:67               ADD `out, RAX
Xx_2120: JC _label_36                    # dot_product_exact:68               JC _label_36
Xx_2121: MOV R13, [RSP+-0x378]           # gcd_128:249                        MOV `ab_start_0_0, `spill_ab_start_0_0
Xx_2122: MOV R14, [RSP+-0x370]           # gcd_128:250                        MOV `ab_start_0_1, `spill_ab_start_0_1
Xx_2123: MOV R15, [RSP+-0x368]           # gcd_128:251                        MOV `ab_start_1_0, `spill_ab_start_1_0
Xx_2124: MOV RCX, [RSP+-0x360]           # gcd_128:252                        MOV `ab_start_1_1, `spill_ab_start_1_1
Xx_2125: MOVAPD XMM5, XMM2               # gcd_128:256                        MOVAPD `tmp_a, `vector_v
Xx_2126: SHUFPD XMM5, XMM5, 3            # gcd_128:257                        SHUFPD `tmp_a, `tmp_a, 3
Xx_2127: MOVQ RAX, XMM5                  # gcd_128:258                        MOVQ RAX, `tmp_a
Xx_2128: SHR RAX, 63                     # gcd_128:259                        SHR RAX, 63
Xx_2129: MOV R12, [RSP+-0x388]           # gcd_128:262                        MOV `new_parity, `spill_parity
Xx_2130: XOR R12, RAX                    # gcd_128:263                        XOR `new_parity, RAX
Xx_2131: MOV RAX, R13                    # gcd_128:268                        MOV RAX, `ab_start_0_0
Xx_2132: MUL RBX                         # gcd_128:269                        MUL `new_u_0
Xx_2133: MOV R8, RAX                     # gcd_128:272                        MOV `new_ab_0_0, RAX
Xx_2134: MOV R9, RDX                     # gcd_128:273                        MOV `new_ab_0_1, RDX
Xx_2135: MOV RAX, R14                    # gcd_128:276                        MOV RAX, `ab_start_0_1
Xx_2136: MUL RBX                         # gcd_128:277                        MUL `new_u_0
Xx_2137: ADD R9, RAX                     # gcd_128:280                        ADD `new_ab_0_1, RAX
Xx_2138: MOV RAX, R15                    # gcd_128:283                        MOV RAX, `ab_start_1_0
Xx_2139: MUL RSI                         # gcd_128:284                        MUL `new_v_0
Xx_2140: SUB R8, RAX                     # gcd_128:287                        SUB `new_ab_0_0, RAX
Xx_2141: SBB R9, RDX                     # gcd_128:288                        SBB `new_ab_0_1, RDX
Xx_2142: MOV RAX, RCX                    # gcd_128:291                        MOV RAX, `ab_start_1_1
Xx_2143: MUL RSI                         # gcd_128:292                        MUL `new_v_0
Xx_2144: SUB R9, RAX                     # gcd_128:295                        SUB `new_ab_0_1, RAX
Xx_2145: MOV RAX, R15                    # gcd_128:268                        MOV RAX, `ab_start_1_0
Xx_2146: MUL RDI                         # gcd_128:269                        MUL `new_v_1
Xx_2147: MOV R10, RAX                    # gcd_128:272                        MOV `new_ab_1_0, RAX
Xx_2148: MOV R11, RDX                    # gcd_128:273                        MOV `new_ab_1_1, RDX
Xx_2149: MOV RAX, RCX                    # gcd_128:276                        MOV RAX, `ab_start_1_1
Xx_2150: MUL RDI                         # gcd_128:277                        MUL `new_v_1
Xx_2151: ADD R11, RAX                    # gcd_128:280                        ADD `new_ab_1_1, RAX
Xx_2152: MOV RAX, R13                    # gcd_128:283                        MOV RAX, `ab_start_0_0
Xx_2153: MUL RBP                         # gcd_128:284                        MUL `new_u_1
Xx_2154: SUB R10, RAX                    # gcd_128:287                        SUB `new_ab_1_0, RAX
Xx_2155: SBB R11, RDX                    # gcd_128:288                        SBB `new_ab_1_1, RDX
Xx_2156: MOV RAX, R14                    # gcd_128:291                        MOV RAX, `ab_start_0_1
Xx_2157: MUL RBP                         # gcd_128:292                        MUL `new_u_1
Xx_2158: SUB R11, RAX                    # gcd_128:295                        SUB `new_ab_1_1, RAX
Xx_2159: MOV RAX, -1                     # gcd_128:326                        MOV RAX, -1
Xx_2160: ADD RAX, R12                    # gcd_128:327                        ADD RAX, `new_parity
Xx_2161: NOT RAX                         # gcd_128:328                        NOT RAX
Xx_2162: XOR R8, RAX                     # gcd_128:333                        XOR `new_ab_0_0, RAX
Xx_2163: XOR R9, RAX                     # gcd_128:334                        XOR `new_ab_0_1, RAX
Xx_2164: ADD R8, R12                     # gcd_128:337                        ADD `new_ab_0_0, `new_parity
Xx_2165: ADC R9, 0                       # gcd_128:338                        ADC `new_ab_0_1, 0
Xx_2166: XOR R10, RAX                    # gcd_128:333                        XOR `new_ab_1_0, RAX
Xx_2167: XOR R11, RAX                    # gcd_128:334                        XOR `new_ab_1_1, RAX
Xx_2168: ADD R10, R12                    # gcd_128:337                        ADD `new_ab_1_0, `new_parity
Xx_2169: ADC R11, 0                      # gcd_128:338                        ADC `new_ab_1_1, 0
Xx_2170: MOV RAX, [RSP+-0x380]           # gcd_128:366                        MOV `is_lehmer, `spill_is_lehmer
Xx_2171: MOV R15, R8                     # gcd_128:369                        MOV `ab_delta_0, `new_ab_0_0
Xx_2172: MOV RCX, R9                     # gcd_128:370                        MOV `ab_delta_1, `new_ab_0_1
Xx_2173: SUB R15, R10                    # gcd_128:371                        SUB `ab_delta_0, `new_ab_1_0
Xx_2174: SBB RCX, R11                    # gcd_128:372                        SBB `ab_delta_1, `new_ab_1_1
Xx_2175: CMP R12, 0                      # gcd_128:391                        CMP `new_parity, 0
Xx_2176: MOV R13, RBP                    # gcd_128:392                        MOV `ab_threshold_0, `new_u_1
Xx_2177: CMOVE R13, RDI                  # gcd_128:393                        CMOVE `ab_threshold_0, `new_v_1
Xx_2178: MOV R14, RBX                    # gcd_128:397                        MOV `ab_threshold_1, `new_u_0
Xx_2179: CMOVE R14, RSI                  # gcd_128:398                        CMOVE `ab_threshold_1, `new_v_0
Xx_2180: MOV RDX, RDI                    # gcd_128:401                        MOV `b_new_min, `new_v_1
Xx_2181: CMOVE RDX, RBP                  # gcd_128:402                        CMOVE `b_new_min, `new_u_1
Xx_2182: CMP RAX, 0                      # gcd_128:405                        CMP `is_lehmer, 0
Xx_2183: CMOVE R13, RAX                  # gcd_128:406                        CMOVE `ab_threshold_0, `is_lehmer
Xx_2184: CMOVE R14, RAX                  # gcd_128:407                        CMOVE `ab_threshold_1, `is_lehmer
Xx_2185: CMOVE RDX, RAX                  # gcd_128:410                        CMOVE `b_new_min, `is_lehmer
Xx_2186: ADD R13, R14                    # gcd_128:413                        ADD `ab_threshold_0, `ab_threshold_1
Xx_2187: MOV R14, 0                      # gcd_128:414                        MOV `ab_threshold_1, 0
Xx_2188: ADC R14, 0                      # gcd_128:415                        ADC `ab_threshold_1, 0
Xx_2189: SUB R15, R13                    # gcd_128:420                        SUB `ab_delta_0, `ab_threshold_0
Xx_2190: SBB RCX, R14                    # gcd_128:421                        SBB `ab_delta_1, `ab_threshold_1
Xx_2191: JC _label_36                    # gcd_128:422                        JC _label_36
Xx_2192: CMP R10, RDX                    # gcd_128:426                        CMP `new_ab_1_0, `b_new_min
Xx_2193: MOV RDX, R11                    # gcd_128:427                        MOV `b_new_min, `new_ab_1_1
Xx_2194: SBB RDX, 0                      # gcd_128:428                        SBB `b_new_min, 0
Xx_2195: JC _label_36                    # gcd_128:429                        JC _label_36
Xx_2196: MOV R13, [RSP+-0x358]           # gcd_128:434                        MOV `ab_threshold_0, `spill_ab_threshold_0
Xx_2197: MOV R14, [RSP+-0x350]           # gcd_128:435                        MOV `ab_threshold_1, `spill_ab_threshold_1
Xx_2198: MOV R15, R13                    # gcd_128:438                        MOV `ab_delta_0, `ab_threshold_0
Xx_2199: MOV RCX, R14                    # gcd_128:439                        MOV `ab_delta_1, `ab_threshold_1
Xx_2200: SUB R15, R8                     # gcd_128:440                        SUB `ab_delta_0, `new_ab_0_0
Xx_2201: SBB RCX, R9                     # gcd_128:441                        SBB `ab_delta_1, `new_ab_0_1
Xx_2202: JNC _label_36                   # gcd_128:442                        JNC _label_36
Xx_2203: MOV [RSP+-0x3a8], RBX           # gcd_128:445                        MOV `spill_u_0, `new_u_0
Xx_2204: MOV [RSP+-0x3a0], RBP           # gcd_128:446                        MOV `spill_u_1, `new_u_1
Xx_2205: MOV [RSP+-0x398], RSI           # gcd_128:449                        MOV `spill_v_0, `new_v_0
Xx_2206: MOV [RSP+-0x390], RDI           # gcd_128:450                        MOV `spill_v_1, `new_v_1
Xx_2207: MOV [RSP+-0x388], R12           # gcd_128:453                        MOV `spill_parity, `new_parity
Xx_2208: MOV R15, [RSP+-0x348]           # gcd_128:459                        MOV `ab_delta_0, `spill_iter
Xx_2209: DEC R15                         # gcd_128:460                        DEC `ab_delta_0
Xx_2210: MOV [RSP+-0x348], R15           # gcd_128:461                        MOV `spill_iter, `ab_delta_0
Xx_2211: JZ _label_37                    # gcd_128:462                        JZ _label_37
Xx_2212: _label_34:                      # gcd_128:465                        _label_34:
Xx_2213: XOR RCX, RCX                    # gcd_128:492                        XOR `tmp_3, `tmp_3
Xx_2214: MOV RAX, R10                    # gcd_128:495                        MOV `tmp_0, `ab_1_0
Xx_2215: MOV RDX, R11                    # gcd_128:496                        MOV `tmp_1, `ab_1_1
Xx_2216: SUB RAX, R13                    # gcd_128:497                        SUB `tmp_0, `ab_threshold_0
Xx_2217: SBB RDX, R14                    # gcd_128:498                        SBB `tmp_1, `ab_threshold_1
Xx_2218: JC _label_36                    # gcd_128:501                        JC _label_36
Xx_2219: MOV R15, RAX                    # gcd_128:504                        MOV `tmp_2, `tmp_0
Xx_2220: OR R15, RDX                     # gcd_128:505                        OR `tmp_2, `tmp_1
Xx_2221: JZ _label_36                    # gcd_128:506                        JZ _label_36
Xx_2222: MOV RAX, R9                     # gcd_128:511                        MOV `tmp_0, `ab_0_1
Xx_2223: MOV RDX, 64                     # gcd_128:512                        MOV `tmp_1, 64
Xx_2224: CMP R9, 0                       # gcd_128:513                        CMP `ab_0_1, 0
Xx_2225: JNE _label_43                   # gcd_128:516                        JNE _label_43
Xx_2226: MOV RAX, R8                     # gcd_128:517                        MOV `tmp_0, `ab_0_0
Xx_2227: _label_43:                      # gcd_128:518                        _label_43:
Xx_2228: JNE _label_44                   # gcd_128:521                        JNE _label_44
Xx_2229: MOV RDX, RCX                    # gcd_128:522                        MOV `tmp_1, `tmp_3
Xx_2230: _label_44:                      # gcd_128:523                        _label_44:
Xx_2231: BSR RAX, RAX                    # gcd_128:530                        BSR `tmp_0, `tmp_0
Xx_2232: ADD RDX, RAX                    # gcd_128:533                        ADD `tmp_1, `tmp_0
Xx_2233: INC RDX                         # gcd_128:534                        INC `tmp_1
Xx_2234: XOR RAX, RAX                    # gcd_128:545                        XOR `tmp_0, `tmp_0
Xx_2235: MOV R15, [RSP+-0x380]           # gcd_128:546                        MOV `tmp_2, `spill_is_lehmer
Xx_2236: CMP R15, 0                      # gcd_128:547                        CMP `tmp_2, 0
Xx_2237: MOV RCX, 96                     # gcd_128:548                        MOV `tmp_3, 96
Xx_2238: CMOVNE RAX, RCX                 # gcd_128:549                        CMOVNE `tmp_0, `tmp_3
Xx_2239: XOR RCX, RCX                    # gcd_128:550                        XOR `tmp_3, `tmp_3
Xx_2240: CMP RDX, RAX                    # gcd_128:553                        CMP `tmp_1, `tmp_0
Xx_2241: CMOVB RDX, RAX                  # gcd_128:554                        CMOVB `tmp_1, `tmp_0
Xx_2242: SUB RDX, 0x32                   # gcd_128:562                        SUB `tmp_1, 0x32
Xx_2243: CMOVB RDX, RCX                  # gcd_128:566                        CMOVB `tmp_1, `tmp_3
Xx_2244: OR R15, RDX                     # gcd_128:569                        OR `tmp_2, `tmp_1
Xx_2245: LEA RCX, [RIP+_label_28]        # gcd_128:572                        LEA `tmp_3, [RIP+_label_28]
Xx_2246: LEA RAX, [RIP+_label_29]        # gcd_128:573                        LEA `tmp_0, [RIP+_label_29]
Xx_2247: CMOVZ RAX, RCX                  # gcd_128:587                        CMOVZ `tmp_0, `tmp_3
Xx_2248: MOVAPD XMM3, [RAX]              # gcd_128:588                        MOVAPD `vector_is_lehmer, [`tmp_0]
Xx_2249: MOV RCX, RDX                    # shift_right:23                     MOV RCX, `amount
Xx_2250: MOV RBP, R10                    # shift_right:24                     MOV `res, `v_0
Xx_2251: SHRD RBP, R11, CL               # shift_right:25                     SHRD `res, `v_1, CL
Xx_2252: XOR R15, R15                    # shift_right:28                     XOR `res_2, `res_2
Xx_2253: SUB RCX, 64                     # shift_right:31                     SUB RCX, 64
Xx_2254: CMOVAE RBP, R15                 # shift_right:35                     CMOVAE `res, `res_2
Xx_2255: CMOVAE R15, R11                 # shift_right:36                     CMOVAE `res_2, `v_1
Xx_2256: SHR R15, CL                     # shift_right:39                     SHR `res_2, CL
Xx_2257: OR RBP, R15                     # shift_right:42                     OR `res, `res_2
Xx_2258: CVTSI2SD XMM0, RBP              # gcd_128:604                        CVTSI2SD `vector_ab, `new_u_1
Xx_2259: SHUFPD XMM0, XMM0, 0            # gcd_128:609                        SHUFPD `vector_ab, `vector_ab, 0
Xx_2260: MOV RCX, RDX                    # shift_right:23                     MOV RCX, `amount
Xx_2261: MOV RBX, R8                     # shift_right:24                     MOV `res, `v_0
Xx_2262: SHRD RBX, R9, CL                # shift_right:25                     SHRD `res, `v_1, CL
Xx_2263: XOR R15, R15                    # shift_right:28                     XOR `res_2, `res_2
Xx_2264: SUB RCX, 64                     # shift_right:31                     SUB RCX, 64
Xx_2265: CMOVAE RBX, R15                 # shift_right:35                     CMOVAE `res, `res_2
Xx_2266: CMOVAE R15, R9                  # shift_right:36                     CMOVAE `res_2, `v_1
Xx_2267: SHR R15, CL                     # shift_right:39                     SHR `res_2, CL
Xx_2268: OR RBX, R15                     # shift_right:42                     OR `res, `res_2
Xx_2269: CVTSI2SD XMM0, RBX              # gcd_128:616                        CVTSI2SD `vector_ab, `new_u_0
Xx_2270: MOV RCX, RDX                    # shift_right:23                     MOV RCX, `amount
Xx_2271: MOV RSI, R13                    # shift_right:24                     MOV `res, `v_0
Xx_2272: SHRD RSI, R14, CL               # shift_right:25                     SHRD `res, `v_1, CL
Xx_2273: XOR R15, R15                    # shift_right:28                     XOR `res_2, `res_2
Xx_2274: SUB RCX, 64                     # shift_right:31                     SUB RCX, 64
Xx_2275: CMOVAE RSI, R15                 # shift_right:35                     CMOVAE `res, `res_2
Xx_2276: CMOVAE R15, R14                 # shift_right:36                     CMOVAE `res_2, `v_1
Xx_2277: SHR R15, CL                     # shift_right:39                     SHR `res_2, CL
Xx_2278: OR RSI, R15                     # shift_right:42                     OR `res, `res_2
Xx_2279: CVTSI2SD XMM4, RSI              # gcd_128:625                        CVTSI2SD `vector_ab_threshold, `new_v_0
Xx_2280: SHUFPD XMM4, XMM4, 0            # gcd_128:626                        SHUFPD `vector_ab_threshold, `vector_ab_threshold, 0
Xx_2281: JMP _label_35                   # gcd_128:630                        JMP _label_35
Xx_2282: _label_36:                      # gcd_128:635                        _label_36:
Xx_2283: MOV R15, [RSP+-0x348]           # gcd_128:643                        MOV `tmp, `spill_iter
Xx_2284: CMP R15, 0x3                    # gcd_128:644                        CMP `tmp, 0x3
Xx_2285: JE label_error_1                # gcd_128:645                        JE label_error_1
Xx_2286: JMP _label_37                   # gcd_128:647                        JMP _label_37
Xx_2287: _label_38:                      # gcd_128:652                        _label_38:
Xx_2288: MOV R8, [RSP+-0x378]            # gcd_128:654                        MOV `new_ab_0_0, `spill_ab_start_0_0
Xx_2289: MOV R9, [RSP+-0x370]            # gcd_128:655                        MOV `new_ab_0_1, `spill_ab_start_0_1
Xx_2290: MOV R10, [RSP+-0x368]           # gcd_128:656                        MOV `new_ab_1_0, `spill_ab_start_1_0
Xx_2291: MOV R11, [RSP+-0x360]           # gcd_128:657                        MOV `new_ab_1_1, `spill_ab_start_1_1
Xx_2292: MOV R13, [RSP+-0x358]           # gcd_128:658                        MOV `ab_threshold_0, `spill_ab_threshold_0
Xx_2293: MOV R14, [RSP+-0x350]           # gcd_128:659                        MOV `ab_threshold_1, `spill_ab_threshold_1
Xx_2294: JMP _label_34                   # gcd_128:661                        JMP _label_34
Xx_2295: _label_37:                      # gcd_128:666                        _label_37:
Xx_2296: .text                           # gcd_unsigned:446                   .text 
Xx_2297: .balign 8                       # gcd_unsigned:450                   .balign 8
Xx_2298: _label_46:                      # gcd_unsigned:451                   _label_46:
Xx_2299: .text                           # gcd_unsigned:454                   .text
Xx_2300: MOV RBX, [RSP+-0x3b0]           # gcd_unsigned:456                   MOV `tmp, `spill_a_end_index
Xx_2301: CMP RBX, 1                      # gcd_unsigned:466                   CMP `tmp, 1
Xx_2302: JE multiply_uv_size_4           # gcd_unsigned:467                   JE multiply_uv_size_4
Xx_2303: CMP RBX, 2                      # gcd_unsigned:466                   CMP `tmp, 2
Xx_2304: JE multiply_uv_size_4           # gcd_unsigned:467                   JE multiply_uv_size_4
Xx_2305: CMP RBX, 3                      # gcd_unsigned:466                   CMP `tmp, 3
Xx_2306: JE multiply_uv_size_4           # gcd_unsigned:467                   JE multiply_uv_size_4
Xx_2307: CMP RBX, 4                      # gcd_unsigned:466                   CMP `tmp, 4
Xx_2308: JE multiply_uv_size_4           # gcd_unsigned:467                   JE multiply_uv_size_4
Xx_2309: CMP RBX, 5                      # gcd_unsigned:466                   CMP `tmp, 5
Xx_2310: JE multiply_uv_size_8           # gcd_unsigned:467                   JE multiply_uv_size_8
Xx_2311: CMP RBX, 6                      # gcd_unsigned:466                   CMP `tmp, 6
Xx_2312: JE multiply_uv_size_8           # gcd_unsigned:467                   JE multiply_uv_size_8
Xx_2313: CMP RBX, 7                      # gcd_unsigned:466                   CMP `tmp, 7
Xx_2314: JE multiply_uv_size_8           # gcd_unsigned:467                   JE multiply_uv_size_8
Xx_2315: CMP RBX, 8                      # gcd_unsigned:466                   CMP `tmp, 8
Xx_2316: JE multiply_uv_size_8           # gcd_unsigned:467                   JE multiply_uv_size_8
Xx_2317: CMP RBX, 9                      # gcd_unsigned:466                   CMP `tmp, 9
Xx_2318: JE multiply_uv_size_12          # gcd_unsigned:467                   JE multiply_uv_size_12
Xx_2319: CMP RBX, 10                     # gcd_unsigned:466                   CMP `tmp, 10
Xx_2320: JE multiply_uv_size_12          # gcd_unsigned:467                   JE multiply_uv_size_12
Xx_2321: CMP RBX, 11                     # gcd_unsigned:466                   CMP `tmp, 11
Xx_2322: JE multiply_uv_size_12          # gcd_unsigned:467                   JE multiply_uv_size_12
Xx_2323: CMP RBX, 12                     # gcd_unsigned:466                   CMP `tmp, 12
Xx_2324: JE multiply_uv_size_12          # gcd_unsigned:467                   JE multiply_uv_size_12
Xx_2325: CMP RBX, 13                     # gcd_unsigned:466                   CMP `tmp, 13
Xx_2326: JE multiply_uv_size_16          # gcd_unsigned:467                   JE multiply_uv_size_16
Xx_2327: CMP RBX, 14                     # gcd_unsigned:466                   CMP `tmp, 14
Xx_2328: JE multiply_uv_size_16          # gcd_unsigned:467                   JE multiply_uv_size_16
Xx_2329: CMP RBX, 15                     # gcd_unsigned:466                   CMP `tmp, 15
Xx_2330: JE multiply_uv_size_16          # gcd_unsigned:467                   JE multiply_uv_size_16
Xx_2331: CMP RBX, 16                     # gcd_unsigned:466                   CMP `tmp, 16
Xx_2332: JE multiply_uv_size_16          # gcd_unsigned:467                   JE multiply_uv_size_16
Xx_2333: CMP RBX, 17                     # gcd_unsigned:466                   CMP `tmp, 17
Xx_2334: JE multiply_uv_size_20          # gcd_unsigned:467                   JE multiply_uv_size_20
Xx_2335: CMP RBX, 18                     # gcd_unsigned:466                   CMP `tmp, 18
Xx_2336: JE multiply_uv_size_20          # gcd_unsigned:467                   JE multiply_uv_size_20
Xx_2337: CMP RBX, 19                     # gcd_unsigned:466                   CMP `tmp, 19
Xx_2338: JE multiply_uv_size_20          # gcd_unsigned:467                   JE multiply_uv_size_20
Xx_2339: CMP RBX, 20                     # gcd_unsigned:466                   CMP `tmp, 20
Xx_2340: JE multiply_uv_size_20          # gcd_unsigned:467                   JE multiply_uv_size_20
Xx_2341: multiply_uv_size_4:             # gcd_unsigned:490                   multiply_uv_size_4:
Xx_2342: MOV RDI, [RSP+-0x388]           # gcd_unsigned:531                   MOV `tmp, `spill_parity
Xx_2343: CMP RDI, 0                      # gcd_unsigned:532                   CMP `tmp, 0
Xx_2344: MOV RBX, [RSP+-0x3a8]           # gcd_unsigned:535                   MOV `addr_a, `spill_u_0
Xx_2345: MOV RBP, [RSP+-0x398]           # gcd_unsigned:536                   MOV `addr_b, `spill_v_0
Xx_2346: MOV RSI, RBX                    # gcd_unsigned:539                   MOV `addr_new, `addr_a
Xx_2347: CMOVNE RBX, RBP                 # gcd_unsigned:540                   CMOVNE `addr_a, `addr_b
Xx_2348: CMOVNE RBP, RSI                 # gcd_unsigned:541                   CMOVNE `addr_b, `addr_new
Xx_2349: MOV [RSP+-0x348], RBX           # gcd_unsigned:543                   MOV `spill_mod_u_0, `addr_a
Xx_2350: MOV [RSP+-0x338], RBP           # gcd_unsigned:544                   MOV `spill_mod_v_0, `addr_b
Xx_2351: MOV RBX, [RSP+-0x3a0]           # gcd_unsigned:535                   MOV `addr_a, `spill_u_1
Xx_2352: MOV RBP, [RSP+-0x390]           # gcd_unsigned:536                   MOV `addr_b, `spill_v_1
Xx_2353: MOV RSI, RBX                    # gcd_unsigned:539                   MOV `addr_new, `addr_a
Xx_2354: CMOVNE RBX, RBP                 # gcd_unsigned:540                   CMOVNE `addr_a, `addr_b
Xx_2355: CMOVNE RBP, RSI                 # gcd_unsigned:541                   CMOVNE `addr_b, `addr_new
Xx_2356: MOV [RSP+-0x340], RBX           # gcd_unsigned:543                   MOV `spill_mod_u_1, `addr_a
Xx_2357: MOV [RSP+-0x330], RBP           # gcd_unsigned:544                   MOV `spill_mod_v_1, `addr_b
Xx_2358: MOV RSI, [RSP+-0x3b8]           # gcd_unsigned:547                   MOV `addr_new, `spill_iter
Xx_2359: TEST RSI, 1                     # gcd_unsigned:548                   TEST `addr_new, 1
Xx_2360: MOV RBX, [RSP+-0x3f8]           # gcd_unsigned:551                   MOV `addr_a, `spill_a_addr_base
Xx_2361: CMOVNZ RBX, [RSP+-0x3e8]        # gcd_unsigned:552                   CMOVNZ `addr_a, `spill_a_2_addr_base
Xx_2362: MOV RBP, [RSP+-0x3f0]           # gcd_unsigned:555                   MOV `addr_b, `spill_b_addr_base
Xx_2363: CMOVNZ RBP, [RSP+-0x3e0]        # gcd_unsigned:556                   CMOVNZ `addr_b, `spill_b_2_addr_base
Xx_2364: CMP RDI, 0                      # gcd_unsigned:559                   CMP `tmp, 0
Xx_2365: MOV RSI, RBX                    # gcd_unsigned:560                   MOV `addr_new, `addr_a
Xx_2366: CMOVNE RBX, RBP                 # gcd_unsigned:561                   CMOVNE `addr_a, `addr_b
Xx_2367: CMOVNE RBP, RSI                 # gcd_unsigned:562                   CMOVNE `addr_b, `addr_new
Xx_2368: MOV RSI, [RSP+-0x3b8]           # gcd_unsigned:567                   MOV `addr_new, `spill_iter
Xx_2369: TEST RSI, 1                     # gcd_unsigned:568                   TEST `addr_new, 1
Xx_2370: MOV RSI, [RSP+-0x3e0]           # gcd_unsigned:569                   MOV `addr_new, `spill_b_2_addr_base
Xx_2371: CMOVNZ RSI, [RSP+-0x3f0]        # gcd_unsigned:570                   CMOVNZ `addr_new, `spill_b_addr_base
Xx_2372: MOV [RSP+-0x328], RSI           # gcd_unsigned:571                   MOV `spill_addr_b_new, `addr_new
Xx_2373: MOV RSI, [RSP+-0x3e8]           # gcd_unsigned:574                   MOV `addr_new, `spill_a_2_addr_base
Xx_2374: CMOVNZ RSI, [RSP+-0x3f8]        # gcd_unsigned:575                   CMOVNZ `addr_new, `spill_a_addr_base
Xx_2375: MOV RDI, [RSP+-0x338]           # gcd_unsigned:604                   MOV `tmp, `spill_mod_v_0
Xx_2376: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2377: MUL QWORD PTR [RBP+0x0]         # mul_add_slow:208                   MUL QWORD PTR [RBP+0x0]
Xx_2378: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_2379: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_2380: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2381: MUL QWORD PTR [RBP+0x8]         # mul_add_slow:208                   MUL QWORD PTR [RBP+0x8]
Xx_2382: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_2383: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_2384: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2385: MUL QWORD PTR [RBP+0x10]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x10]
Xx_2386: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_2387: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_2388: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2389: MUL QWORD PTR [RBP+0x18]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x18]
Xx_2390: ADD R12, R14                    # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
Xx_2391: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_2392: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_2393: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_2394: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_2395: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_2396: MOV [RSP+-0x320], R11           # mul_add_slow:266                   MOV [RSP+-0x320], `mul_low_0
Xx_2397: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_2398: MOV [RSP+-0x318], R12           # mul_add_slow:266                   MOV [RSP+-0x318], `mul_low_1
Xx_2399: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_2400: MOV [RSP+-0x310], R13           # mul_add_slow:266                   MOV [RSP+-0x310], `mul_low_2
Xx_2401: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_2402: MOV [RSP+-0x308], RAX           # mul_add_slow:266                   MOV [RSP+-0x308], `mul_low_3
Xx_2403: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2404: MUL QWORD PTR [RBP+0x20]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x20]
Xx_2405: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_2406: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_2407: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2408: MUL QWORD PTR [RBP+0x28]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x28]
Xx_2409: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_2410: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_2411: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2412: MUL QWORD PTR [RBP+0x30]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x30]
Xx_2413: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_2414: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_2415: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2416: MUL QWORD PTR [RBP+0x38]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x38]
Xx_2417: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_2418: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_2419: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_2420: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_2421: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_2422: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_2423: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_2424: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_2425: MOV [RSP+-0x300], R11           # mul_add_slow:266                   MOV [RSP+-0x300], `mul_low_0
Xx_2426: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_2427: MOV [RSP+-0x2f8], R12           # mul_add_slow:266                   MOV [RSP+-0x2f8], `mul_low_1
Xx_2428: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_2429: MOV [RSP+-0x2f0], R13           # mul_add_slow:266                   MOV [RSP+-0x2f0], `mul_low_2
Xx_2430: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_2431: MOV [RSP+-0x2e8], RAX           # mul_add_slow:266                   MOV [RSP+-0x2e8], `mul_low_3
Xx_2432: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2433: MUL QWORD PTR [RBP+0x40]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x40]
Xx_2434: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_2435: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_2436: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2437: MUL QWORD PTR [RBP+0x48]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x48]
Xx_2438: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_2439: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_2440: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2441: MUL QWORD PTR [RBP+0x50]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x50]
Xx_2442: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_2443: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_2444: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2445: MUL QWORD PTR [RBP+0x58]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x58]
Xx_2446: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_2447: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_2448: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_2449: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_2450: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_2451: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_2452: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_2453: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_2454: MOV [RSP+-0x2e0], R11           # mul_add_slow:266                   MOV [RSP+-0x2e0], `mul_low_0
Xx_2455: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_2456: MOV [RSP+-0x2d8], R12           # mul_add_slow:266                   MOV [RSP+-0x2d8], `mul_low_1
Xx_2457: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_2458: MOV [RSP+-0x2d0], R13           # mul_add_slow:266                   MOV [RSP+-0x2d0], `mul_low_2
Xx_2459: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_2460: MOV [RSP+-0x2c8], RAX           # mul_add_slow:266                   MOV [RSP+-0x2c8], `mul_low_3
Xx_2461: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2462: MUL QWORD PTR [RBP+0x60]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x60]
Xx_2463: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_2464: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_2465: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2466: MUL QWORD PTR [RBP+0x68]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x68]
Xx_2467: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_2468: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_2469: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2470: MUL QWORD PTR [RBP+0x70]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x70]
Xx_2471: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_2472: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_2473: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2474: MUL QWORD PTR [RBP+0x78]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x78]
Xx_2475: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_2476: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_2477: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_2478: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_2479: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_2480: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_2481: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_2482: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_2483: MOV [RSP+-0x2c0], R11           # mul_add_slow:266                   MOV [RSP+-0x2c0], `mul_low_0
Xx_2484: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_2485: MOV [RSP+-0x2b8], R12           # mul_add_slow:266                   MOV [RSP+-0x2b8], `mul_low_1
Xx_2486: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_2487: MOV [RSP+-0x2b0], R13           # mul_add_slow:266                   MOV [RSP+-0x2b0], `mul_low_2
Xx_2488: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_2489: MOV [RSP+-0x2a8], RAX           # mul_add_slow:266                   MOV [RSP+-0x2a8], `mul_low_3
Xx_2490: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2491: MUL QWORD PTR [RBP+0x80]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x80]
Xx_2492: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_2493: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_2494: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2495: MUL QWORD PTR [RBP+0x88]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x88]
Xx_2496: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_2497: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_2498: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2499: MUL QWORD PTR [RBP+0x90]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x90]
Xx_2500: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_2501: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_2502: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2503: MUL QWORD PTR [RBP+0x98]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x98]
Xx_2504: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_2505: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_2506: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_2507: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_2508: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_2509: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_2510: MOV [RSP+-0x2a0], R11           # mul_add_slow:266                   MOV [RSP+-0x2a0], `mul_low_0
Xx_2511: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_2512: MOV [RSP+-0x298], R12           # mul_add_slow:266                   MOV [RSP+-0x298], `mul_low_1
Xx_2513: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_2514: MOV [RSP+-0x290], R13           # mul_add_slow:266                   MOV [RSP+-0x290], `mul_low_2
Xx_2515: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_2516: MOV [RSP+-0x288], RAX           # mul_add_slow:266                   MOV [RSP+-0x288], `mul_low_3
Xx_2517: MOV RDI, [RSP+-0x340]           # gcd_unsigned:608                   MOV `tmp, `spill_mod_u_1
Xx_2518: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2519: MUL QWORD PTR [RBX+0x0]         # mul_add_slow:208                   MUL QWORD PTR [RBX+0x0]
Xx_2520: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_2521: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_2522: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2523: MUL QWORD PTR [RBX+0x8]         # mul_add_slow:208                   MUL QWORD PTR [RBX+0x8]
Xx_2524: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_2525: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_2526: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2527: MUL QWORD PTR [RBX+0x10]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x10]
Xx_2528: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_2529: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_2530: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2531: MUL QWORD PTR [RBX+0x18]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x18]
Xx_2532: ADD R12, R14                    # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
Xx_2533: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_2534: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_2535: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_2536: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_2537: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_2538: MOV [RSP+-0x280], R11           # mul_add_slow:266                   MOV [RSP+-0x280], `mul_low_0
Xx_2539: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_2540: MOV [RSP+-0x278], R12           # mul_add_slow:266                   MOV [RSP+-0x278], `mul_low_1
Xx_2541: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_2542: MOV [RSP+-0x270], R13           # mul_add_slow:266                   MOV [RSP+-0x270], `mul_low_2
Xx_2543: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_2544: MOV [RSP+-0x268], RAX           # mul_add_slow:266                   MOV [RSP+-0x268], `mul_low_3
Xx_2545: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2546: MUL QWORD PTR [RBX+0x20]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x20]
Xx_2547: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_2548: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_2549: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2550: MUL QWORD PTR [RBX+0x28]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x28]
Xx_2551: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_2552: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_2553: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2554: MUL QWORD PTR [RBX+0x30]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x30]
Xx_2555: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_2556: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_2557: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2558: MUL QWORD PTR [RBX+0x38]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x38]
Xx_2559: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_2560: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_2561: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_2562: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_2563: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_2564: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_2565: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_2566: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_2567: MOV [RSP+-0x260], R11           # mul_add_slow:266                   MOV [RSP+-0x260], `mul_low_0
Xx_2568: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_2569: MOV [RSP+-0x258], R12           # mul_add_slow:266                   MOV [RSP+-0x258], `mul_low_1
Xx_2570: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_2571: MOV [RSP+-0x250], R13           # mul_add_slow:266                   MOV [RSP+-0x250], `mul_low_2
Xx_2572: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_2573: MOV [RSP+-0x248], RAX           # mul_add_slow:266                   MOV [RSP+-0x248], `mul_low_3
Xx_2574: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2575: MUL QWORD PTR [RBX+0x40]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x40]
Xx_2576: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_2577: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_2578: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2579: MUL QWORD PTR [RBX+0x48]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x48]
Xx_2580: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_2581: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_2582: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2583: MUL QWORD PTR [RBX+0x50]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x50]
Xx_2584: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_2585: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_2586: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2587: MUL QWORD PTR [RBX+0x58]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x58]
Xx_2588: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_2589: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_2590: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_2591: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_2592: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_2593: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_2594: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_2595: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_2596: MOV [RSP+-0x240], R11           # mul_add_slow:266                   MOV [RSP+-0x240], `mul_low_0
Xx_2597: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_2598: MOV [RSP+-0x238], R12           # mul_add_slow:266                   MOV [RSP+-0x238], `mul_low_1
Xx_2599: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_2600: MOV [RSP+-0x230], R13           # mul_add_slow:266                   MOV [RSP+-0x230], `mul_low_2
Xx_2601: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_2602: MOV [RSP+-0x228], RAX           # mul_add_slow:266                   MOV [RSP+-0x228], `mul_low_3
Xx_2603: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2604: MUL QWORD PTR [RBX+0x60]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x60]
Xx_2605: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_2606: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_2607: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2608: MUL QWORD PTR [RBX+0x68]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x68]
Xx_2609: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_2610: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_2611: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2612: MUL QWORD PTR [RBX+0x70]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x70]
Xx_2613: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_2614: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_2615: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2616: MUL QWORD PTR [RBX+0x78]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x78]
Xx_2617: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_2618: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_2619: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_2620: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_2621: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_2622: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_2623: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_2624: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_2625: MOV [RSP+-0x220], R11           # mul_add_slow:266                   MOV [RSP+-0x220], `mul_low_0
Xx_2626: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_2627: MOV [RSP+-0x218], R12           # mul_add_slow:266                   MOV [RSP+-0x218], `mul_low_1
Xx_2628: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_2629: MOV [RSP+-0x210], R13           # mul_add_slow:266                   MOV [RSP+-0x210], `mul_low_2
Xx_2630: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_2631: MOV [RSP+-0x208], RAX           # mul_add_slow:266                   MOV [RSP+-0x208], `mul_low_3
Xx_2632: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2633: MUL QWORD PTR [RBX+0x80]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x80]
Xx_2634: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_2635: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_2636: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2637: MUL QWORD PTR [RBX+0x88]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x88]
Xx_2638: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_2639: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_2640: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2641: MUL QWORD PTR [RBX+0x90]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x90]
Xx_2642: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_2643: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_2644: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2645: MUL QWORD PTR [RBX+0x98]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x98]
Xx_2646: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_2647: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_2648: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_2649: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_2650: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_2651: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_2652: MOV [RSP+-0x200], R11           # mul_add_slow:266                   MOV [RSP+-0x200], `mul_low_0
Xx_2653: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_2654: MOV [RSP+-0x1f8], R12           # mul_add_slow:266                   MOV [RSP+-0x1f8], `mul_low_1
Xx_2655: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_2656: MOV [RSP+-0x1f0], R13           # mul_add_slow:266                   MOV [RSP+-0x1f0], `mul_low_2
Xx_2657: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_2658: MOV [RSP+-0x1e8], RAX           # mul_add_slow:266                   MOV [RSP+-0x1e8], `mul_low_3
Xx_2659: MOV RDI, [RSP+-0x348]           # gcd_unsigned:612                   MOV `tmp, `spill_mod_u_0
Xx_2660: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2661: MUL QWORD PTR [RBX+0x0]         # mul_add_slow:208                   MUL QWORD PTR [RBX+0x0]
Xx_2662: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_2663: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_2664: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2665: MUL QWORD PTR [RBX+0x8]         # mul_add_slow:208                   MUL QWORD PTR [RBX+0x8]
Xx_2666: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_2667: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_2668: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2669: MUL QWORD PTR [RBX+0x10]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x10]
Xx_2670: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_2671: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_2672: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2673: MUL QWORD PTR [RBX+0x18]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x18]
Xx_2674: ADD R12, R14                    # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
Xx_2675: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_2676: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_2677: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_2678: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_2679: STC                             # mul_add_slow:243                   STC
Xx_2680: ADC R11, [RSP+-0x320]           # mul_add_slow:244                   ADC `mul_low_0, [RSP+-0x320]
Xx_2681: ADC R12, [RSP+-0x318]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x318]
Xx_2682: ADC R13, [RSP+-0x310]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x310]
Xx_2683: ADC RAX, [RSP+-0x308]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x308]
Xx_2684: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_2685: MOV [RSI+0x0], R11              # mul_add_slow:266                   MOV [RSI+0x0], `mul_low_0
Xx_2686: MOV [RSI+0x8], R12              # mul_add_slow:266                   MOV [RSI+0x8], `mul_low_1
Xx_2687: MOV [RSI+0x10], R13             # mul_add_slow:266                   MOV [RSI+0x10], `mul_low_2
Xx_2688: MOV [RSI+0x18], RAX             # mul_add_slow:266                   MOV [RSI+0x18], `mul_low_3
Xx_2689: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2690: MUL QWORD PTR [RBX+0x20]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x20]
Xx_2691: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_2692: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_2693: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2694: MUL QWORD PTR [RBX+0x28]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x28]
Xx_2695: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_2696: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_2697: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2698: MUL QWORD PTR [RBX+0x30]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x30]
Xx_2699: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_2700: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_2701: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2702: MUL QWORD PTR [RBX+0x38]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x38]
Xx_2703: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_2704: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_2705: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_2706: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_2707: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_2708: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_2709: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_2710: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_2711: ADC R11, [RSP+-0x300]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x300]
Xx_2712: ADC R12, [RSP+-0x2f8]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x2f8]
Xx_2713: ADC R13, [RSP+-0x2f0]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x2f0]
Xx_2714: ADC RAX, [RSP+-0x2e8]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x2e8]
Xx_2715: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_2716: MOV [RSI+0x20], R11             # mul_add_slow:266                   MOV [RSI+0x20], `mul_low_0
Xx_2717: MOV [RSI+0x28], R12             # mul_add_slow:266                   MOV [RSI+0x28], `mul_low_1
Xx_2718: MOV [RSI+0x30], R13             # mul_add_slow:266                   MOV [RSI+0x30], `mul_low_2
Xx_2719: MOV [RSI+0x38], RAX             # mul_add_slow:266                   MOV [RSI+0x38], `mul_low_3
Xx_2720: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2721: MUL QWORD PTR [RBX+0x40]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x40]
Xx_2722: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_2723: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_2724: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2725: MUL QWORD PTR [RBX+0x48]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x48]
Xx_2726: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_2727: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_2728: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2729: MUL QWORD PTR [RBX+0x50]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x50]
Xx_2730: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_2731: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_2732: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2733: MUL QWORD PTR [RBX+0x58]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x58]
Xx_2734: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_2735: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_2736: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_2737: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_2738: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_2739: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_2740: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_2741: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_2742: ADC R11, [RSP+-0x2e0]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x2e0]
Xx_2743: ADC R12, [RSP+-0x2d8]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x2d8]
Xx_2744: ADC R13, [RSP+-0x2d0]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x2d0]
Xx_2745: ADC RAX, [RSP+-0x2c8]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x2c8]
Xx_2746: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_2747: MOV [RSI+0x40], R11             # mul_add_slow:266                   MOV [RSI+0x40], `mul_low_0
Xx_2748: MOV [RSI+0x48], R12             # mul_add_slow:266                   MOV [RSI+0x48], `mul_low_1
Xx_2749: MOV [RSI+0x50], R13             # mul_add_slow:266                   MOV [RSI+0x50], `mul_low_2
Xx_2750: MOV [RSI+0x58], RAX             # mul_add_slow:266                   MOV [RSI+0x58], `mul_low_3
Xx_2751: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2752: MUL QWORD PTR [RBX+0x60]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x60]
Xx_2753: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_2754: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_2755: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2756: MUL QWORD PTR [RBX+0x68]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x68]
Xx_2757: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_2758: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_2759: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2760: MUL QWORD PTR [RBX+0x70]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x70]
Xx_2761: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_2762: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_2763: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2764: MUL QWORD PTR [RBX+0x78]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x78]
Xx_2765: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_2766: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_2767: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_2768: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_2769: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_2770: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_2771: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_2772: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_2773: ADC R11, [RSP+-0x2c0]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x2c0]
Xx_2774: ADC R12, [RSP+-0x2b8]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x2b8]
Xx_2775: ADC R13, [RSP+-0x2b0]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x2b0]
Xx_2776: ADC RAX, [RSP+-0x2a8]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x2a8]
Xx_2777: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_2778: MOV [RSI+0x60], R11             # mul_add_slow:266                   MOV [RSI+0x60], `mul_low_0
Xx_2779: MOV [RSI+0x68], R12             # mul_add_slow:266                   MOV [RSI+0x68], `mul_low_1
Xx_2780: MOV [RSI+0x70], R13             # mul_add_slow:266                   MOV [RSI+0x70], `mul_low_2
Xx_2781: MOV [RSI+0x78], RAX             # mul_add_slow:266                   MOV [RSI+0x78], `mul_low_3
Xx_2782: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2783: MUL QWORD PTR [RBX+0x80]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x80]
Xx_2784: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_2785: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_2786: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2787: MUL QWORD PTR [RBX+0x88]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x88]
Xx_2788: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_2789: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_2790: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2791: MUL QWORD PTR [RBX+0x90]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x90]
Xx_2792: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_2793: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_2794: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2795: MUL QWORD PTR [RBX+0x98]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x98]
Xx_2796: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_2797: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_2798: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_2799: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_2800: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_2801: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_2802: ADC R11, [RSP+-0x2a0]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x2a0]
Xx_2803: ADC R12, [RSP+-0x298]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x298]
Xx_2804: ADC R13, [RSP+-0x290]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x290]
Xx_2805: ADC RAX, [RSP+-0x288]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x288]
Xx_2806: MOV [RSI+0x80], R11             # mul_add_slow:266                   MOV [RSI+0x80], `mul_low_0
Xx_2807: MOV [RSI+0x88], R12             # mul_add_slow:266                   MOV [RSI+0x88], `mul_low_1
Xx_2808: MOV [RSI+0x90], R13             # mul_add_slow:266                   MOV [RSI+0x90], `mul_low_2
Xx_2809: MOV [RSI+0x98], RAX             # mul_add_slow:266                   MOV [RSI+0x98], `mul_low_3
Xx_2810: MOV RSI, [RSP+-0x328]           # gcd_unsigned:616                   MOV `addr_new, `spill_addr_b_new
Xx_2811: MOV RDI, [RSP+-0x330]           # gcd_unsigned:617                   MOV `tmp, `spill_mod_v_1
Xx_2812: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2813: MUL QWORD PTR [RBP+0x0]         # mul_add_slow:208                   MUL QWORD PTR [RBP+0x0]
Xx_2814: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_2815: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_2816: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2817: MUL QWORD PTR [RBP+0x8]         # mul_add_slow:208                   MUL QWORD PTR [RBP+0x8]
Xx_2818: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_2819: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_2820: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2821: MUL QWORD PTR [RBP+0x10]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x10]
Xx_2822: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_2823: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_2824: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2825: MUL QWORD PTR [RBP+0x18]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x18]
Xx_2826: ADD R12, R14                    # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
Xx_2827: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_2828: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_2829: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_2830: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_2831: STC                             # mul_add_slow:243                   STC
Xx_2832: ADC R11, [RSP+-0x280]           # mul_add_slow:244                   ADC `mul_low_0, [RSP+-0x280]
Xx_2833: ADC R12, [RSP+-0x278]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x278]
Xx_2834: ADC R13, [RSP+-0x270]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x270]
Xx_2835: ADC RAX, [RSP+-0x268]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x268]
Xx_2836: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_2837: MOV [RSI+0x0], R11              # mul_add_slow:266                   MOV [RSI+0x0], `mul_low_0
Xx_2838: MOV [RSI+0x8], R12              # mul_add_slow:266                   MOV [RSI+0x8], `mul_low_1
Xx_2839: MOV [RSI+0x10], R13             # mul_add_slow:266                   MOV [RSI+0x10], `mul_low_2
Xx_2840: MOV [RSI+0x18], RAX             # mul_add_slow:266                   MOV [RSI+0x18], `mul_low_3
Xx_2841: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2842: MUL QWORD PTR [RBP+0x20]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x20]
Xx_2843: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_2844: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_2845: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2846: MUL QWORD PTR [RBP+0x28]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x28]
Xx_2847: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_2848: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_2849: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2850: MUL QWORD PTR [RBP+0x30]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x30]
Xx_2851: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_2852: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_2853: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2854: MUL QWORD PTR [RBP+0x38]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x38]
Xx_2855: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_2856: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_2857: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_2858: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_2859: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_2860: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_2861: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_2862: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_2863: ADC R11, [RSP+-0x260]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x260]
Xx_2864: ADC R12, [RSP+-0x258]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x258]
Xx_2865: ADC R13, [RSP+-0x250]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x250]
Xx_2866: ADC RAX, [RSP+-0x248]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x248]
Xx_2867: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_2868: MOV [RSI+0x20], R11             # mul_add_slow:266                   MOV [RSI+0x20], `mul_low_0
Xx_2869: MOV [RSI+0x28], R12             # mul_add_slow:266                   MOV [RSI+0x28], `mul_low_1
Xx_2870: MOV [RSI+0x30], R13             # mul_add_slow:266                   MOV [RSI+0x30], `mul_low_2
Xx_2871: MOV [RSI+0x38], RAX             # mul_add_slow:266                   MOV [RSI+0x38], `mul_low_3
Xx_2872: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2873: MUL QWORD PTR [RBP+0x40]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x40]
Xx_2874: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_2875: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_2876: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2877: MUL QWORD PTR [RBP+0x48]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x48]
Xx_2878: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_2879: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_2880: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2881: MUL QWORD PTR [RBP+0x50]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x50]
Xx_2882: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_2883: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_2884: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2885: MUL QWORD PTR [RBP+0x58]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x58]
Xx_2886: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_2887: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_2888: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_2889: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_2890: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_2891: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_2892: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_2893: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_2894: ADC R11, [RSP+-0x240]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x240]
Xx_2895: ADC R12, [RSP+-0x238]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x238]
Xx_2896: ADC R13, [RSP+-0x230]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x230]
Xx_2897: ADC RAX, [RSP+-0x228]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x228]
Xx_2898: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_2899: MOV [RSI+0x40], R11             # mul_add_slow:266                   MOV [RSI+0x40], `mul_low_0
Xx_2900: MOV [RSI+0x48], R12             # mul_add_slow:266                   MOV [RSI+0x48], `mul_low_1
Xx_2901: MOV [RSI+0x50], R13             # mul_add_slow:266                   MOV [RSI+0x50], `mul_low_2
Xx_2902: MOV [RSI+0x58], RAX             # mul_add_slow:266                   MOV [RSI+0x58], `mul_low_3
Xx_2903: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2904: MUL QWORD PTR [RBP+0x60]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x60]
Xx_2905: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_2906: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_2907: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2908: MUL QWORD PTR [RBP+0x68]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x68]
Xx_2909: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_2910: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_2911: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2912: MUL QWORD PTR [RBP+0x70]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x70]
Xx_2913: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_2914: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_2915: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2916: MUL QWORD PTR [RBP+0x78]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x78]
Xx_2917: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_2918: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_2919: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_2920: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_2921: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_2922: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_2923: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_2924: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_2925: ADC R11, [RSP+-0x220]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x220]
Xx_2926: ADC R12, [RSP+-0x218]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x218]
Xx_2927: ADC R13, [RSP+-0x210]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x210]
Xx_2928: ADC RAX, [RSP+-0x208]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x208]
Xx_2929: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_2930: MOV [RSI+0x60], R11             # mul_add_slow:266                   MOV [RSI+0x60], `mul_low_0
Xx_2931: MOV [RSI+0x68], R12             # mul_add_slow:266                   MOV [RSI+0x68], `mul_low_1
Xx_2932: MOV [RSI+0x70], R13             # mul_add_slow:266                   MOV [RSI+0x70], `mul_low_2
Xx_2933: MOV [RSI+0x78], RAX             # mul_add_slow:266                   MOV [RSI+0x78], `mul_low_3
Xx_2934: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2935: MUL QWORD PTR [RBP+0x80]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x80]
Xx_2936: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_2937: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_2938: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2939: MUL QWORD PTR [RBP+0x88]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x88]
Xx_2940: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_2941: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_2942: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2943: MUL QWORD PTR [RBP+0x90]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x90]
Xx_2944: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_2945: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_2946: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2947: MUL QWORD PTR [RBP+0x98]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x98]
Xx_2948: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_2949: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_2950: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_2951: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_2952: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_2953: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_2954: ADC R11, [RSP+-0x200]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x200]
Xx_2955: ADC R12, [RSP+-0x1f8]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x1f8]
Xx_2956: ADC R13, [RSP+-0x1f0]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x1f0]
Xx_2957: ADC RAX, [RSP+-0x1e8]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x1e8]
Xx_2958: MOV [RSI+0x80], R11             # mul_add_slow:266                   MOV [RSI+0x80], `mul_low_0
Xx_2959: MOV [RSI+0x88], R12             # mul_add_slow:266                   MOV [RSI+0x88], `mul_low_1
Xx_2960: MOV [RSI+0x90], R13             # mul_add_slow:266                   MOV [RSI+0x90], `mul_low_2
Xx_2961: MOV [RSI+0x98], RAX             # mul_add_slow:266                   MOV [RSI+0x98], `mul_low_3
Xx_2962: JMP _label_45                   # gcd_unsigned:620                   JMP _label_45
Xx_2963: multiply_uv_size_8:             # gcd_unsigned:490                   multiply_uv_size_8:
Xx_2964: MOV RDI, [RSP+-0x388]           # gcd_unsigned:531                   MOV `tmp, `spill_parity
Xx_2965: CMP RDI, 0                      # gcd_unsigned:532                   CMP `tmp, 0
Xx_2966: MOV RBX, [RSP+-0x3a8]           # gcd_unsigned:535                   MOV `addr_a, `spill_u_0
Xx_2967: MOV RBP, [RSP+-0x398]           # gcd_unsigned:536                   MOV `addr_b, `spill_v_0
Xx_2968: MOV RSI, RBX                    # gcd_unsigned:539                   MOV `addr_new, `addr_a
Xx_2969: CMOVNE RBX, RBP                 # gcd_unsigned:540                   CMOVNE `addr_a, `addr_b
Xx_2970: CMOVNE RBP, RSI                 # gcd_unsigned:541                   CMOVNE `addr_b, `addr_new
Xx_2971: MOV [RSP+-0x348], RBX           # gcd_unsigned:543                   MOV `spill_mod_u_0, `addr_a
Xx_2972: MOV [RSP+-0x338], RBP           # gcd_unsigned:544                   MOV `spill_mod_v_0, `addr_b
Xx_2973: MOV RBX, [RSP+-0x3a0]           # gcd_unsigned:535                   MOV `addr_a, `spill_u_1
Xx_2974: MOV RBP, [RSP+-0x390]           # gcd_unsigned:536                   MOV `addr_b, `spill_v_1
Xx_2975: MOV RSI, RBX                    # gcd_unsigned:539                   MOV `addr_new, `addr_a
Xx_2976: CMOVNE RBX, RBP                 # gcd_unsigned:540                   CMOVNE `addr_a, `addr_b
Xx_2977: CMOVNE RBP, RSI                 # gcd_unsigned:541                   CMOVNE `addr_b, `addr_new
Xx_2978: MOV [RSP+-0x340], RBX           # gcd_unsigned:543                   MOV `spill_mod_u_1, `addr_a
Xx_2979: MOV [RSP+-0x330], RBP           # gcd_unsigned:544                   MOV `spill_mod_v_1, `addr_b
Xx_2980: MOV RSI, [RSP+-0x3b8]           # gcd_unsigned:547                   MOV `addr_new, `spill_iter
Xx_2981: TEST RSI, 1                     # gcd_unsigned:548                   TEST `addr_new, 1
Xx_2982: MOV RBX, [RSP+-0x3f8]           # gcd_unsigned:551                   MOV `addr_a, `spill_a_addr_base
Xx_2983: CMOVNZ RBX, [RSP+-0x3e8]        # gcd_unsigned:552                   CMOVNZ `addr_a, `spill_a_2_addr_base
Xx_2984: MOV RBP, [RSP+-0x3f0]           # gcd_unsigned:555                   MOV `addr_b, `spill_b_addr_base
Xx_2985: CMOVNZ RBP, [RSP+-0x3e0]        # gcd_unsigned:556                   CMOVNZ `addr_b, `spill_b_2_addr_base
Xx_2986: CMP RDI, 0                      # gcd_unsigned:559                   CMP `tmp, 0
Xx_2987: MOV RSI, RBX                    # gcd_unsigned:560                   MOV `addr_new, `addr_a
Xx_2988: CMOVNE RBX, RBP                 # gcd_unsigned:561                   CMOVNE `addr_a, `addr_b
Xx_2989: CMOVNE RBP, RSI                 # gcd_unsigned:562                   CMOVNE `addr_b, `addr_new
Xx_2990: MOV RSI, [RSP+-0x3b8]           # gcd_unsigned:567                   MOV `addr_new, `spill_iter
Xx_2991: TEST RSI, 1                     # gcd_unsigned:568                   TEST `addr_new, 1
Xx_2992: MOV RSI, [RSP+-0x3e0]           # gcd_unsigned:569                   MOV `addr_new, `spill_b_2_addr_base
Xx_2993: CMOVNZ RSI, [RSP+-0x3f0]        # gcd_unsigned:570                   CMOVNZ `addr_new, `spill_b_addr_base
Xx_2994: MOV [RSP+-0x328], RSI           # gcd_unsigned:571                   MOV `spill_addr_b_new, `addr_new
Xx_2995: MOV RSI, [RSP+-0x3e8]           # gcd_unsigned:574                   MOV `addr_new, `spill_a_2_addr_base
Xx_2996: CMOVNZ RSI, [RSP+-0x3f8]        # gcd_unsigned:575                   CMOVNZ `addr_new, `spill_a_addr_base
Xx_2997: MOV RDI, [RSP+-0x338]           # gcd_unsigned:604                   MOV `tmp, `spill_mod_v_0
Xx_2998: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_2999: MUL QWORD PTR [RBP+0x0]         # mul_add_slow:208                   MUL QWORD PTR [RBP+0x0]
Xx_3000: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_3001: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_3002: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3003: MUL QWORD PTR [RBP+0x8]         # mul_add_slow:208                   MUL QWORD PTR [RBP+0x8]
Xx_3004: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_3005: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_3006: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3007: MUL QWORD PTR [RBP+0x10]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x10]
Xx_3008: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_3009: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_3010: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3011: MUL QWORD PTR [RBP+0x18]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x18]
Xx_3012: ADD R12, R14                    # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
Xx_3013: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_3014: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_3015: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_3016: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_3017: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_3018: MOV [RSP+-0x320], R11           # mul_add_slow:266                   MOV [RSP+-0x320], `mul_low_0
Xx_3019: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_3020: MOV [RSP+-0x318], R12           # mul_add_slow:266                   MOV [RSP+-0x318], `mul_low_1
Xx_3021: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_3022: MOV [RSP+-0x310], R13           # mul_add_slow:266                   MOV [RSP+-0x310], `mul_low_2
Xx_3023: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_3024: MOV [RSP+-0x308], RAX           # mul_add_slow:266                   MOV [RSP+-0x308], `mul_low_3
Xx_3025: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3026: MUL QWORD PTR [RBP+0x20]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x20]
Xx_3027: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_3028: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_3029: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3030: MUL QWORD PTR [RBP+0x28]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x28]
Xx_3031: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_3032: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_3033: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3034: MUL QWORD PTR [RBP+0x30]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x30]
Xx_3035: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_3036: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_3037: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3038: MUL QWORD PTR [RBP+0x38]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x38]
Xx_3039: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_3040: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_3041: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_3042: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_3043: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_3044: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_3045: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_3046: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_3047: MOV [RSP+-0x300], R11           # mul_add_slow:266                   MOV [RSP+-0x300], `mul_low_0
Xx_3048: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_3049: MOV [RSP+-0x2f8], R12           # mul_add_slow:266                   MOV [RSP+-0x2f8], `mul_low_1
Xx_3050: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_3051: MOV [RSP+-0x2f0], R13           # mul_add_slow:266                   MOV [RSP+-0x2f0], `mul_low_2
Xx_3052: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_3053: MOV [RSP+-0x2e8], RAX           # mul_add_slow:266                   MOV [RSP+-0x2e8], `mul_low_3
Xx_3054: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3055: MUL QWORD PTR [RBP+0x40]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x40]
Xx_3056: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_3057: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_3058: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3059: MUL QWORD PTR [RBP+0x48]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x48]
Xx_3060: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_3061: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_3062: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3063: MUL QWORD PTR [RBP+0x50]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x50]
Xx_3064: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_3065: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_3066: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3067: MUL QWORD PTR [RBP+0x58]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x58]
Xx_3068: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_3069: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_3070: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_3071: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_3072: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_3073: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_3074: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_3075: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_3076: MOV [RSP+-0x2e0], R11           # mul_add_slow:266                   MOV [RSP+-0x2e0], `mul_low_0
Xx_3077: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_3078: MOV [RSP+-0x2d8], R12           # mul_add_slow:266                   MOV [RSP+-0x2d8], `mul_low_1
Xx_3079: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_3080: MOV [RSP+-0x2d0], R13           # mul_add_slow:266                   MOV [RSP+-0x2d0], `mul_low_2
Xx_3081: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_3082: MOV [RSP+-0x2c8], RAX           # mul_add_slow:266                   MOV [RSP+-0x2c8], `mul_low_3
Xx_3083: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3084: MUL QWORD PTR [RBP+0x60]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x60]
Xx_3085: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_3086: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_3087: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3088: MUL QWORD PTR [RBP+0x68]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x68]
Xx_3089: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_3090: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_3091: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3092: MUL QWORD PTR [RBP+0x70]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x70]
Xx_3093: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_3094: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_3095: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3096: MUL QWORD PTR [RBP+0x78]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x78]
Xx_3097: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_3098: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_3099: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_3100: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_3101: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_3102: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_3103: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_3104: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_3105: MOV [RSP+-0x2c0], R11           # mul_add_slow:266                   MOV [RSP+-0x2c0], `mul_low_0
Xx_3106: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_3107: MOV [RSP+-0x2b8], R12           # mul_add_slow:266                   MOV [RSP+-0x2b8], `mul_low_1
Xx_3108: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_3109: MOV [RSP+-0x2b0], R13           # mul_add_slow:266                   MOV [RSP+-0x2b0], `mul_low_2
Xx_3110: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_3111: MOV [RSP+-0x2a8], RAX           # mul_add_slow:266                   MOV [RSP+-0x2a8], `mul_low_3
Xx_3112: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3113: MUL QWORD PTR [RBP+0x80]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x80]
Xx_3114: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_3115: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_3116: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3117: MUL QWORD PTR [RBP+0x88]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x88]
Xx_3118: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_3119: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_3120: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3121: MUL QWORD PTR [RBP+0x90]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x90]
Xx_3122: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_3123: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_3124: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3125: MUL QWORD PTR [RBP+0x98]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x98]
Xx_3126: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_3127: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_3128: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_3129: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_3130: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_3131: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_3132: MOV [RSP+-0x2a0], R11           # mul_add_slow:266                   MOV [RSP+-0x2a0], `mul_low_0
Xx_3133: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_3134: MOV [RSP+-0x298], R12           # mul_add_slow:266                   MOV [RSP+-0x298], `mul_low_1
Xx_3135: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_3136: MOV [RSP+-0x290], R13           # mul_add_slow:266                   MOV [RSP+-0x290], `mul_low_2
Xx_3137: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_3138: MOV [RSP+-0x288], RAX           # mul_add_slow:266                   MOV [RSP+-0x288], `mul_low_3
Xx_3139: MOV RDI, [RSP+-0x340]           # gcd_unsigned:608                   MOV `tmp, `spill_mod_u_1
Xx_3140: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3141: MUL QWORD PTR [RBX+0x0]         # mul_add_slow:208                   MUL QWORD PTR [RBX+0x0]
Xx_3142: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_3143: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_3144: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3145: MUL QWORD PTR [RBX+0x8]         # mul_add_slow:208                   MUL QWORD PTR [RBX+0x8]
Xx_3146: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_3147: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_3148: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3149: MUL QWORD PTR [RBX+0x10]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x10]
Xx_3150: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_3151: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_3152: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3153: MUL QWORD PTR [RBX+0x18]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x18]
Xx_3154: ADD R12, R14                    # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
Xx_3155: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_3156: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_3157: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_3158: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_3159: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_3160: MOV [RSP+-0x280], R11           # mul_add_slow:266                   MOV [RSP+-0x280], `mul_low_0
Xx_3161: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_3162: MOV [RSP+-0x278], R12           # mul_add_slow:266                   MOV [RSP+-0x278], `mul_low_1
Xx_3163: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_3164: MOV [RSP+-0x270], R13           # mul_add_slow:266                   MOV [RSP+-0x270], `mul_low_2
Xx_3165: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_3166: MOV [RSP+-0x268], RAX           # mul_add_slow:266                   MOV [RSP+-0x268], `mul_low_3
Xx_3167: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3168: MUL QWORD PTR [RBX+0x20]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x20]
Xx_3169: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_3170: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_3171: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3172: MUL QWORD PTR [RBX+0x28]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x28]
Xx_3173: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_3174: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_3175: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3176: MUL QWORD PTR [RBX+0x30]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x30]
Xx_3177: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_3178: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_3179: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3180: MUL QWORD PTR [RBX+0x38]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x38]
Xx_3181: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_3182: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_3183: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_3184: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_3185: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_3186: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_3187: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_3188: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_3189: MOV [RSP+-0x260], R11           # mul_add_slow:266                   MOV [RSP+-0x260], `mul_low_0
Xx_3190: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_3191: MOV [RSP+-0x258], R12           # mul_add_slow:266                   MOV [RSP+-0x258], `mul_low_1
Xx_3192: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_3193: MOV [RSP+-0x250], R13           # mul_add_slow:266                   MOV [RSP+-0x250], `mul_low_2
Xx_3194: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_3195: MOV [RSP+-0x248], RAX           # mul_add_slow:266                   MOV [RSP+-0x248], `mul_low_3
Xx_3196: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3197: MUL QWORD PTR [RBX+0x40]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x40]
Xx_3198: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_3199: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_3200: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3201: MUL QWORD PTR [RBX+0x48]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x48]
Xx_3202: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_3203: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_3204: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3205: MUL QWORD PTR [RBX+0x50]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x50]
Xx_3206: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_3207: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_3208: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3209: MUL QWORD PTR [RBX+0x58]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x58]
Xx_3210: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_3211: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_3212: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_3213: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_3214: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_3215: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_3216: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_3217: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_3218: MOV [RSP+-0x240], R11           # mul_add_slow:266                   MOV [RSP+-0x240], `mul_low_0
Xx_3219: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_3220: MOV [RSP+-0x238], R12           # mul_add_slow:266                   MOV [RSP+-0x238], `mul_low_1
Xx_3221: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_3222: MOV [RSP+-0x230], R13           # mul_add_slow:266                   MOV [RSP+-0x230], `mul_low_2
Xx_3223: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_3224: MOV [RSP+-0x228], RAX           # mul_add_slow:266                   MOV [RSP+-0x228], `mul_low_3
Xx_3225: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3226: MUL QWORD PTR [RBX+0x60]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x60]
Xx_3227: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_3228: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_3229: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3230: MUL QWORD PTR [RBX+0x68]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x68]
Xx_3231: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_3232: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_3233: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3234: MUL QWORD PTR [RBX+0x70]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x70]
Xx_3235: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_3236: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_3237: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3238: MUL QWORD PTR [RBX+0x78]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x78]
Xx_3239: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_3240: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_3241: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_3242: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_3243: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_3244: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_3245: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_3246: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_3247: MOV [RSP+-0x220], R11           # mul_add_slow:266                   MOV [RSP+-0x220], `mul_low_0
Xx_3248: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_3249: MOV [RSP+-0x218], R12           # mul_add_slow:266                   MOV [RSP+-0x218], `mul_low_1
Xx_3250: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_3251: MOV [RSP+-0x210], R13           # mul_add_slow:266                   MOV [RSP+-0x210], `mul_low_2
Xx_3252: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_3253: MOV [RSP+-0x208], RAX           # mul_add_slow:266                   MOV [RSP+-0x208], `mul_low_3
Xx_3254: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3255: MUL QWORD PTR [RBX+0x80]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x80]
Xx_3256: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_3257: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_3258: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3259: MUL QWORD PTR [RBX+0x88]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x88]
Xx_3260: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_3261: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_3262: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3263: MUL QWORD PTR [RBX+0x90]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x90]
Xx_3264: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_3265: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_3266: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3267: MUL QWORD PTR [RBX+0x98]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x98]
Xx_3268: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_3269: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_3270: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_3271: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_3272: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_3273: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_3274: MOV [RSP+-0x200], R11           # mul_add_slow:266                   MOV [RSP+-0x200], `mul_low_0
Xx_3275: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_3276: MOV [RSP+-0x1f8], R12           # mul_add_slow:266                   MOV [RSP+-0x1f8], `mul_low_1
Xx_3277: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_3278: MOV [RSP+-0x1f0], R13           # mul_add_slow:266                   MOV [RSP+-0x1f0], `mul_low_2
Xx_3279: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_3280: MOV [RSP+-0x1e8], RAX           # mul_add_slow:266                   MOV [RSP+-0x1e8], `mul_low_3
Xx_3281: MOV RDI, [RSP+-0x348]           # gcd_unsigned:612                   MOV `tmp, `spill_mod_u_0
Xx_3282: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3283: MUL QWORD PTR [RBX+0x0]         # mul_add_slow:208                   MUL QWORD PTR [RBX+0x0]
Xx_3284: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_3285: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_3286: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3287: MUL QWORD PTR [RBX+0x8]         # mul_add_slow:208                   MUL QWORD PTR [RBX+0x8]
Xx_3288: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_3289: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_3290: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3291: MUL QWORD PTR [RBX+0x10]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x10]
Xx_3292: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_3293: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_3294: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3295: MUL QWORD PTR [RBX+0x18]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x18]
Xx_3296: ADD R12, R14                    # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
Xx_3297: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_3298: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_3299: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_3300: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_3301: STC                             # mul_add_slow:243                   STC
Xx_3302: ADC R11, [RSP+-0x320]           # mul_add_slow:244                   ADC `mul_low_0, [RSP+-0x320]
Xx_3303: ADC R12, [RSP+-0x318]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x318]
Xx_3304: ADC R13, [RSP+-0x310]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x310]
Xx_3305: ADC RAX, [RSP+-0x308]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x308]
Xx_3306: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_3307: MOV [RSI+0x0], R11              # mul_add_slow:266                   MOV [RSI+0x0], `mul_low_0
Xx_3308: MOV [RSI+0x8], R12              # mul_add_slow:266                   MOV [RSI+0x8], `mul_low_1
Xx_3309: MOV [RSI+0x10], R13             # mul_add_slow:266                   MOV [RSI+0x10], `mul_low_2
Xx_3310: MOV [RSI+0x18], RAX             # mul_add_slow:266                   MOV [RSI+0x18], `mul_low_3
Xx_3311: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3312: MUL QWORD PTR [RBX+0x20]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x20]
Xx_3313: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_3314: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_3315: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3316: MUL QWORD PTR [RBX+0x28]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x28]
Xx_3317: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_3318: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_3319: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3320: MUL QWORD PTR [RBX+0x30]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x30]
Xx_3321: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_3322: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_3323: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3324: MUL QWORD PTR [RBX+0x38]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x38]
Xx_3325: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_3326: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_3327: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_3328: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_3329: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_3330: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_3331: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_3332: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_3333: ADC R11, [RSP+-0x300]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x300]
Xx_3334: ADC R12, [RSP+-0x2f8]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x2f8]
Xx_3335: ADC R13, [RSP+-0x2f0]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x2f0]
Xx_3336: ADC RAX, [RSP+-0x2e8]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x2e8]
Xx_3337: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_3338: MOV [RSI+0x20], R11             # mul_add_slow:266                   MOV [RSI+0x20], `mul_low_0
Xx_3339: MOV [RSI+0x28], R12             # mul_add_slow:266                   MOV [RSI+0x28], `mul_low_1
Xx_3340: MOV [RSI+0x30], R13             # mul_add_slow:266                   MOV [RSI+0x30], `mul_low_2
Xx_3341: MOV [RSI+0x38], RAX             # mul_add_slow:266                   MOV [RSI+0x38], `mul_low_3
Xx_3342: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3343: MUL QWORD PTR [RBX+0x40]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x40]
Xx_3344: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_3345: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_3346: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3347: MUL QWORD PTR [RBX+0x48]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x48]
Xx_3348: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_3349: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_3350: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3351: MUL QWORD PTR [RBX+0x50]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x50]
Xx_3352: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_3353: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_3354: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3355: MUL QWORD PTR [RBX+0x58]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x58]
Xx_3356: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_3357: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_3358: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_3359: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_3360: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_3361: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_3362: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_3363: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_3364: ADC R11, [RSP+-0x2e0]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x2e0]
Xx_3365: ADC R12, [RSP+-0x2d8]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x2d8]
Xx_3366: ADC R13, [RSP+-0x2d0]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x2d0]
Xx_3367: ADC RAX, [RSP+-0x2c8]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x2c8]
Xx_3368: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_3369: MOV [RSI+0x40], R11             # mul_add_slow:266                   MOV [RSI+0x40], `mul_low_0
Xx_3370: MOV [RSI+0x48], R12             # mul_add_slow:266                   MOV [RSI+0x48], `mul_low_1
Xx_3371: MOV [RSI+0x50], R13             # mul_add_slow:266                   MOV [RSI+0x50], `mul_low_2
Xx_3372: MOV [RSI+0x58], RAX             # mul_add_slow:266                   MOV [RSI+0x58], `mul_low_3
Xx_3373: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3374: MUL QWORD PTR [RBX+0x60]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x60]
Xx_3375: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_3376: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_3377: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3378: MUL QWORD PTR [RBX+0x68]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x68]
Xx_3379: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_3380: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_3381: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3382: MUL QWORD PTR [RBX+0x70]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x70]
Xx_3383: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_3384: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_3385: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3386: MUL QWORD PTR [RBX+0x78]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x78]
Xx_3387: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_3388: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_3389: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_3390: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_3391: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_3392: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_3393: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_3394: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_3395: ADC R11, [RSP+-0x2c0]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x2c0]
Xx_3396: ADC R12, [RSP+-0x2b8]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x2b8]
Xx_3397: ADC R13, [RSP+-0x2b0]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x2b0]
Xx_3398: ADC RAX, [RSP+-0x2a8]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x2a8]
Xx_3399: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_3400: MOV [RSI+0x60], R11             # mul_add_slow:266                   MOV [RSI+0x60], `mul_low_0
Xx_3401: MOV [RSI+0x68], R12             # mul_add_slow:266                   MOV [RSI+0x68], `mul_low_1
Xx_3402: MOV [RSI+0x70], R13             # mul_add_slow:266                   MOV [RSI+0x70], `mul_low_2
Xx_3403: MOV [RSI+0x78], RAX             # mul_add_slow:266                   MOV [RSI+0x78], `mul_low_3
Xx_3404: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3405: MUL QWORD PTR [RBX+0x80]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x80]
Xx_3406: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_3407: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_3408: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3409: MUL QWORD PTR [RBX+0x88]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x88]
Xx_3410: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_3411: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_3412: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3413: MUL QWORD PTR [RBX+0x90]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x90]
Xx_3414: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_3415: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_3416: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3417: MUL QWORD PTR [RBX+0x98]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x98]
Xx_3418: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_3419: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_3420: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_3421: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_3422: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_3423: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_3424: ADC R11, [RSP+-0x2a0]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x2a0]
Xx_3425: ADC R12, [RSP+-0x298]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x298]
Xx_3426: ADC R13, [RSP+-0x290]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x290]
Xx_3427: ADC RAX, [RSP+-0x288]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x288]
Xx_3428: MOV [RSI+0x80], R11             # mul_add_slow:266                   MOV [RSI+0x80], `mul_low_0
Xx_3429: MOV [RSI+0x88], R12             # mul_add_slow:266                   MOV [RSI+0x88], `mul_low_1
Xx_3430: MOV [RSI+0x90], R13             # mul_add_slow:266                   MOV [RSI+0x90], `mul_low_2
Xx_3431: MOV [RSI+0x98], RAX             # mul_add_slow:266                   MOV [RSI+0x98], `mul_low_3
Xx_3432: MOV RSI, [RSP+-0x328]           # gcd_unsigned:616                   MOV `addr_new, `spill_addr_b_new
Xx_3433: MOV RDI, [RSP+-0x330]           # gcd_unsigned:617                   MOV `tmp, `spill_mod_v_1
Xx_3434: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3435: MUL QWORD PTR [RBP+0x0]         # mul_add_slow:208                   MUL QWORD PTR [RBP+0x0]
Xx_3436: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_3437: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_3438: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3439: MUL QWORD PTR [RBP+0x8]         # mul_add_slow:208                   MUL QWORD PTR [RBP+0x8]
Xx_3440: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_3441: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_3442: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3443: MUL QWORD PTR [RBP+0x10]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x10]
Xx_3444: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_3445: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_3446: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3447: MUL QWORD PTR [RBP+0x18]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x18]
Xx_3448: ADD R12, R14                    # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
Xx_3449: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_3450: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_3451: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_3452: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_3453: STC                             # mul_add_slow:243                   STC
Xx_3454: ADC R11, [RSP+-0x280]           # mul_add_slow:244                   ADC `mul_low_0, [RSP+-0x280]
Xx_3455: ADC R12, [RSP+-0x278]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x278]
Xx_3456: ADC R13, [RSP+-0x270]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x270]
Xx_3457: ADC RAX, [RSP+-0x268]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x268]
Xx_3458: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_3459: MOV [RSI+0x0], R11              # mul_add_slow:266                   MOV [RSI+0x0], `mul_low_0
Xx_3460: MOV [RSI+0x8], R12              # mul_add_slow:266                   MOV [RSI+0x8], `mul_low_1
Xx_3461: MOV [RSI+0x10], R13             # mul_add_slow:266                   MOV [RSI+0x10], `mul_low_2
Xx_3462: MOV [RSI+0x18], RAX             # mul_add_slow:266                   MOV [RSI+0x18], `mul_low_3
Xx_3463: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3464: MUL QWORD PTR [RBP+0x20]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x20]
Xx_3465: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_3466: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_3467: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3468: MUL QWORD PTR [RBP+0x28]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x28]
Xx_3469: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_3470: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_3471: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3472: MUL QWORD PTR [RBP+0x30]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x30]
Xx_3473: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_3474: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_3475: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3476: MUL QWORD PTR [RBP+0x38]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x38]
Xx_3477: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_3478: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_3479: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_3480: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_3481: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_3482: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_3483: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_3484: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_3485: ADC R11, [RSP+-0x260]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x260]
Xx_3486: ADC R12, [RSP+-0x258]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x258]
Xx_3487: ADC R13, [RSP+-0x250]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x250]
Xx_3488: ADC RAX, [RSP+-0x248]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x248]
Xx_3489: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_3490: MOV [RSI+0x20], R11             # mul_add_slow:266                   MOV [RSI+0x20], `mul_low_0
Xx_3491: MOV [RSI+0x28], R12             # mul_add_slow:266                   MOV [RSI+0x28], `mul_low_1
Xx_3492: MOV [RSI+0x30], R13             # mul_add_slow:266                   MOV [RSI+0x30], `mul_low_2
Xx_3493: MOV [RSI+0x38], RAX             # mul_add_slow:266                   MOV [RSI+0x38], `mul_low_3
Xx_3494: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3495: MUL QWORD PTR [RBP+0x40]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x40]
Xx_3496: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_3497: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_3498: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3499: MUL QWORD PTR [RBP+0x48]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x48]
Xx_3500: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_3501: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_3502: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3503: MUL QWORD PTR [RBP+0x50]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x50]
Xx_3504: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_3505: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_3506: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3507: MUL QWORD PTR [RBP+0x58]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x58]
Xx_3508: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_3509: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_3510: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_3511: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_3512: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_3513: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_3514: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_3515: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_3516: ADC R11, [RSP+-0x240]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x240]
Xx_3517: ADC R12, [RSP+-0x238]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x238]
Xx_3518: ADC R13, [RSP+-0x230]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x230]
Xx_3519: ADC RAX, [RSP+-0x228]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x228]
Xx_3520: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_3521: MOV [RSI+0x40], R11             # mul_add_slow:266                   MOV [RSI+0x40], `mul_low_0
Xx_3522: MOV [RSI+0x48], R12             # mul_add_slow:266                   MOV [RSI+0x48], `mul_low_1
Xx_3523: MOV [RSI+0x50], R13             # mul_add_slow:266                   MOV [RSI+0x50], `mul_low_2
Xx_3524: MOV [RSI+0x58], RAX             # mul_add_slow:266                   MOV [RSI+0x58], `mul_low_3
Xx_3525: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3526: MUL QWORD PTR [RBP+0x60]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x60]
Xx_3527: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_3528: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_3529: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3530: MUL QWORD PTR [RBP+0x68]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x68]
Xx_3531: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_3532: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_3533: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3534: MUL QWORD PTR [RBP+0x70]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x70]
Xx_3535: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_3536: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_3537: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3538: MUL QWORD PTR [RBP+0x78]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x78]
Xx_3539: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_3540: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_3541: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_3542: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_3543: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_3544: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_3545: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_3546: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_3547: ADC R11, [RSP+-0x220]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x220]
Xx_3548: ADC R12, [RSP+-0x218]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x218]
Xx_3549: ADC R13, [RSP+-0x210]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x210]
Xx_3550: ADC RAX, [RSP+-0x208]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x208]
Xx_3551: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_3552: MOV [RSI+0x60], R11             # mul_add_slow:266                   MOV [RSI+0x60], `mul_low_0
Xx_3553: MOV [RSI+0x68], R12             # mul_add_slow:266                   MOV [RSI+0x68], `mul_low_1
Xx_3554: MOV [RSI+0x70], R13             # mul_add_slow:266                   MOV [RSI+0x70], `mul_low_2
Xx_3555: MOV [RSI+0x78], RAX             # mul_add_slow:266                   MOV [RSI+0x78], `mul_low_3
Xx_3556: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3557: MUL QWORD PTR [RBP+0x80]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x80]
Xx_3558: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_3559: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_3560: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3561: MUL QWORD PTR [RBP+0x88]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x88]
Xx_3562: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_3563: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_3564: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3565: MUL QWORD PTR [RBP+0x90]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x90]
Xx_3566: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_3567: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_3568: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3569: MUL QWORD PTR [RBP+0x98]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x98]
Xx_3570: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_3571: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_3572: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_3573: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_3574: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_3575: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_3576: ADC R11, [RSP+-0x200]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x200]
Xx_3577: ADC R12, [RSP+-0x1f8]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x1f8]
Xx_3578: ADC R13, [RSP+-0x1f0]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x1f0]
Xx_3579: ADC RAX, [RSP+-0x1e8]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x1e8]
Xx_3580: MOV [RSI+0x80], R11             # mul_add_slow:266                   MOV [RSI+0x80], `mul_low_0
Xx_3581: MOV [RSI+0x88], R12             # mul_add_slow:266                   MOV [RSI+0x88], `mul_low_1
Xx_3582: MOV [RSI+0x90], R13             # mul_add_slow:266                   MOV [RSI+0x90], `mul_low_2
Xx_3583: MOV [RSI+0x98], RAX             # mul_add_slow:266                   MOV [RSI+0x98], `mul_low_3
Xx_3584: JMP _label_45                   # gcd_unsigned:620                   JMP _label_45
Xx_3585: multiply_uv_size_12:            # gcd_unsigned:490                   multiply_uv_size_12:
Xx_3586: MOV RDI, [RSP+-0x388]           # gcd_unsigned:531                   MOV `tmp, `spill_parity
Xx_3587: CMP RDI, 0                      # gcd_unsigned:532                   CMP `tmp, 0
Xx_3588: MOV RBX, [RSP+-0x3a8]           # gcd_unsigned:535                   MOV `addr_a, `spill_u_0
Xx_3589: MOV RBP, [RSP+-0x398]           # gcd_unsigned:536                   MOV `addr_b, `spill_v_0
Xx_3590: MOV RSI, RBX                    # gcd_unsigned:539                   MOV `addr_new, `addr_a
Xx_3591: CMOVNE RBX, RBP                 # gcd_unsigned:540                   CMOVNE `addr_a, `addr_b
Xx_3592: CMOVNE RBP, RSI                 # gcd_unsigned:541                   CMOVNE `addr_b, `addr_new
Xx_3593: MOV [RSP+-0x348], RBX           # gcd_unsigned:543                   MOV `spill_mod_u_0, `addr_a
Xx_3594: MOV [RSP+-0x338], RBP           # gcd_unsigned:544                   MOV `spill_mod_v_0, `addr_b
Xx_3595: MOV RBX, [RSP+-0x3a0]           # gcd_unsigned:535                   MOV `addr_a, `spill_u_1
Xx_3596: MOV RBP, [RSP+-0x390]           # gcd_unsigned:536                   MOV `addr_b, `spill_v_1
Xx_3597: MOV RSI, RBX                    # gcd_unsigned:539                   MOV `addr_new, `addr_a
Xx_3598: CMOVNE RBX, RBP                 # gcd_unsigned:540                   CMOVNE `addr_a, `addr_b
Xx_3599: CMOVNE RBP, RSI                 # gcd_unsigned:541                   CMOVNE `addr_b, `addr_new
Xx_3600: MOV [RSP+-0x340], RBX           # gcd_unsigned:543                   MOV `spill_mod_u_1, `addr_a
Xx_3601: MOV [RSP+-0x330], RBP           # gcd_unsigned:544                   MOV `spill_mod_v_1, `addr_b
Xx_3602: MOV RSI, [RSP+-0x3b8]           # gcd_unsigned:547                   MOV `addr_new, `spill_iter
Xx_3603: TEST RSI, 1                     # gcd_unsigned:548                   TEST `addr_new, 1
Xx_3604: MOV RBX, [RSP+-0x3f8]           # gcd_unsigned:551                   MOV `addr_a, `spill_a_addr_base
Xx_3605: CMOVNZ RBX, [RSP+-0x3e8]        # gcd_unsigned:552                   CMOVNZ `addr_a, `spill_a_2_addr_base
Xx_3606: MOV RBP, [RSP+-0x3f0]           # gcd_unsigned:555                   MOV `addr_b, `spill_b_addr_base
Xx_3607: CMOVNZ RBP, [RSP+-0x3e0]        # gcd_unsigned:556                   CMOVNZ `addr_b, `spill_b_2_addr_base
Xx_3608: CMP RDI, 0                      # gcd_unsigned:559                   CMP `tmp, 0
Xx_3609: MOV RSI, RBX                    # gcd_unsigned:560                   MOV `addr_new, `addr_a
Xx_3610: CMOVNE RBX, RBP                 # gcd_unsigned:561                   CMOVNE `addr_a, `addr_b
Xx_3611: CMOVNE RBP, RSI                 # gcd_unsigned:562                   CMOVNE `addr_b, `addr_new
Xx_3612: MOV RSI, [RSP+-0x3b8]           # gcd_unsigned:567                   MOV `addr_new, `spill_iter
Xx_3613: TEST RSI, 1                     # gcd_unsigned:568                   TEST `addr_new, 1
Xx_3614: MOV RSI, [RSP+-0x3e0]           # gcd_unsigned:569                   MOV `addr_new, `spill_b_2_addr_base
Xx_3615: CMOVNZ RSI, [RSP+-0x3f0]        # gcd_unsigned:570                   CMOVNZ `addr_new, `spill_b_addr_base
Xx_3616: MOV [RSP+-0x328], RSI           # gcd_unsigned:571                   MOV `spill_addr_b_new, `addr_new
Xx_3617: MOV RSI, [RSP+-0x3e8]           # gcd_unsigned:574                   MOV `addr_new, `spill_a_2_addr_base
Xx_3618: CMOVNZ RSI, [RSP+-0x3f8]        # gcd_unsigned:575                   CMOVNZ `addr_new, `spill_a_addr_base
Xx_3619: MOV RDI, [RSP+-0x338]           # gcd_unsigned:604                   MOV `tmp, `spill_mod_v_0
Xx_3620: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3621: MUL QWORD PTR [RBP+0x0]         # mul_add_slow:208                   MUL QWORD PTR [RBP+0x0]
Xx_3622: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_3623: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_3624: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3625: MUL QWORD PTR [RBP+0x8]         # mul_add_slow:208                   MUL QWORD PTR [RBP+0x8]
Xx_3626: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_3627: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_3628: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3629: MUL QWORD PTR [RBP+0x10]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x10]
Xx_3630: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_3631: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_3632: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3633: MUL QWORD PTR [RBP+0x18]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x18]
Xx_3634: ADD R12, R14                    # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
Xx_3635: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_3636: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_3637: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_3638: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_3639: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_3640: MOV [RSP+-0x320], R11           # mul_add_slow:266                   MOV [RSP+-0x320], `mul_low_0
Xx_3641: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_3642: MOV [RSP+-0x318], R12           # mul_add_slow:266                   MOV [RSP+-0x318], `mul_low_1
Xx_3643: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_3644: MOV [RSP+-0x310], R13           # mul_add_slow:266                   MOV [RSP+-0x310], `mul_low_2
Xx_3645: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_3646: MOV [RSP+-0x308], RAX           # mul_add_slow:266                   MOV [RSP+-0x308], `mul_low_3
Xx_3647: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3648: MUL QWORD PTR [RBP+0x20]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x20]
Xx_3649: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_3650: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_3651: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3652: MUL QWORD PTR [RBP+0x28]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x28]
Xx_3653: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_3654: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_3655: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3656: MUL QWORD PTR [RBP+0x30]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x30]
Xx_3657: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_3658: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_3659: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3660: MUL QWORD PTR [RBP+0x38]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x38]
Xx_3661: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_3662: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_3663: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_3664: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_3665: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_3666: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_3667: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_3668: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_3669: MOV [RSP+-0x300], R11           # mul_add_slow:266                   MOV [RSP+-0x300], `mul_low_0
Xx_3670: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_3671: MOV [RSP+-0x2f8], R12           # mul_add_slow:266                   MOV [RSP+-0x2f8], `mul_low_1
Xx_3672: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_3673: MOV [RSP+-0x2f0], R13           # mul_add_slow:266                   MOV [RSP+-0x2f0], `mul_low_2
Xx_3674: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_3675: MOV [RSP+-0x2e8], RAX           # mul_add_slow:266                   MOV [RSP+-0x2e8], `mul_low_3
Xx_3676: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3677: MUL QWORD PTR [RBP+0x40]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x40]
Xx_3678: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_3679: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_3680: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3681: MUL QWORD PTR [RBP+0x48]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x48]
Xx_3682: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_3683: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_3684: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3685: MUL QWORD PTR [RBP+0x50]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x50]
Xx_3686: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_3687: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_3688: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3689: MUL QWORD PTR [RBP+0x58]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x58]
Xx_3690: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_3691: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_3692: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_3693: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_3694: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_3695: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_3696: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_3697: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_3698: MOV [RSP+-0x2e0], R11           # mul_add_slow:266                   MOV [RSP+-0x2e0], `mul_low_0
Xx_3699: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_3700: MOV [RSP+-0x2d8], R12           # mul_add_slow:266                   MOV [RSP+-0x2d8], `mul_low_1
Xx_3701: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_3702: MOV [RSP+-0x2d0], R13           # mul_add_slow:266                   MOV [RSP+-0x2d0], `mul_low_2
Xx_3703: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_3704: MOV [RSP+-0x2c8], RAX           # mul_add_slow:266                   MOV [RSP+-0x2c8], `mul_low_3
Xx_3705: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3706: MUL QWORD PTR [RBP+0x60]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x60]
Xx_3707: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_3708: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_3709: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3710: MUL QWORD PTR [RBP+0x68]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x68]
Xx_3711: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_3712: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_3713: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3714: MUL QWORD PTR [RBP+0x70]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x70]
Xx_3715: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_3716: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_3717: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3718: MUL QWORD PTR [RBP+0x78]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x78]
Xx_3719: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_3720: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_3721: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_3722: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_3723: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_3724: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_3725: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_3726: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_3727: MOV [RSP+-0x2c0], R11           # mul_add_slow:266                   MOV [RSP+-0x2c0], `mul_low_0
Xx_3728: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_3729: MOV [RSP+-0x2b8], R12           # mul_add_slow:266                   MOV [RSP+-0x2b8], `mul_low_1
Xx_3730: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_3731: MOV [RSP+-0x2b0], R13           # mul_add_slow:266                   MOV [RSP+-0x2b0], `mul_low_2
Xx_3732: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_3733: MOV [RSP+-0x2a8], RAX           # mul_add_slow:266                   MOV [RSP+-0x2a8], `mul_low_3
Xx_3734: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3735: MUL QWORD PTR [RBP+0x80]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x80]
Xx_3736: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_3737: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_3738: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3739: MUL QWORD PTR [RBP+0x88]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x88]
Xx_3740: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_3741: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_3742: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3743: MUL QWORD PTR [RBP+0x90]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x90]
Xx_3744: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_3745: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_3746: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3747: MUL QWORD PTR [RBP+0x98]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x98]
Xx_3748: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_3749: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_3750: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_3751: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_3752: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_3753: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_3754: MOV [RSP+-0x2a0], R11           # mul_add_slow:266                   MOV [RSP+-0x2a0], `mul_low_0
Xx_3755: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_3756: MOV [RSP+-0x298], R12           # mul_add_slow:266                   MOV [RSP+-0x298], `mul_low_1
Xx_3757: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_3758: MOV [RSP+-0x290], R13           # mul_add_slow:266                   MOV [RSP+-0x290], `mul_low_2
Xx_3759: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_3760: MOV [RSP+-0x288], RAX           # mul_add_slow:266                   MOV [RSP+-0x288], `mul_low_3
Xx_3761: MOV RDI, [RSP+-0x340]           # gcd_unsigned:608                   MOV `tmp, `spill_mod_u_1
Xx_3762: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3763: MUL QWORD PTR [RBX+0x0]         # mul_add_slow:208                   MUL QWORD PTR [RBX+0x0]
Xx_3764: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_3765: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_3766: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3767: MUL QWORD PTR [RBX+0x8]         # mul_add_slow:208                   MUL QWORD PTR [RBX+0x8]
Xx_3768: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_3769: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_3770: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3771: MUL QWORD PTR [RBX+0x10]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x10]
Xx_3772: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_3773: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_3774: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3775: MUL QWORD PTR [RBX+0x18]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x18]
Xx_3776: ADD R12, R14                    # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
Xx_3777: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_3778: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_3779: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_3780: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_3781: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_3782: MOV [RSP+-0x280], R11           # mul_add_slow:266                   MOV [RSP+-0x280], `mul_low_0
Xx_3783: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_3784: MOV [RSP+-0x278], R12           # mul_add_slow:266                   MOV [RSP+-0x278], `mul_low_1
Xx_3785: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_3786: MOV [RSP+-0x270], R13           # mul_add_slow:266                   MOV [RSP+-0x270], `mul_low_2
Xx_3787: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_3788: MOV [RSP+-0x268], RAX           # mul_add_slow:266                   MOV [RSP+-0x268], `mul_low_3
Xx_3789: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3790: MUL QWORD PTR [RBX+0x20]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x20]
Xx_3791: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_3792: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_3793: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3794: MUL QWORD PTR [RBX+0x28]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x28]
Xx_3795: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_3796: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_3797: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3798: MUL QWORD PTR [RBX+0x30]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x30]
Xx_3799: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_3800: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_3801: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3802: MUL QWORD PTR [RBX+0x38]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x38]
Xx_3803: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_3804: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_3805: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_3806: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_3807: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_3808: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_3809: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_3810: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_3811: MOV [RSP+-0x260], R11           # mul_add_slow:266                   MOV [RSP+-0x260], `mul_low_0
Xx_3812: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_3813: MOV [RSP+-0x258], R12           # mul_add_slow:266                   MOV [RSP+-0x258], `mul_low_1
Xx_3814: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_3815: MOV [RSP+-0x250], R13           # mul_add_slow:266                   MOV [RSP+-0x250], `mul_low_2
Xx_3816: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_3817: MOV [RSP+-0x248], RAX           # mul_add_slow:266                   MOV [RSP+-0x248], `mul_low_3
Xx_3818: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3819: MUL QWORD PTR [RBX+0x40]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x40]
Xx_3820: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_3821: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_3822: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3823: MUL QWORD PTR [RBX+0x48]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x48]
Xx_3824: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_3825: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_3826: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3827: MUL QWORD PTR [RBX+0x50]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x50]
Xx_3828: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_3829: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_3830: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3831: MUL QWORD PTR [RBX+0x58]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x58]
Xx_3832: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_3833: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_3834: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_3835: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_3836: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_3837: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_3838: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_3839: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_3840: MOV [RSP+-0x240], R11           # mul_add_slow:266                   MOV [RSP+-0x240], `mul_low_0
Xx_3841: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_3842: MOV [RSP+-0x238], R12           # mul_add_slow:266                   MOV [RSP+-0x238], `mul_low_1
Xx_3843: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_3844: MOV [RSP+-0x230], R13           # mul_add_slow:266                   MOV [RSP+-0x230], `mul_low_2
Xx_3845: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_3846: MOV [RSP+-0x228], RAX           # mul_add_slow:266                   MOV [RSP+-0x228], `mul_low_3
Xx_3847: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3848: MUL QWORD PTR [RBX+0x60]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x60]
Xx_3849: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_3850: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_3851: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3852: MUL QWORD PTR [RBX+0x68]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x68]
Xx_3853: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_3854: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_3855: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3856: MUL QWORD PTR [RBX+0x70]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x70]
Xx_3857: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_3858: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_3859: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3860: MUL QWORD PTR [RBX+0x78]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x78]
Xx_3861: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_3862: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_3863: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_3864: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_3865: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_3866: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_3867: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_3868: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_3869: MOV [RSP+-0x220], R11           # mul_add_slow:266                   MOV [RSP+-0x220], `mul_low_0
Xx_3870: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_3871: MOV [RSP+-0x218], R12           # mul_add_slow:266                   MOV [RSP+-0x218], `mul_low_1
Xx_3872: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_3873: MOV [RSP+-0x210], R13           # mul_add_slow:266                   MOV [RSP+-0x210], `mul_low_2
Xx_3874: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_3875: MOV [RSP+-0x208], RAX           # mul_add_slow:266                   MOV [RSP+-0x208], `mul_low_3
Xx_3876: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3877: MUL QWORD PTR [RBX+0x80]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x80]
Xx_3878: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_3879: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_3880: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3881: MUL QWORD PTR [RBX+0x88]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x88]
Xx_3882: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_3883: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_3884: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3885: MUL QWORD PTR [RBX+0x90]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x90]
Xx_3886: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_3887: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_3888: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3889: MUL QWORD PTR [RBX+0x98]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x98]
Xx_3890: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_3891: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_3892: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_3893: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_3894: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_3895: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_3896: MOV [RSP+-0x200], R11           # mul_add_slow:266                   MOV [RSP+-0x200], `mul_low_0
Xx_3897: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_3898: MOV [RSP+-0x1f8], R12           # mul_add_slow:266                   MOV [RSP+-0x1f8], `mul_low_1
Xx_3899: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_3900: MOV [RSP+-0x1f0], R13           # mul_add_slow:266                   MOV [RSP+-0x1f0], `mul_low_2
Xx_3901: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_3902: MOV [RSP+-0x1e8], RAX           # mul_add_slow:266                   MOV [RSP+-0x1e8], `mul_low_3
Xx_3903: MOV RDI, [RSP+-0x348]           # gcd_unsigned:612                   MOV `tmp, `spill_mod_u_0
Xx_3904: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3905: MUL QWORD PTR [RBX+0x0]         # mul_add_slow:208                   MUL QWORD PTR [RBX+0x0]
Xx_3906: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_3907: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_3908: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3909: MUL QWORD PTR [RBX+0x8]         # mul_add_slow:208                   MUL QWORD PTR [RBX+0x8]
Xx_3910: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_3911: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_3912: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3913: MUL QWORD PTR [RBX+0x10]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x10]
Xx_3914: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_3915: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_3916: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3917: MUL QWORD PTR [RBX+0x18]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x18]
Xx_3918: ADD R12, R14                    # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
Xx_3919: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_3920: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_3921: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_3922: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_3923: STC                             # mul_add_slow:243                   STC
Xx_3924: ADC R11, [RSP+-0x320]           # mul_add_slow:244                   ADC `mul_low_0, [RSP+-0x320]
Xx_3925: ADC R12, [RSP+-0x318]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x318]
Xx_3926: ADC R13, [RSP+-0x310]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x310]
Xx_3927: ADC RAX, [RSP+-0x308]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x308]
Xx_3928: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_3929: MOV [RSI+0x0], R11              # mul_add_slow:266                   MOV [RSI+0x0], `mul_low_0
Xx_3930: MOV [RSI+0x8], R12              # mul_add_slow:266                   MOV [RSI+0x8], `mul_low_1
Xx_3931: MOV [RSI+0x10], R13             # mul_add_slow:266                   MOV [RSI+0x10], `mul_low_2
Xx_3932: MOV [RSI+0x18], RAX             # mul_add_slow:266                   MOV [RSI+0x18], `mul_low_3
Xx_3933: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3934: MUL QWORD PTR [RBX+0x20]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x20]
Xx_3935: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_3936: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_3937: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3938: MUL QWORD PTR [RBX+0x28]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x28]
Xx_3939: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_3940: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_3941: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3942: MUL QWORD PTR [RBX+0x30]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x30]
Xx_3943: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_3944: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_3945: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3946: MUL QWORD PTR [RBX+0x38]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x38]
Xx_3947: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_3948: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_3949: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_3950: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_3951: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_3952: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_3953: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_3954: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_3955: ADC R11, [RSP+-0x300]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x300]
Xx_3956: ADC R12, [RSP+-0x2f8]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x2f8]
Xx_3957: ADC R13, [RSP+-0x2f0]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x2f0]
Xx_3958: ADC RAX, [RSP+-0x2e8]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x2e8]
Xx_3959: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_3960: MOV [RSI+0x20], R11             # mul_add_slow:266                   MOV [RSI+0x20], `mul_low_0
Xx_3961: MOV [RSI+0x28], R12             # mul_add_slow:266                   MOV [RSI+0x28], `mul_low_1
Xx_3962: MOV [RSI+0x30], R13             # mul_add_slow:266                   MOV [RSI+0x30], `mul_low_2
Xx_3963: MOV [RSI+0x38], RAX             # mul_add_slow:266                   MOV [RSI+0x38], `mul_low_3
Xx_3964: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3965: MUL QWORD PTR [RBX+0x40]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x40]
Xx_3966: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_3967: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_3968: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3969: MUL QWORD PTR [RBX+0x48]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x48]
Xx_3970: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_3971: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_3972: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3973: MUL QWORD PTR [RBX+0x50]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x50]
Xx_3974: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_3975: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_3976: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3977: MUL QWORD PTR [RBX+0x58]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x58]
Xx_3978: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_3979: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_3980: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_3981: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_3982: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_3983: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_3984: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_3985: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_3986: ADC R11, [RSP+-0x2e0]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x2e0]
Xx_3987: ADC R12, [RSP+-0x2d8]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x2d8]
Xx_3988: ADC R13, [RSP+-0x2d0]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x2d0]
Xx_3989: ADC RAX, [RSP+-0x2c8]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x2c8]
Xx_3990: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_3991: MOV [RSI+0x40], R11             # mul_add_slow:266                   MOV [RSI+0x40], `mul_low_0
Xx_3992: MOV [RSI+0x48], R12             # mul_add_slow:266                   MOV [RSI+0x48], `mul_low_1
Xx_3993: MOV [RSI+0x50], R13             # mul_add_slow:266                   MOV [RSI+0x50], `mul_low_2
Xx_3994: MOV [RSI+0x58], RAX             # mul_add_slow:266                   MOV [RSI+0x58], `mul_low_3
Xx_3995: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_3996: MUL QWORD PTR [RBX+0x60]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x60]
Xx_3997: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_3998: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_3999: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4000: MUL QWORD PTR [RBX+0x68]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x68]
Xx_4001: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_4002: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_4003: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4004: MUL QWORD PTR [RBX+0x70]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x70]
Xx_4005: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_4006: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_4007: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4008: MUL QWORD PTR [RBX+0x78]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x78]
Xx_4009: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_4010: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_4011: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_4012: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_4013: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_4014: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_4015: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_4016: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_4017: ADC R11, [RSP+-0x2c0]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x2c0]
Xx_4018: ADC R12, [RSP+-0x2b8]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x2b8]
Xx_4019: ADC R13, [RSP+-0x2b0]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x2b0]
Xx_4020: ADC RAX, [RSP+-0x2a8]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x2a8]
Xx_4021: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_4022: MOV [RSI+0x60], R11             # mul_add_slow:266                   MOV [RSI+0x60], `mul_low_0
Xx_4023: MOV [RSI+0x68], R12             # mul_add_slow:266                   MOV [RSI+0x68], `mul_low_1
Xx_4024: MOV [RSI+0x70], R13             # mul_add_slow:266                   MOV [RSI+0x70], `mul_low_2
Xx_4025: MOV [RSI+0x78], RAX             # mul_add_slow:266                   MOV [RSI+0x78], `mul_low_3
Xx_4026: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4027: MUL QWORD PTR [RBX+0x80]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x80]
Xx_4028: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_4029: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_4030: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4031: MUL QWORD PTR [RBX+0x88]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x88]
Xx_4032: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_4033: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_4034: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4035: MUL QWORD PTR [RBX+0x90]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x90]
Xx_4036: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_4037: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_4038: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4039: MUL QWORD PTR [RBX+0x98]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x98]
Xx_4040: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_4041: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_4042: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_4043: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_4044: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_4045: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_4046: ADC R11, [RSP+-0x2a0]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x2a0]
Xx_4047: ADC R12, [RSP+-0x298]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x298]
Xx_4048: ADC R13, [RSP+-0x290]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x290]
Xx_4049: ADC RAX, [RSP+-0x288]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x288]
Xx_4050: MOV [RSI+0x80], R11             # mul_add_slow:266                   MOV [RSI+0x80], `mul_low_0
Xx_4051: MOV [RSI+0x88], R12             # mul_add_slow:266                   MOV [RSI+0x88], `mul_low_1
Xx_4052: MOV [RSI+0x90], R13             # mul_add_slow:266                   MOV [RSI+0x90], `mul_low_2
Xx_4053: MOV [RSI+0x98], RAX             # mul_add_slow:266                   MOV [RSI+0x98], `mul_low_3
Xx_4054: MOV RSI, [RSP+-0x328]           # gcd_unsigned:616                   MOV `addr_new, `spill_addr_b_new
Xx_4055: MOV RDI, [RSP+-0x330]           # gcd_unsigned:617                   MOV `tmp, `spill_mod_v_1
Xx_4056: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4057: MUL QWORD PTR [RBP+0x0]         # mul_add_slow:208                   MUL QWORD PTR [RBP+0x0]
Xx_4058: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_4059: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_4060: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4061: MUL QWORD PTR [RBP+0x8]         # mul_add_slow:208                   MUL QWORD PTR [RBP+0x8]
Xx_4062: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_4063: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_4064: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4065: MUL QWORD PTR [RBP+0x10]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x10]
Xx_4066: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_4067: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_4068: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4069: MUL QWORD PTR [RBP+0x18]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x18]
Xx_4070: ADD R12, R14                    # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
Xx_4071: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_4072: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_4073: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_4074: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_4075: STC                             # mul_add_slow:243                   STC
Xx_4076: ADC R11, [RSP+-0x280]           # mul_add_slow:244                   ADC `mul_low_0, [RSP+-0x280]
Xx_4077: ADC R12, [RSP+-0x278]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x278]
Xx_4078: ADC R13, [RSP+-0x270]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x270]
Xx_4079: ADC RAX, [RSP+-0x268]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x268]
Xx_4080: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_4081: MOV [RSI+0x0], R11              # mul_add_slow:266                   MOV [RSI+0x0], `mul_low_0
Xx_4082: MOV [RSI+0x8], R12              # mul_add_slow:266                   MOV [RSI+0x8], `mul_low_1
Xx_4083: MOV [RSI+0x10], R13             # mul_add_slow:266                   MOV [RSI+0x10], `mul_low_2
Xx_4084: MOV [RSI+0x18], RAX             # mul_add_slow:266                   MOV [RSI+0x18], `mul_low_3
Xx_4085: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4086: MUL QWORD PTR [RBP+0x20]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x20]
Xx_4087: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_4088: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_4089: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4090: MUL QWORD PTR [RBP+0x28]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x28]
Xx_4091: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_4092: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_4093: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4094: MUL QWORD PTR [RBP+0x30]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x30]
Xx_4095: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_4096: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_4097: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4098: MUL QWORD PTR [RBP+0x38]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x38]
Xx_4099: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_4100: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_4101: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_4102: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_4103: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_4104: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_4105: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_4106: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_4107: ADC R11, [RSP+-0x260]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x260]
Xx_4108: ADC R12, [RSP+-0x258]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x258]
Xx_4109: ADC R13, [RSP+-0x250]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x250]
Xx_4110: ADC RAX, [RSP+-0x248]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x248]
Xx_4111: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_4112: MOV [RSI+0x20], R11             # mul_add_slow:266                   MOV [RSI+0x20], `mul_low_0
Xx_4113: MOV [RSI+0x28], R12             # mul_add_slow:266                   MOV [RSI+0x28], `mul_low_1
Xx_4114: MOV [RSI+0x30], R13             # mul_add_slow:266                   MOV [RSI+0x30], `mul_low_2
Xx_4115: MOV [RSI+0x38], RAX             # mul_add_slow:266                   MOV [RSI+0x38], `mul_low_3
Xx_4116: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4117: MUL QWORD PTR [RBP+0x40]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x40]
Xx_4118: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_4119: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_4120: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4121: MUL QWORD PTR [RBP+0x48]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x48]
Xx_4122: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_4123: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_4124: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4125: MUL QWORD PTR [RBP+0x50]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x50]
Xx_4126: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_4127: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_4128: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4129: MUL QWORD PTR [RBP+0x58]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x58]
Xx_4130: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_4131: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_4132: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_4133: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_4134: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_4135: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_4136: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_4137: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_4138: ADC R11, [RSP+-0x240]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x240]
Xx_4139: ADC R12, [RSP+-0x238]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x238]
Xx_4140: ADC R13, [RSP+-0x230]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x230]
Xx_4141: ADC RAX, [RSP+-0x228]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x228]
Xx_4142: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_4143: MOV [RSI+0x40], R11             # mul_add_slow:266                   MOV [RSI+0x40], `mul_low_0
Xx_4144: MOV [RSI+0x48], R12             # mul_add_slow:266                   MOV [RSI+0x48], `mul_low_1
Xx_4145: MOV [RSI+0x50], R13             # mul_add_slow:266                   MOV [RSI+0x50], `mul_low_2
Xx_4146: MOV [RSI+0x58], RAX             # mul_add_slow:266                   MOV [RSI+0x58], `mul_low_3
Xx_4147: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4148: MUL QWORD PTR [RBP+0x60]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x60]
Xx_4149: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_4150: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_4151: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4152: MUL QWORD PTR [RBP+0x68]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x68]
Xx_4153: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_4154: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_4155: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4156: MUL QWORD PTR [RBP+0x70]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x70]
Xx_4157: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_4158: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_4159: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4160: MUL QWORD PTR [RBP+0x78]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x78]
Xx_4161: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_4162: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_4163: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_4164: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_4165: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_4166: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_4167: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_4168: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_4169: ADC R11, [RSP+-0x220]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x220]
Xx_4170: ADC R12, [RSP+-0x218]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x218]
Xx_4171: ADC R13, [RSP+-0x210]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x210]
Xx_4172: ADC RAX, [RSP+-0x208]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x208]
Xx_4173: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_4174: MOV [RSI+0x60], R11             # mul_add_slow:266                   MOV [RSI+0x60], `mul_low_0
Xx_4175: MOV [RSI+0x68], R12             # mul_add_slow:266                   MOV [RSI+0x68], `mul_low_1
Xx_4176: MOV [RSI+0x70], R13             # mul_add_slow:266                   MOV [RSI+0x70], `mul_low_2
Xx_4177: MOV [RSI+0x78], RAX             # mul_add_slow:266                   MOV [RSI+0x78], `mul_low_3
Xx_4178: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4179: MUL QWORD PTR [RBP+0x80]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x80]
Xx_4180: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_4181: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_4182: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4183: MUL QWORD PTR [RBP+0x88]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x88]
Xx_4184: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_4185: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_4186: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4187: MUL QWORD PTR [RBP+0x90]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x90]
Xx_4188: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_4189: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_4190: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4191: MUL QWORD PTR [RBP+0x98]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x98]
Xx_4192: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_4193: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_4194: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_4195: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_4196: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_4197: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_4198: ADC R11, [RSP+-0x200]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x200]
Xx_4199: ADC R12, [RSP+-0x1f8]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x1f8]
Xx_4200: ADC R13, [RSP+-0x1f0]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x1f0]
Xx_4201: ADC RAX, [RSP+-0x1e8]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x1e8]
Xx_4202: MOV [RSI+0x80], R11             # mul_add_slow:266                   MOV [RSI+0x80], `mul_low_0
Xx_4203: MOV [RSI+0x88], R12             # mul_add_slow:266                   MOV [RSI+0x88], `mul_low_1
Xx_4204: MOV [RSI+0x90], R13             # mul_add_slow:266                   MOV [RSI+0x90], `mul_low_2
Xx_4205: MOV [RSI+0x98], RAX             # mul_add_slow:266                   MOV [RSI+0x98], `mul_low_3
Xx_4206: JMP _label_45                   # gcd_unsigned:620                   JMP _label_45
Xx_4207: multiply_uv_size_16:            # gcd_unsigned:490                   multiply_uv_size_16:
Xx_4208: MOV RDI, [RSP+-0x388]           # gcd_unsigned:531                   MOV `tmp, `spill_parity
Xx_4209: CMP RDI, 0                      # gcd_unsigned:532                   CMP `tmp, 0
Xx_4210: MOV RBX, [RSP+-0x3a8]           # gcd_unsigned:535                   MOV `addr_a, `spill_u_0
Xx_4211: MOV RBP, [RSP+-0x398]           # gcd_unsigned:536                   MOV `addr_b, `spill_v_0
Xx_4212: MOV RSI, RBX                    # gcd_unsigned:539                   MOV `addr_new, `addr_a
Xx_4213: CMOVNE RBX, RBP                 # gcd_unsigned:540                   CMOVNE `addr_a, `addr_b
Xx_4214: CMOVNE RBP, RSI                 # gcd_unsigned:541                   CMOVNE `addr_b, `addr_new
Xx_4215: MOV [RSP+-0x348], RBX           # gcd_unsigned:543                   MOV `spill_mod_u_0, `addr_a
Xx_4216: MOV [RSP+-0x338], RBP           # gcd_unsigned:544                   MOV `spill_mod_v_0, `addr_b
Xx_4217: MOV RBX, [RSP+-0x3a0]           # gcd_unsigned:535                   MOV `addr_a, `spill_u_1
Xx_4218: MOV RBP, [RSP+-0x390]           # gcd_unsigned:536                   MOV `addr_b, `spill_v_1
Xx_4219: MOV RSI, RBX                    # gcd_unsigned:539                   MOV `addr_new, `addr_a
Xx_4220: CMOVNE RBX, RBP                 # gcd_unsigned:540                   CMOVNE `addr_a, `addr_b
Xx_4221: CMOVNE RBP, RSI                 # gcd_unsigned:541                   CMOVNE `addr_b, `addr_new
Xx_4222: MOV [RSP+-0x340], RBX           # gcd_unsigned:543                   MOV `spill_mod_u_1, `addr_a
Xx_4223: MOV [RSP+-0x330], RBP           # gcd_unsigned:544                   MOV `spill_mod_v_1, `addr_b
Xx_4224: MOV RSI, [RSP+-0x3b8]           # gcd_unsigned:547                   MOV `addr_new, `spill_iter
Xx_4225: TEST RSI, 1                     # gcd_unsigned:548                   TEST `addr_new, 1
Xx_4226: MOV RBX, [RSP+-0x3f8]           # gcd_unsigned:551                   MOV `addr_a, `spill_a_addr_base
Xx_4227: CMOVNZ RBX, [RSP+-0x3e8]        # gcd_unsigned:552                   CMOVNZ `addr_a, `spill_a_2_addr_base
Xx_4228: MOV RBP, [RSP+-0x3f0]           # gcd_unsigned:555                   MOV `addr_b, `spill_b_addr_base
Xx_4229: CMOVNZ RBP, [RSP+-0x3e0]        # gcd_unsigned:556                   CMOVNZ `addr_b, `spill_b_2_addr_base
Xx_4230: CMP RDI, 0                      # gcd_unsigned:559                   CMP `tmp, 0
Xx_4231: MOV RSI, RBX                    # gcd_unsigned:560                   MOV `addr_new, `addr_a
Xx_4232: CMOVNE RBX, RBP                 # gcd_unsigned:561                   CMOVNE `addr_a, `addr_b
Xx_4233: CMOVNE RBP, RSI                 # gcd_unsigned:562                   CMOVNE `addr_b, `addr_new
Xx_4234: MOV RSI, [RSP+-0x3b8]           # gcd_unsigned:567                   MOV `addr_new, `spill_iter
Xx_4235: TEST RSI, 1                     # gcd_unsigned:568                   TEST `addr_new, 1
Xx_4236: MOV RSI, [RSP+-0x3e0]           # gcd_unsigned:569                   MOV `addr_new, `spill_b_2_addr_base
Xx_4237: CMOVNZ RSI, [RSP+-0x3f0]        # gcd_unsigned:570                   CMOVNZ `addr_new, `spill_b_addr_base
Xx_4238: MOV [RSP+-0x328], RSI           # gcd_unsigned:571                   MOV `spill_addr_b_new, `addr_new
Xx_4239: MOV RSI, [RSP+-0x3e8]           # gcd_unsigned:574                   MOV `addr_new, `spill_a_2_addr_base
Xx_4240: CMOVNZ RSI, [RSP+-0x3f8]        # gcd_unsigned:575                   CMOVNZ `addr_new, `spill_a_addr_base
Xx_4241: MOV RDI, [RSP+-0x338]           # gcd_unsigned:604                   MOV `tmp, `spill_mod_v_0
Xx_4242: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4243: MUL QWORD PTR [RBP+0x0]         # mul_add_slow:208                   MUL QWORD PTR [RBP+0x0]
Xx_4244: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_4245: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_4246: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4247: MUL QWORD PTR [RBP+0x8]         # mul_add_slow:208                   MUL QWORD PTR [RBP+0x8]
Xx_4248: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_4249: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_4250: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4251: MUL QWORD PTR [RBP+0x10]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x10]
Xx_4252: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_4253: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_4254: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4255: MUL QWORD PTR [RBP+0x18]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x18]
Xx_4256: ADD R12, R14                    # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
Xx_4257: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_4258: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_4259: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_4260: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_4261: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_4262: MOV [RSP+-0x320], R11           # mul_add_slow:266                   MOV [RSP+-0x320], `mul_low_0
Xx_4263: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_4264: MOV [RSP+-0x318], R12           # mul_add_slow:266                   MOV [RSP+-0x318], `mul_low_1
Xx_4265: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_4266: MOV [RSP+-0x310], R13           # mul_add_slow:266                   MOV [RSP+-0x310], `mul_low_2
Xx_4267: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_4268: MOV [RSP+-0x308], RAX           # mul_add_slow:266                   MOV [RSP+-0x308], `mul_low_3
Xx_4269: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4270: MUL QWORD PTR [RBP+0x20]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x20]
Xx_4271: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_4272: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_4273: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4274: MUL QWORD PTR [RBP+0x28]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x28]
Xx_4275: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_4276: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_4277: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4278: MUL QWORD PTR [RBP+0x30]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x30]
Xx_4279: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_4280: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_4281: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4282: MUL QWORD PTR [RBP+0x38]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x38]
Xx_4283: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_4284: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_4285: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_4286: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_4287: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_4288: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_4289: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_4290: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_4291: MOV [RSP+-0x300], R11           # mul_add_slow:266                   MOV [RSP+-0x300], `mul_low_0
Xx_4292: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_4293: MOV [RSP+-0x2f8], R12           # mul_add_slow:266                   MOV [RSP+-0x2f8], `mul_low_1
Xx_4294: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_4295: MOV [RSP+-0x2f0], R13           # mul_add_slow:266                   MOV [RSP+-0x2f0], `mul_low_2
Xx_4296: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_4297: MOV [RSP+-0x2e8], RAX           # mul_add_slow:266                   MOV [RSP+-0x2e8], `mul_low_3
Xx_4298: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4299: MUL QWORD PTR [RBP+0x40]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x40]
Xx_4300: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_4301: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_4302: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4303: MUL QWORD PTR [RBP+0x48]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x48]
Xx_4304: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_4305: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_4306: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4307: MUL QWORD PTR [RBP+0x50]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x50]
Xx_4308: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_4309: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_4310: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4311: MUL QWORD PTR [RBP+0x58]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x58]
Xx_4312: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_4313: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_4314: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_4315: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_4316: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_4317: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_4318: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_4319: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_4320: MOV [RSP+-0x2e0], R11           # mul_add_slow:266                   MOV [RSP+-0x2e0], `mul_low_0
Xx_4321: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_4322: MOV [RSP+-0x2d8], R12           # mul_add_slow:266                   MOV [RSP+-0x2d8], `mul_low_1
Xx_4323: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_4324: MOV [RSP+-0x2d0], R13           # mul_add_slow:266                   MOV [RSP+-0x2d0], `mul_low_2
Xx_4325: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_4326: MOV [RSP+-0x2c8], RAX           # mul_add_slow:266                   MOV [RSP+-0x2c8], `mul_low_3
Xx_4327: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4328: MUL QWORD PTR [RBP+0x60]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x60]
Xx_4329: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_4330: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_4331: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4332: MUL QWORD PTR [RBP+0x68]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x68]
Xx_4333: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_4334: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_4335: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4336: MUL QWORD PTR [RBP+0x70]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x70]
Xx_4337: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_4338: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_4339: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4340: MUL QWORD PTR [RBP+0x78]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x78]
Xx_4341: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_4342: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_4343: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_4344: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_4345: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_4346: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_4347: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_4348: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_4349: MOV [RSP+-0x2c0], R11           # mul_add_slow:266                   MOV [RSP+-0x2c0], `mul_low_0
Xx_4350: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_4351: MOV [RSP+-0x2b8], R12           # mul_add_slow:266                   MOV [RSP+-0x2b8], `mul_low_1
Xx_4352: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_4353: MOV [RSP+-0x2b0], R13           # mul_add_slow:266                   MOV [RSP+-0x2b0], `mul_low_2
Xx_4354: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_4355: MOV [RSP+-0x2a8], RAX           # mul_add_slow:266                   MOV [RSP+-0x2a8], `mul_low_3
Xx_4356: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4357: MUL QWORD PTR [RBP+0x80]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x80]
Xx_4358: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_4359: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_4360: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4361: MUL QWORD PTR [RBP+0x88]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x88]
Xx_4362: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_4363: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_4364: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4365: MUL QWORD PTR [RBP+0x90]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x90]
Xx_4366: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_4367: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_4368: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4369: MUL QWORD PTR [RBP+0x98]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x98]
Xx_4370: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_4371: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_4372: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_4373: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_4374: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_4375: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_4376: MOV [RSP+-0x2a0], R11           # mul_add_slow:266                   MOV [RSP+-0x2a0], `mul_low_0
Xx_4377: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_4378: MOV [RSP+-0x298], R12           # mul_add_slow:266                   MOV [RSP+-0x298], `mul_low_1
Xx_4379: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_4380: MOV [RSP+-0x290], R13           # mul_add_slow:266                   MOV [RSP+-0x290], `mul_low_2
Xx_4381: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_4382: MOV [RSP+-0x288], RAX           # mul_add_slow:266                   MOV [RSP+-0x288], `mul_low_3
Xx_4383: MOV RDI, [RSP+-0x340]           # gcd_unsigned:608                   MOV `tmp, `spill_mod_u_1
Xx_4384: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4385: MUL QWORD PTR [RBX+0x0]         # mul_add_slow:208                   MUL QWORD PTR [RBX+0x0]
Xx_4386: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_4387: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_4388: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4389: MUL QWORD PTR [RBX+0x8]         # mul_add_slow:208                   MUL QWORD PTR [RBX+0x8]
Xx_4390: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_4391: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_4392: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4393: MUL QWORD PTR [RBX+0x10]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x10]
Xx_4394: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_4395: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_4396: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4397: MUL QWORD PTR [RBX+0x18]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x18]
Xx_4398: ADD R12, R14                    # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
Xx_4399: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_4400: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_4401: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_4402: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_4403: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_4404: MOV [RSP+-0x280], R11           # mul_add_slow:266                   MOV [RSP+-0x280], `mul_low_0
Xx_4405: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_4406: MOV [RSP+-0x278], R12           # mul_add_slow:266                   MOV [RSP+-0x278], `mul_low_1
Xx_4407: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_4408: MOV [RSP+-0x270], R13           # mul_add_slow:266                   MOV [RSP+-0x270], `mul_low_2
Xx_4409: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_4410: MOV [RSP+-0x268], RAX           # mul_add_slow:266                   MOV [RSP+-0x268], `mul_low_3
Xx_4411: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4412: MUL QWORD PTR [RBX+0x20]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x20]
Xx_4413: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_4414: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_4415: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4416: MUL QWORD PTR [RBX+0x28]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x28]
Xx_4417: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_4418: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_4419: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4420: MUL QWORD PTR [RBX+0x30]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x30]
Xx_4421: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_4422: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_4423: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4424: MUL QWORD PTR [RBX+0x38]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x38]
Xx_4425: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_4426: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_4427: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_4428: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_4429: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_4430: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_4431: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_4432: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_4433: MOV [RSP+-0x260], R11           # mul_add_slow:266                   MOV [RSP+-0x260], `mul_low_0
Xx_4434: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_4435: MOV [RSP+-0x258], R12           # mul_add_slow:266                   MOV [RSP+-0x258], `mul_low_1
Xx_4436: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_4437: MOV [RSP+-0x250], R13           # mul_add_slow:266                   MOV [RSP+-0x250], `mul_low_2
Xx_4438: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_4439: MOV [RSP+-0x248], RAX           # mul_add_slow:266                   MOV [RSP+-0x248], `mul_low_3
Xx_4440: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4441: MUL QWORD PTR [RBX+0x40]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x40]
Xx_4442: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_4443: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_4444: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4445: MUL QWORD PTR [RBX+0x48]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x48]
Xx_4446: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_4447: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_4448: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4449: MUL QWORD PTR [RBX+0x50]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x50]
Xx_4450: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_4451: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_4452: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4453: MUL QWORD PTR [RBX+0x58]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x58]
Xx_4454: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_4455: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_4456: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_4457: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_4458: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_4459: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_4460: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_4461: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_4462: MOV [RSP+-0x240], R11           # mul_add_slow:266                   MOV [RSP+-0x240], `mul_low_0
Xx_4463: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_4464: MOV [RSP+-0x238], R12           # mul_add_slow:266                   MOV [RSP+-0x238], `mul_low_1
Xx_4465: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_4466: MOV [RSP+-0x230], R13           # mul_add_slow:266                   MOV [RSP+-0x230], `mul_low_2
Xx_4467: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_4468: MOV [RSP+-0x228], RAX           # mul_add_slow:266                   MOV [RSP+-0x228], `mul_low_3
Xx_4469: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4470: MUL QWORD PTR [RBX+0x60]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x60]
Xx_4471: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_4472: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_4473: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4474: MUL QWORD PTR [RBX+0x68]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x68]
Xx_4475: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_4476: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_4477: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4478: MUL QWORD PTR [RBX+0x70]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x70]
Xx_4479: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_4480: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_4481: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4482: MUL QWORD PTR [RBX+0x78]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x78]
Xx_4483: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_4484: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_4485: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_4486: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_4487: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_4488: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_4489: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_4490: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_4491: MOV [RSP+-0x220], R11           # mul_add_slow:266                   MOV [RSP+-0x220], `mul_low_0
Xx_4492: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_4493: MOV [RSP+-0x218], R12           # mul_add_slow:266                   MOV [RSP+-0x218], `mul_low_1
Xx_4494: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_4495: MOV [RSP+-0x210], R13           # mul_add_slow:266                   MOV [RSP+-0x210], `mul_low_2
Xx_4496: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_4497: MOV [RSP+-0x208], RAX           # mul_add_slow:266                   MOV [RSP+-0x208], `mul_low_3
Xx_4498: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4499: MUL QWORD PTR [RBX+0x80]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x80]
Xx_4500: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_4501: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_4502: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4503: MUL QWORD PTR [RBX+0x88]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x88]
Xx_4504: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_4505: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_4506: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4507: MUL QWORD PTR [RBX+0x90]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x90]
Xx_4508: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_4509: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_4510: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4511: MUL QWORD PTR [RBX+0x98]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x98]
Xx_4512: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_4513: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_4514: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_4515: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_4516: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_4517: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_4518: MOV [RSP+-0x200], R11           # mul_add_slow:266                   MOV [RSP+-0x200], `mul_low_0
Xx_4519: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_4520: MOV [RSP+-0x1f8], R12           # mul_add_slow:266                   MOV [RSP+-0x1f8], `mul_low_1
Xx_4521: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_4522: MOV [RSP+-0x1f0], R13           # mul_add_slow:266                   MOV [RSP+-0x1f0], `mul_low_2
Xx_4523: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_4524: MOV [RSP+-0x1e8], RAX           # mul_add_slow:266                   MOV [RSP+-0x1e8], `mul_low_3
Xx_4525: MOV RDI, [RSP+-0x348]           # gcd_unsigned:612                   MOV `tmp, `spill_mod_u_0
Xx_4526: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4527: MUL QWORD PTR [RBX+0x0]         # mul_add_slow:208                   MUL QWORD PTR [RBX+0x0]
Xx_4528: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_4529: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_4530: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4531: MUL QWORD PTR [RBX+0x8]         # mul_add_slow:208                   MUL QWORD PTR [RBX+0x8]
Xx_4532: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_4533: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_4534: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4535: MUL QWORD PTR [RBX+0x10]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x10]
Xx_4536: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_4537: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_4538: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4539: MUL QWORD PTR [RBX+0x18]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x18]
Xx_4540: ADD R12, R14                    # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
Xx_4541: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_4542: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_4543: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_4544: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_4545: STC                             # mul_add_slow:243                   STC
Xx_4546: ADC R11, [RSP+-0x320]           # mul_add_slow:244                   ADC `mul_low_0, [RSP+-0x320]
Xx_4547: ADC R12, [RSP+-0x318]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x318]
Xx_4548: ADC R13, [RSP+-0x310]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x310]
Xx_4549: ADC RAX, [RSP+-0x308]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x308]
Xx_4550: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_4551: MOV [RSI+0x0], R11              # mul_add_slow:266                   MOV [RSI+0x0], `mul_low_0
Xx_4552: MOV [RSI+0x8], R12              # mul_add_slow:266                   MOV [RSI+0x8], `mul_low_1
Xx_4553: MOV [RSI+0x10], R13             # mul_add_slow:266                   MOV [RSI+0x10], `mul_low_2
Xx_4554: MOV [RSI+0x18], RAX             # mul_add_slow:266                   MOV [RSI+0x18], `mul_low_3
Xx_4555: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4556: MUL QWORD PTR [RBX+0x20]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x20]
Xx_4557: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_4558: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_4559: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4560: MUL QWORD PTR [RBX+0x28]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x28]
Xx_4561: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_4562: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_4563: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4564: MUL QWORD PTR [RBX+0x30]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x30]
Xx_4565: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_4566: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_4567: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4568: MUL QWORD PTR [RBX+0x38]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x38]
Xx_4569: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_4570: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_4571: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_4572: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_4573: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_4574: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_4575: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_4576: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_4577: ADC R11, [RSP+-0x300]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x300]
Xx_4578: ADC R12, [RSP+-0x2f8]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x2f8]
Xx_4579: ADC R13, [RSP+-0x2f0]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x2f0]
Xx_4580: ADC RAX, [RSP+-0x2e8]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x2e8]
Xx_4581: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_4582: MOV [RSI+0x20], R11             # mul_add_slow:266                   MOV [RSI+0x20], `mul_low_0
Xx_4583: MOV [RSI+0x28], R12             # mul_add_slow:266                   MOV [RSI+0x28], `mul_low_1
Xx_4584: MOV [RSI+0x30], R13             # mul_add_slow:266                   MOV [RSI+0x30], `mul_low_2
Xx_4585: MOV [RSI+0x38], RAX             # mul_add_slow:266                   MOV [RSI+0x38], `mul_low_3
Xx_4586: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4587: MUL QWORD PTR [RBX+0x40]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x40]
Xx_4588: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_4589: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_4590: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4591: MUL QWORD PTR [RBX+0x48]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x48]
Xx_4592: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_4593: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_4594: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4595: MUL QWORD PTR [RBX+0x50]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x50]
Xx_4596: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_4597: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_4598: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4599: MUL QWORD PTR [RBX+0x58]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x58]
Xx_4600: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_4601: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_4602: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_4603: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_4604: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_4605: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_4606: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_4607: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_4608: ADC R11, [RSP+-0x2e0]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x2e0]
Xx_4609: ADC R12, [RSP+-0x2d8]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x2d8]
Xx_4610: ADC R13, [RSP+-0x2d0]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x2d0]
Xx_4611: ADC RAX, [RSP+-0x2c8]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x2c8]
Xx_4612: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_4613: MOV [RSI+0x40], R11             # mul_add_slow:266                   MOV [RSI+0x40], `mul_low_0
Xx_4614: MOV [RSI+0x48], R12             # mul_add_slow:266                   MOV [RSI+0x48], `mul_low_1
Xx_4615: MOV [RSI+0x50], R13             # mul_add_slow:266                   MOV [RSI+0x50], `mul_low_2
Xx_4616: MOV [RSI+0x58], RAX             # mul_add_slow:266                   MOV [RSI+0x58], `mul_low_3
Xx_4617: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4618: MUL QWORD PTR [RBX+0x60]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x60]
Xx_4619: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_4620: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_4621: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4622: MUL QWORD PTR [RBX+0x68]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x68]
Xx_4623: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_4624: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_4625: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4626: MUL QWORD PTR [RBX+0x70]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x70]
Xx_4627: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_4628: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_4629: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4630: MUL QWORD PTR [RBX+0x78]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x78]
Xx_4631: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_4632: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_4633: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_4634: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_4635: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_4636: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_4637: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_4638: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_4639: ADC R11, [RSP+-0x2c0]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x2c0]
Xx_4640: ADC R12, [RSP+-0x2b8]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x2b8]
Xx_4641: ADC R13, [RSP+-0x2b0]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x2b0]
Xx_4642: ADC RAX, [RSP+-0x2a8]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x2a8]
Xx_4643: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_4644: MOV [RSI+0x60], R11             # mul_add_slow:266                   MOV [RSI+0x60], `mul_low_0
Xx_4645: MOV [RSI+0x68], R12             # mul_add_slow:266                   MOV [RSI+0x68], `mul_low_1
Xx_4646: MOV [RSI+0x70], R13             # mul_add_slow:266                   MOV [RSI+0x70], `mul_low_2
Xx_4647: MOV [RSI+0x78], RAX             # mul_add_slow:266                   MOV [RSI+0x78], `mul_low_3
Xx_4648: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4649: MUL QWORD PTR [RBX+0x80]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x80]
Xx_4650: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_4651: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_4652: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4653: MUL QWORD PTR [RBX+0x88]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x88]
Xx_4654: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_4655: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_4656: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4657: MUL QWORD PTR [RBX+0x90]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x90]
Xx_4658: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_4659: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_4660: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4661: MUL QWORD PTR [RBX+0x98]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x98]
Xx_4662: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_4663: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_4664: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_4665: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_4666: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_4667: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_4668: ADC R11, [RSP+-0x2a0]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x2a0]
Xx_4669: ADC R12, [RSP+-0x298]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x298]
Xx_4670: ADC R13, [RSP+-0x290]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x290]
Xx_4671: ADC RAX, [RSP+-0x288]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x288]
Xx_4672: MOV [RSI+0x80], R11             # mul_add_slow:266                   MOV [RSI+0x80], `mul_low_0
Xx_4673: MOV [RSI+0x88], R12             # mul_add_slow:266                   MOV [RSI+0x88], `mul_low_1
Xx_4674: MOV [RSI+0x90], R13             # mul_add_slow:266                   MOV [RSI+0x90], `mul_low_2
Xx_4675: MOV [RSI+0x98], RAX             # mul_add_slow:266                   MOV [RSI+0x98], `mul_low_3
Xx_4676: MOV RSI, [RSP+-0x328]           # gcd_unsigned:616                   MOV `addr_new, `spill_addr_b_new
Xx_4677: MOV RDI, [RSP+-0x330]           # gcd_unsigned:617                   MOV `tmp, `spill_mod_v_1
Xx_4678: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4679: MUL QWORD PTR [RBP+0x0]         # mul_add_slow:208                   MUL QWORD PTR [RBP+0x0]
Xx_4680: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_4681: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_4682: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4683: MUL QWORD PTR [RBP+0x8]         # mul_add_slow:208                   MUL QWORD PTR [RBP+0x8]
Xx_4684: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_4685: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_4686: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4687: MUL QWORD PTR [RBP+0x10]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x10]
Xx_4688: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_4689: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_4690: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4691: MUL QWORD PTR [RBP+0x18]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x18]
Xx_4692: ADD R12, R14                    # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
Xx_4693: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_4694: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_4695: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_4696: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_4697: STC                             # mul_add_slow:243                   STC
Xx_4698: ADC R11, [RSP+-0x280]           # mul_add_slow:244                   ADC `mul_low_0, [RSP+-0x280]
Xx_4699: ADC R12, [RSP+-0x278]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x278]
Xx_4700: ADC R13, [RSP+-0x270]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x270]
Xx_4701: ADC RAX, [RSP+-0x268]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x268]
Xx_4702: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_4703: MOV [RSI+0x0], R11              # mul_add_slow:266                   MOV [RSI+0x0], `mul_low_0
Xx_4704: MOV [RSI+0x8], R12              # mul_add_slow:266                   MOV [RSI+0x8], `mul_low_1
Xx_4705: MOV [RSI+0x10], R13             # mul_add_slow:266                   MOV [RSI+0x10], `mul_low_2
Xx_4706: MOV [RSI+0x18], RAX             # mul_add_slow:266                   MOV [RSI+0x18], `mul_low_3
Xx_4707: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4708: MUL QWORD PTR [RBP+0x20]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x20]
Xx_4709: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_4710: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_4711: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4712: MUL QWORD PTR [RBP+0x28]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x28]
Xx_4713: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_4714: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_4715: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4716: MUL QWORD PTR [RBP+0x30]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x30]
Xx_4717: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_4718: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_4719: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4720: MUL QWORD PTR [RBP+0x38]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x38]
Xx_4721: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_4722: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_4723: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_4724: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_4725: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_4726: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_4727: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_4728: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_4729: ADC R11, [RSP+-0x260]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x260]
Xx_4730: ADC R12, [RSP+-0x258]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x258]
Xx_4731: ADC R13, [RSP+-0x250]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x250]
Xx_4732: ADC RAX, [RSP+-0x248]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x248]
Xx_4733: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_4734: MOV [RSI+0x20], R11             # mul_add_slow:266                   MOV [RSI+0x20], `mul_low_0
Xx_4735: MOV [RSI+0x28], R12             # mul_add_slow:266                   MOV [RSI+0x28], `mul_low_1
Xx_4736: MOV [RSI+0x30], R13             # mul_add_slow:266                   MOV [RSI+0x30], `mul_low_2
Xx_4737: MOV [RSI+0x38], RAX             # mul_add_slow:266                   MOV [RSI+0x38], `mul_low_3
Xx_4738: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4739: MUL QWORD PTR [RBP+0x40]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x40]
Xx_4740: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_4741: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_4742: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4743: MUL QWORD PTR [RBP+0x48]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x48]
Xx_4744: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_4745: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_4746: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4747: MUL QWORD PTR [RBP+0x50]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x50]
Xx_4748: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_4749: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_4750: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4751: MUL QWORD PTR [RBP+0x58]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x58]
Xx_4752: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_4753: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_4754: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_4755: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_4756: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_4757: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_4758: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_4759: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_4760: ADC R11, [RSP+-0x240]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x240]
Xx_4761: ADC R12, [RSP+-0x238]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x238]
Xx_4762: ADC R13, [RSP+-0x230]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x230]
Xx_4763: ADC RAX, [RSP+-0x228]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x228]
Xx_4764: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_4765: MOV [RSI+0x40], R11             # mul_add_slow:266                   MOV [RSI+0x40], `mul_low_0
Xx_4766: MOV [RSI+0x48], R12             # mul_add_slow:266                   MOV [RSI+0x48], `mul_low_1
Xx_4767: MOV [RSI+0x50], R13             # mul_add_slow:266                   MOV [RSI+0x50], `mul_low_2
Xx_4768: MOV [RSI+0x58], RAX             # mul_add_slow:266                   MOV [RSI+0x58], `mul_low_3
Xx_4769: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4770: MUL QWORD PTR [RBP+0x60]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x60]
Xx_4771: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_4772: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_4773: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4774: MUL QWORD PTR [RBP+0x68]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x68]
Xx_4775: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_4776: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_4777: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4778: MUL QWORD PTR [RBP+0x70]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x70]
Xx_4779: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_4780: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_4781: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4782: MUL QWORD PTR [RBP+0x78]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x78]
Xx_4783: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_4784: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_4785: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_4786: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_4787: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_4788: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_4789: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_4790: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_4791: ADC R11, [RSP+-0x220]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x220]
Xx_4792: ADC R12, [RSP+-0x218]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x218]
Xx_4793: ADC R13, [RSP+-0x210]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x210]
Xx_4794: ADC RAX, [RSP+-0x208]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x208]
Xx_4795: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_4796: MOV [RSI+0x60], R11             # mul_add_slow:266                   MOV [RSI+0x60], `mul_low_0
Xx_4797: MOV [RSI+0x68], R12             # mul_add_slow:266                   MOV [RSI+0x68], `mul_low_1
Xx_4798: MOV [RSI+0x70], R13             # mul_add_slow:266                   MOV [RSI+0x70], `mul_low_2
Xx_4799: MOV [RSI+0x78], RAX             # mul_add_slow:266                   MOV [RSI+0x78], `mul_low_3
Xx_4800: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4801: MUL QWORD PTR [RBP+0x80]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x80]
Xx_4802: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_4803: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_4804: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4805: MUL QWORD PTR [RBP+0x88]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x88]
Xx_4806: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_4807: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_4808: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4809: MUL QWORD PTR [RBP+0x90]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x90]
Xx_4810: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_4811: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_4812: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4813: MUL QWORD PTR [RBP+0x98]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x98]
Xx_4814: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_4815: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_4816: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_4817: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_4818: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_4819: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_4820: ADC R11, [RSP+-0x200]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x200]
Xx_4821: ADC R12, [RSP+-0x1f8]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x1f8]
Xx_4822: ADC R13, [RSP+-0x1f0]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x1f0]
Xx_4823: ADC RAX, [RSP+-0x1e8]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x1e8]
Xx_4824: MOV [RSI+0x80], R11             # mul_add_slow:266                   MOV [RSI+0x80], `mul_low_0
Xx_4825: MOV [RSI+0x88], R12             # mul_add_slow:266                   MOV [RSI+0x88], `mul_low_1
Xx_4826: MOV [RSI+0x90], R13             # mul_add_slow:266                   MOV [RSI+0x90], `mul_low_2
Xx_4827: MOV [RSI+0x98], RAX             # mul_add_slow:266                   MOV [RSI+0x98], `mul_low_3
Xx_4828: JMP _label_45                   # gcd_unsigned:620                   JMP _label_45
Xx_4829: multiply_uv_size_20:            # gcd_unsigned:490                   multiply_uv_size_20:
Xx_4830: MOV RDI, [RSP+-0x388]           # gcd_unsigned:531                   MOV `tmp, `spill_parity
Xx_4831: CMP RDI, 0                      # gcd_unsigned:532                   CMP `tmp, 0
Xx_4832: MOV RBX, [RSP+-0x3a8]           # gcd_unsigned:535                   MOV `addr_a, `spill_u_0
Xx_4833: MOV RBP, [RSP+-0x398]           # gcd_unsigned:536                   MOV `addr_b, `spill_v_0
Xx_4834: MOV RSI, RBX                    # gcd_unsigned:539                   MOV `addr_new, `addr_a
Xx_4835: CMOVNE RBX, RBP                 # gcd_unsigned:540                   CMOVNE `addr_a, `addr_b
Xx_4836: CMOVNE RBP, RSI                 # gcd_unsigned:541                   CMOVNE `addr_b, `addr_new
Xx_4837: MOV [RSP+-0x348], RBX           # gcd_unsigned:543                   MOV `spill_mod_u_0, `addr_a
Xx_4838: MOV [RSP+-0x338], RBP           # gcd_unsigned:544                   MOV `spill_mod_v_0, `addr_b
Xx_4839: MOV RBX, [RSP+-0x3a0]           # gcd_unsigned:535                   MOV `addr_a, `spill_u_1
Xx_4840: MOV RBP, [RSP+-0x390]           # gcd_unsigned:536                   MOV `addr_b, `spill_v_1
Xx_4841: MOV RSI, RBX                    # gcd_unsigned:539                   MOV `addr_new, `addr_a
Xx_4842: CMOVNE RBX, RBP                 # gcd_unsigned:540                   CMOVNE `addr_a, `addr_b
Xx_4843: CMOVNE RBP, RSI                 # gcd_unsigned:541                   CMOVNE `addr_b, `addr_new
Xx_4844: MOV [RSP+-0x340], RBX           # gcd_unsigned:543                   MOV `spill_mod_u_1, `addr_a
Xx_4845: MOV [RSP+-0x330], RBP           # gcd_unsigned:544                   MOV `spill_mod_v_1, `addr_b
Xx_4846: MOV RSI, [RSP+-0x3b8]           # gcd_unsigned:547                   MOV `addr_new, `spill_iter
Xx_4847: TEST RSI, 1                     # gcd_unsigned:548                   TEST `addr_new, 1
Xx_4848: MOV RBX, [RSP+-0x3f8]           # gcd_unsigned:551                   MOV `addr_a, `spill_a_addr_base
Xx_4849: CMOVNZ RBX, [RSP+-0x3e8]        # gcd_unsigned:552                   CMOVNZ `addr_a, `spill_a_2_addr_base
Xx_4850: MOV RBP, [RSP+-0x3f0]           # gcd_unsigned:555                   MOV `addr_b, `spill_b_addr_base
Xx_4851: CMOVNZ RBP, [RSP+-0x3e0]        # gcd_unsigned:556                   CMOVNZ `addr_b, `spill_b_2_addr_base
Xx_4852: CMP RDI, 0                      # gcd_unsigned:559                   CMP `tmp, 0
Xx_4853: MOV RSI, RBX                    # gcd_unsigned:560                   MOV `addr_new, `addr_a
Xx_4854: CMOVNE RBX, RBP                 # gcd_unsigned:561                   CMOVNE `addr_a, `addr_b
Xx_4855: CMOVNE RBP, RSI                 # gcd_unsigned:562                   CMOVNE `addr_b, `addr_new
Xx_4856: MOV RSI, [RSP+-0x3b8]           # gcd_unsigned:567                   MOV `addr_new, `spill_iter
Xx_4857: TEST RSI, 1                     # gcd_unsigned:568                   TEST `addr_new, 1
Xx_4858: MOV RSI, [RSP+-0x3e0]           # gcd_unsigned:569                   MOV `addr_new, `spill_b_2_addr_base
Xx_4859: CMOVNZ RSI, [RSP+-0x3f0]        # gcd_unsigned:570                   CMOVNZ `addr_new, `spill_b_addr_base
Xx_4860: MOV [RSP+-0x328], RSI           # gcd_unsigned:571                   MOV `spill_addr_b_new, `addr_new
Xx_4861: MOV RSI, [RSP+-0x3e8]           # gcd_unsigned:574                   MOV `addr_new, `spill_a_2_addr_base
Xx_4862: CMOVNZ RSI, [RSP+-0x3f8]        # gcd_unsigned:575                   CMOVNZ `addr_new, `spill_a_addr_base
Xx_4863: MOV RDI, [RSP+-0x338]           # gcd_unsigned:604                   MOV `tmp, `spill_mod_v_0
Xx_4864: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4865: MUL QWORD PTR [RBP+0x0]         # mul_add_slow:208                   MUL QWORD PTR [RBP+0x0]
Xx_4866: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_4867: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_4868: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4869: MUL QWORD PTR [RBP+0x8]         # mul_add_slow:208                   MUL QWORD PTR [RBP+0x8]
Xx_4870: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_4871: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_4872: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4873: MUL QWORD PTR [RBP+0x10]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x10]
Xx_4874: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_4875: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_4876: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4877: MUL QWORD PTR [RBP+0x18]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x18]
Xx_4878: ADD R12, R14                    # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
Xx_4879: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_4880: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_4881: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_4882: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_4883: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_4884: MOV [RSP+-0x320], R11           # mul_add_slow:266                   MOV [RSP+-0x320], `mul_low_0
Xx_4885: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_4886: MOV [RSP+-0x318], R12           # mul_add_slow:266                   MOV [RSP+-0x318], `mul_low_1
Xx_4887: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_4888: MOV [RSP+-0x310], R13           # mul_add_slow:266                   MOV [RSP+-0x310], `mul_low_2
Xx_4889: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_4890: MOV [RSP+-0x308], RAX           # mul_add_slow:266                   MOV [RSP+-0x308], `mul_low_3
Xx_4891: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4892: MUL QWORD PTR [RBP+0x20]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x20]
Xx_4893: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_4894: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_4895: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4896: MUL QWORD PTR [RBP+0x28]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x28]
Xx_4897: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_4898: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_4899: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4900: MUL QWORD PTR [RBP+0x30]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x30]
Xx_4901: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_4902: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_4903: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4904: MUL QWORD PTR [RBP+0x38]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x38]
Xx_4905: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_4906: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_4907: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_4908: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_4909: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_4910: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_4911: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_4912: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_4913: MOV [RSP+-0x300], R11           # mul_add_slow:266                   MOV [RSP+-0x300], `mul_low_0
Xx_4914: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_4915: MOV [RSP+-0x2f8], R12           # mul_add_slow:266                   MOV [RSP+-0x2f8], `mul_low_1
Xx_4916: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_4917: MOV [RSP+-0x2f0], R13           # mul_add_slow:266                   MOV [RSP+-0x2f0], `mul_low_2
Xx_4918: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_4919: MOV [RSP+-0x2e8], RAX           # mul_add_slow:266                   MOV [RSP+-0x2e8], `mul_low_3
Xx_4920: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4921: MUL QWORD PTR [RBP+0x40]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x40]
Xx_4922: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_4923: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_4924: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4925: MUL QWORD PTR [RBP+0x48]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x48]
Xx_4926: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_4927: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_4928: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4929: MUL QWORD PTR [RBP+0x50]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x50]
Xx_4930: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_4931: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_4932: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4933: MUL QWORD PTR [RBP+0x58]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x58]
Xx_4934: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_4935: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_4936: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_4937: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_4938: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_4939: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_4940: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_4941: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_4942: MOV [RSP+-0x2e0], R11           # mul_add_slow:266                   MOV [RSP+-0x2e0], `mul_low_0
Xx_4943: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_4944: MOV [RSP+-0x2d8], R12           # mul_add_slow:266                   MOV [RSP+-0x2d8], `mul_low_1
Xx_4945: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_4946: MOV [RSP+-0x2d0], R13           # mul_add_slow:266                   MOV [RSP+-0x2d0], `mul_low_2
Xx_4947: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_4948: MOV [RSP+-0x2c8], RAX           # mul_add_slow:266                   MOV [RSP+-0x2c8], `mul_low_3
Xx_4949: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4950: MUL QWORD PTR [RBP+0x60]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x60]
Xx_4951: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_4952: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_4953: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4954: MUL QWORD PTR [RBP+0x68]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x68]
Xx_4955: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_4956: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_4957: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4958: MUL QWORD PTR [RBP+0x70]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x70]
Xx_4959: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_4960: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_4961: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4962: MUL QWORD PTR [RBP+0x78]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x78]
Xx_4963: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_4964: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_4965: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_4966: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_4967: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_4968: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_4969: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_4970: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_4971: MOV [RSP+-0x2c0], R11           # mul_add_slow:266                   MOV [RSP+-0x2c0], `mul_low_0
Xx_4972: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_4973: MOV [RSP+-0x2b8], R12           # mul_add_slow:266                   MOV [RSP+-0x2b8], `mul_low_1
Xx_4974: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_4975: MOV [RSP+-0x2b0], R13           # mul_add_slow:266                   MOV [RSP+-0x2b0], `mul_low_2
Xx_4976: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_4977: MOV [RSP+-0x2a8], RAX           # mul_add_slow:266                   MOV [RSP+-0x2a8], `mul_low_3
Xx_4978: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4979: MUL QWORD PTR [RBP+0x80]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x80]
Xx_4980: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_4981: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_4982: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4983: MUL QWORD PTR [RBP+0x88]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x88]
Xx_4984: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_4985: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_4986: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4987: MUL QWORD PTR [RBP+0x90]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x90]
Xx_4988: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_4989: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_4990: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_4991: MUL QWORD PTR [RBP+0x98]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x98]
Xx_4992: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_4993: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_4994: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_4995: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_4996: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_4997: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_4998: MOV [RSP+-0x2a0], R11           # mul_add_slow:266                   MOV [RSP+-0x2a0], `mul_low_0
Xx_4999: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_5000: MOV [RSP+-0x298], R12           # mul_add_slow:266                   MOV [RSP+-0x298], `mul_low_1
Xx_5001: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_5002: MOV [RSP+-0x290], R13           # mul_add_slow:266                   MOV [RSP+-0x290], `mul_low_2
Xx_5003: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_5004: MOV [RSP+-0x288], RAX           # mul_add_slow:266                   MOV [RSP+-0x288], `mul_low_3
Xx_5005: MOV RDI, [RSP+-0x340]           # gcd_unsigned:608                   MOV `tmp, `spill_mod_u_1
Xx_5006: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5007: MUL QWORD PTR [RBX+0x0]         # mul_add_slow:208                   MUL QWORD PTR [RBX+0x0]
Xx_5008: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_5009: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_5010: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5011: MUL QWORD PTR [RBX+0x8]         # mul_add_slow:208                   MUL QWORD PTR [RBX+0x8]
Xx_5012: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_5013: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_5014: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5015: MUL QWORD PTR [RBX+0x10]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x10]
Xx_5016: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_5017: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_5018: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5019: MUL QWORD PTR [RBX+0x18]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x18]
Xx_5020: ADD R12, R14                    # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
Xx_5021: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_5022: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_5023: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_5024: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_5025: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_5026: MOV [RSP+-0x280], R11           # mul_add_slow:266                   MOV [RSP+-0x280], `mul_low_0
Xx_5027: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_5028: MOV [RSP+-0x278], R12           # mul_add_slow:266                   MOV [RSP+-0x278], `mul_low_1
Xx_5029: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_5030: MOV [RSP+-0x270], R13           # mul_add_slow:266                   MOV [RSP+-0x270], `mul_low_2
Xx_5031: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_5032: MOV [RSP+-0x268], RAX           # mul_add_slow:266                   MOV [RSP+-0x268], `mul_low_3
Xx_5033: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5034: MUL QWORD PTR [RBX+0x20]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x20]
Xx_5035: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_5036: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_5037: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5038: MUL QWORD PTR [RBX+0x28]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x28]
Xx_5039: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_5040: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_5041: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5042: MUL QWORD PTR [RBX+0x30]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x30]
Xx_5043: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_5044: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_5045: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5046: MUL QWORD PTR [RBX+0x38]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x38]
Xx_5047: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_5048: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_5049: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_5050: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_5051: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_5052: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_5053: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_5054: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_5055: MOV [RSP+-0x260], R11           # mul_add_slow:266                   MOV [RSP+-0x260], `mul_low_0
Xx_5056: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_5057: MOV [RSP+-0x258], R12           # mul_add_slow:266                   MOV [RSP+-0x258], `mul_low_1
Xx_5058: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_5059: MOV [RSP+-0x250], R13           # mul_add_slow:266                   MOV [RSP+-0x250], `mul_low_2
Xx_5060: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_5061: MOV [RSP+-0x248], RAX           # mul_add_slow:266                   MOV [RSP+-0x248], `mul_low_3
Xx_5062: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5063: MUL QWORD PTR [RBX+0x40]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x40]
Xx_5064: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_5065: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_5066: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5067: MUL QWORD PTR [RBX+0x48]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x48]
Xx_5068: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_5069: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_5070: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5071: MUL QWORD PTR [RBX+0x50]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x50]
Xx_5072: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_5073: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_5074: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5075: MUL QWORD PTR [RBX+0x58]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x58]
Xx_5076: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_5077: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_5078: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_5079: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_5080: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_5081: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_5082: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_5083: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_5084: MOV [RSP+-0x240], R11           # mul_add_slow:266                   MOV [RSP+-0x240], `mul_low_0
Xx_5085: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_5086: MOV [RSP+-0x238], R12           # mul_add_slow:266                   MOV [RSP+-0x238], `mul_low_1
Xx_5087: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_5088: MOV [RSP+-0x230], R13           # mul_add_slow:266                   MOV [RSP+-0x230], `mul_low_2
Xx_5089: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_5090: MOV [RSP+-0x228], RAX           # mul_add_slow:266                   MOV [RSP+-0x228], `mul_low_3
Xx_5091: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5092: MUL QWORD PTR [RBX+0x60]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x60]
Xx_5093: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_5094: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_5095: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5096: MUL QWORD PTR [RBX+0x68]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x68]
Xx_5097: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_5098: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_5099: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5100: MUL QWORD PTR [RBX+0x70]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x70]
Xx_5101: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_5102: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_5103: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5104: MUL QWORD PTR [RBX+0x78]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x78]
Xx_5105: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_5106: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_5107: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_5108: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_5109: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_5110: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_5111: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_5112: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_5113: MOV [RSP+-0x220], R11           # mul_add_slow:266                   MOV [RSP+-0x220], `mul_low_0
Xx_5114: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_5115: MOV [RSP+-0x218], R12           # mul_add_slow:266                   MOV [RSP+-0x218], `mul_low_1
Xx_5116: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_5117: MOV [RSP+-0x210], R13           # mul_add_slow:266                   MOV [RSP+-0x210], `mul_low_2
Xx_5118: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_5119: MOV [RSP+-0x208], RAX           # mul_add_slow:266                   MOV [RSP+-0x208], `mul_low_3
Xx_5120: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5121: MUL QWORD PTR [RBX+0x80]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x80]
Xx_5122: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_5123: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_5124: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5125: MUL QWORD PTR [RBX+0x88]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x88]
Xx_5126: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_5127: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_5128: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5129: MUL QWORD PTR [RBX+0x90]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x90]
Xx_5130: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_5131: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_5132: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5133: MUL QWORD PTR [RBX+0x98]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x98]
Xx_5134: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_5135: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_5136: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_5137: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_5138: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_5139: NOT R11                         # mul_add_slow:264                   NOT `mul_low_0
Xx_5140: MOV [RSP+-0x200], R11           # mul_add_slow:266                   MOV [RSP+-0x200], `mul_low_0
Xx_5141: NOT R12                         # mul_add_slow:264                   NOT `mul_low_1
Xx_5142: MOV [RSP+-0x1f8], R12           # mul_add_slow:266                   MOV [RSP+-0x1f8], `mul_low_1
Xx_5143: NOT R13                         # mul_add_slow:264                   NOT `mul_low_2
Xx_5144: MOV [RSP+-0x1f0], R13           # mul_add_slow:266                   MOV [RSP+-0x1f0], `mul_low_2
Xx_5145: NOT RAX                         # mul_add_slow:264                   NOT `mul_low_3
Xx_5146: MOV [RSP+-0x1e8], RAX           # mul_add_slow:266                   MOV [RSP+-0x1e8], `mul_low_3
Xx_5147: MOV RDI, [RSP+-0x348]           # gcd_unsigned:612                   MOV `tmp, `spill_mod_u_0
Xx_5148: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5149: MUL QWORD PTR [RBX+0x0]         # mul_add_slow:208                   MUL QWORD PTR [RBX+0x0]
Xx_5150: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_5151: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_5152: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5153: MUL QWORD PTR [RBX+0x8]         # mul_add_slow:208                   MUL QWORD PTR [RBX+0x8]
Xx_5154: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_5155: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_5156: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5157: MUL QWORD PTR [RBX+0x10]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x10]
Xx_5158: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_5159: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_5160: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5161: MUL QWORD PTR [RBX+0x18]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x18]
Xx_5162: ADD R12, R14                    # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
Xx_5163: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_5164: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_5165: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_5166: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_5167: STC                             # mul_add_slow:243                   STC
Xx_5168: ADC R11, [RSP+-0x320]           # mul_add_slow:244                   ADC `mul_low_0, [RSP+-0x320]
Xx_5169: ADC R12, [RSP+-0x318]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x318]
Xx_5170: ADC R13, [RSP+-0x310]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x310]
Xx_5171: ADC RAX, [RSP+-0x308]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x308]
Xx_5172: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_5173: MOV [RSI+0x0], R11              # mul_add_slow:266                   MOV [RSI+0x0], `mul_low_0
Xx_5174: MOV [RSI+0x8], R12              # mul_add_slow:266                   MOV [RSI+0x8], `mul_low_1
Xx_5175: MOV [RSI+0x10], R13             # mul_add_slow:266                   MOV [RSI+0x10], `mul_low_2
Xx_5176: MOV [RSI+0x18], RAX             # mul_add_slow:266                   MOV [RSI+0x18], `mul_low_3
Xx_5177: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5178: MUL QWORD PTR [RBX+0x20]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x20]
Xx_5179: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_5180: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_5181: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5182: MUL QWORD PTR [RBX+0x28]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x28]
Xx_5183: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_5184: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_5185: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5186: MUL QWORD PTR [RBX+0x30]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x30]
Xx_5187: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_5188: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_5189: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5190: MUL QWORD PTR [RBX+0x38]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x38]
Xx_5191: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_5192: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_5193: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_5194: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_5195: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_5196: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_5197: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_5198: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_5199: ADC R11, [RSP+-0x300]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x300]
Xx_5200: ADC R12, [RSP+-0x2f8]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x2f8]
Xx_5201: ADC R13, [RSP+-0x2f0]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x2f0]
Xx_5202: ADC RAX, [RSP+-0x2e8]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x2e8]
Xx_5203: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_5204: MOV [RSI+0x20], R11             # mul_add_slow:266                   MOV [RSI+0x20], `mul_low_0
Xx_5205: MOV [RSI+0x28], R12             # mul_add_slow:266                   MOV [RSI+0x28], `mul_low_1
Xx_5206: MOV [RSI+0x30], R13             # mul_add_slow:266                   MOV [RSI+0x30], `mul_low_2
Xx_5207: MOV [RSI+0x38], RAX             # mul_add_slow:266                   MOV [RSI+0x38], `mul_low_3
Xx_5208: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5209: MUL QWORD PTR [RBX+0x40]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x40]
Xx_5210: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_5211: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_5212: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5213: MUL QWORD PTR [RBX+0x48]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x48]
Xx_5214: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_5215: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_5216: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5217: MUL QWORD PTR [RBX+0x50]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x50]
Xx_5218: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_5219: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_5220: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5221: MUL QWORD PTR [RBX+0x58]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x58]
Xx_5222: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_5223: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_5224: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_5225: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_5226: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_5227: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_5228: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_5229: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_5230: ADC R11, [RSP+-0x2e0]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x2e0]
Xx_5231: ADC R12, [RSP+-0x2d8]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x2d8]
Xx_5232: ADC R13, [RSP+-0x2d0]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x2d0]
Xx_5233: ADC RAX, [RSP+-0x2c8]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x2c8]
Xx_5234: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_5235: MOV [RSI+0x40], R11             # mul_add_slow:266                   MOV [RSI+0x40], `mul_low_0
Xx_5236: MOV [RSI+0x48], R12             # mul_add_slow:266                   MOV [RSI+0x48], `mul_low_1
Xx_5237: MOV [RSI+0x50], R13             # mul_add_slow:266                   MOV [RSI+0x50], `mul_low_2
Xx_5238: MOV [RSI+0x58], RAX             # mul_add_slow:266                   MOV [RSI+0x58], `mul_low_3
Xx_5239: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5240: MUL QWORD PTR [RBX+0x60]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x60]
Xx_5241: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_5242: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_5243: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5244: MUL QWORD PTR [RBX+0x68]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x68]
Xx_5245: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_5246: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_5247: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5248: MUL QWORD PTR [RBX+0x70]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x70]
Xx_5249: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_5250: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_5251: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5252: MUL QWORD PTR [RBX+0x78]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x78]
Xx_5253: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_5254: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_5255: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_5256: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_5257: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_5258: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_5259: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_5260: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_5261: ADC R11, [RSP+-0x2c0]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x2c0]
Xx_5262: ADC R12, [RSP+-0x2b8]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x2b8]
Xx_5263: ADC R13, [RSP+-0x2b0]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x2b0]
Xx_5264: ADC RAX, [RSP+-0x2a8]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x2a8]
Xx_5265: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_5266: MOV [RSI+0x60], R11             # mul_add_slow:266                   MOV [RSI+0x60], `mul_low_0
Xx_5267: MOV [RSI+0x68], R12             # mul_add_slow:266                   MOV [RSI+0x68], `mul_low_1
Xx_5268: MOV [RSI+0x70], R13             # mul_add_slow:266                   MOV [RSI+0x70], `mul_low_2
Xx_5269: MOV [RSI+0x78], RAX             # mul_add_slow:266                   MOV [RSI+0x78], `mul_low_3
Xx_5270: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5271: MUL QWORD PTR [RBX+0x80]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x80]
Xx_5272: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_5273: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_5274: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5275: MUL QWORD PTR [RBX+0x88]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x88]
Xx_5276: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_5277: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_5278: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5279: MUL QWORD PTR [RBX+0x90]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x90]
Xx_5280: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_5281: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_5282: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5283: MUL QWORD PTR [RBX+0x98]        # mul_add_slow:208                   MUL QWORD PTR [RBX+0x98]
Xx_5284: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_5285: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_5286: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_5287: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_5288: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_5289: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_5290: ADC R11, [RSP+-0x2a0]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x2a0]
Xx_5291: ADC R12, [RSP+-0x298]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x298]
Xx_5292: ADC R13, [RSP+-0x290]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x290]
Xx_5293: ADC RAX, [RSP+-0x288]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x288]
Xx_5294: MOV [RSI+0x80], R11             # mul_add_slow:266                   MOV [RSI+0x80], `mul_low_0
Xx_5295: MOV [RSI+0x88], R12             # mul_add_slow:266                   MOV [RSI+0x88], `mul_low_1
Xx_5296: MOV [RSI+0x90], R13             # mul_add_slow:266                   MOV [RSI+0x90], `mul_low_2
Xx_5297: MOV [RSI+0x98], RAX             # mul_add_slow:266                   MOV [RSI+0x98], `mul_low_3
Xx_5298: MOV RSI, [RSP+-0x328]           # gcd_unsigned:616                   MOV `addr_new, `spill_addr_b_new
Xx_5299: MOV RDI, [RSP+-0x330]           # gcd_unsigned:617                   MOV `tmp, `spill_mod_v_1
Xx_5300: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5301: MUL QWORD PTR [RBP+0x0]         # mul_add_slow:208                   MUL QWORD PTR [RBP+0x0]
Xx_5302: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_5303: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_5304: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5305: MUL QWORD PTR [RBP+0x8]         # mul_add_slow:208                   MUL QWORD PTR [RBP+0x8]
Xx_5306: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_5307: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_5308: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5309: MUL QWORD PTR [RBP+0x10]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x10]
Xx_5310: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_5311: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_5312: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5313: MUL QWORD PTR [RBP+0x18]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x18]
Xx_5314: ADD R12, R14                    # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
Xx_5315: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_5316: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_5317: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_5318: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_5319: STC                             # mul_add_slow:243                   STC
Xx_5320: ADC R11, [RSP+-0x280]           # mul_add_slow:244                   ADC `mul_low_0, [RSP+-0x280]
Xx_5321: ADC R12, [RSP+-0x278]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x278]
Xx_5322: ADC R13, [RSP+-0x270]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x270]
Xx_5323: ADC RAX, [RSP+-0x268]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x268]
Xx_5324: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_5325: MOV [RSI+0x0], R11              # mul_add_slow:266                   MOV [RSI+0x0], `mul_low_0
Xx_5326: MOV [RSI+0x8], R12              # mul_add_slow:266                   MOV [RSI+0x8], `mul_low_1
Xx_5327: MOV [RSI+0x10], R13             # mul_add_slow:266                   MOV [RSI+0x10], `mul_low_2
Xx_5328: MOV [RSI+0x18], RAX             # mul_add_slow:266                   MOV [RSI+0x18], `mul_low_3
Xx_5329: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5330: MUL QWORD PTR [RBP+0x20]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x20]
Xx_5331: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_5332: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_5333: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5334: MUL QWORD PTR [RBP+0x28]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x28]
Xx_5335: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_5336: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_5337: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5338: MUL QWORD PTR [RBP+0x30]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x30]
Xx_5339: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_5340: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_5341: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5342: MUL QWORD PTR [RBP+0x38]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x38]
Xx_5343: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_5344: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_5345: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_5346: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_5347: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_5348: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_5349: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_5350: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_5351: ADC R11, [RSP+-0x260]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x260]
Xx_5352: ADC R12, [RSP+-0x258]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x258]
Xx_5353: ADC R13, [RSP+-0x250]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x250]
Xx_5354: ADC RAX, [RSP+-0x248]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x248]
Xx_5355: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_5356: MOV [RSI+0x20], R11             # mul_add_slow:266                   MOV [RSI+0x20], `mul_low_0
Xx_5357: MOV [RSI+0x28], R12             # mul_add_slow:266                   MOV [RSI+0x28], `mul_low_1
Xx_5358: MOV [RSI+0x30], R13             # mul_add_slow:266                   MOV [RSI+0x30], `mul_low_2
Xx_5359: MOV [RSI+0x38], RAX             # mul_add_slow:266                   MOV [RSI+0x38], `mul_low_3
Xx_5360: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5361: MUL QWORD PTR [RBP+0x40]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x40]
Xx_5362: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_5363: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_5364: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5365: MUL QWORD PTR [RBP+0x48]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x48]
Xx_5366: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_5367: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_5368: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5369: MUL QWORD PTR [RBP+0x50]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x50]
Xx_5370: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_5371: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_5372: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5373: MUL QWORD PTR [RBP+0x58]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x58]
Xx_5374: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_5375: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_5376: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_5377: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_5378: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_5379: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_5380: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_5381: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_5382: ADC R11, [RSP+-0x240]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x240]
Xx_5383: ADC R12, [RSP+-0x238]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x238]
Xx_5384: ADC R13, [RSP+-0x230]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x230]
Xx_5385: ADC RAX, [RSP+-0x228]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x228]
Xx_5386: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_5387: MOV [RSI+0x40], R11             # mul_add_slow:266                   MOV [RSI+0x40], `mul_low_0
Xx_5388: MOV [RSI+0x48], R12             # mul_add_slow:266                   MOV [RSI+0x48], `mul_low_1
Xx_5389: MOV [RSI+0x50], R13             # mul_add_slow:266                   MOV [RSI+0x50], `mul_low_2
Xx_5390: MOV [RSI+0x58], RAX             # mul_add_slow:266                   MOV [RSI+0x58], `mul_low_3
Xx_5391: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5392: MUL QWORD PTR [RBP+0x60]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x60]
Xx_5393: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_5394: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_5395: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5396: MUL QWORD PTR [RBP+0x68]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x68]
Xx_5397: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_5398: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_5399: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5400: MUL QWORD PTR [RBP+0x70]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x70]
Xx_5401: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_5402: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_5403: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5404: MUL QWORD PTR [RBP+0x78]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x78]
Xx_5405: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_5406: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_5407: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_5408: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_5409: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_5410: MOV R10, RDX                    # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
Xx_5411: SBB R8, R8                      # mul_add_slow:234                   SBB `mul_carry, `mul_carry
Xx_5412: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_5413: ADC R11, [RSP+-0x220]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x220]
Xx_5414: ADC R12, [RSP+-0x218]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x218]
Xx_5415: ADC R13, [RSP+-0x210]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x210]
Xx_5416: ADC RAX, [RSP+-0x208]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x208]
Xx_5417: SBB R9, R9                      # mul_add_slow:258                   SBB `add_carry, `add_carry
Xx_5418: MOV [RSI+0x60], R11             # mul_add_slow:266                   MOV [RSI+0x60], `mul_low_0
Xx_5419: MOV [RSI+0x68], R12             # mul_add_slow:266                   MOV [RSI+0x68], `mul_low_1
Xx_5420: MOV [RSI+0x70], R13             # mul_add_slow:266                   MOV [RSI+0x70], `mul_low_2
Xx_5421: MOV [RSI+0x78], RAX             # mul_add_slow:266                   MOV [RSI+0x78], `mul_low_3
Xx_5422: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5423: MUL QWORD PTR [RBP+0x80]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x80]
Xx_5424: MOV R11, RAX                    # mul_add_slow:214                   MOV `mul_low_0, RAX
Xx_5425: MOV R14, RDX                    # mul_add_slow:215                   MOV `mul_high_0, RDX
Xx_5426: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5427: MUL QWORD PTR [RBP+0x88]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x88]
Xx_5428: MOV R12, RAX                    # mul_add_slow:214                   MOV `mul_low_1, RAX
Xx_5429: MOV R15, RDX                    # mul_add_slow:215                   MOV `mul_high_1, RDX
Xx_5430: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5431: MUL QWORD PTR [RBP+0x90]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x90]
Xx_5432: MOV R13, RAX                    # mul_add_slow:214                   MOV `mul_low_2, RAX
Xx_5433: MOV RCX, RDX                    # mul_add_slow:215                   MOV `mul_high_2, RDX
Xx_5434: MOV RAX, RDI                    # mul_add_slow:207                   MOV RAX, `b
Xx_5435: MUL QWORD PTR [RBP+0x98]        # mul_add_slow:208                   MUL QWORD PTR [RBP+0x98]
Xx_5436: ADD R8, 1                       # mul_add_slow:224                   ADD `mul_carry, 1
Xx_5437: ADC R11, R10                    # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
Xx_5438: ADC R12, R14                    # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
Xx_5439: ADC R13, R15                    # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
Xx_5440: ADC RAX, RCX                    # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
Xx_5441: ADD R9, 1                       # mul_add_slow:249                   ADD `add_carry, 1
Xx_5442: ADC R11, [RSP+-0x200]           # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x200]
Xx_5443: ADC R12, [RSP+-0x1f8]           # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x1f8]
Xx_5444: ADC R13, [RSP+-0x1f0]           # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x1f0]
Xx_5445: ADC RAX, [RSP+-0x1e8]           # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x1e8]
Xx_5446: MOV [RSI+0x80], R11             # mul_add_slow:266                   MOV [RSI+0x80], `mul_low_0
Xx_5447: MOV [RSI+0x88], R12             # mul_add_slow:266                   MOV [RSI+0x88], `mul_low_1
Xx_5448: MOV [RSI+0x90], R13             # mul_add_slow:266                   MOV [RSI+0x90], `mul_low_2
Xx_5449: MOV [RSI+0x98], RAX             # mul_add_slow:266                   MOV [RSI+0x98], `mul_low_3
Xx_5450: JMP _label_45                   # gcd_unsigned:620                   JMP _label_45
Xx_5451: _label_45:                      # gcd_unsigned:622                   _label_45:
Xx_5452: _label_31:                      # gcd_unsigned:634                   _label_31:
Xx_5453: MOV RBX, [RSP+-0x3b8]           # gcd_unsigned:645                   MOV `iter, `spill_iter
Xx_5454: TEST RBX, 1                     # gcd_unsigned:648                   TEST `iter, 1
Xx_5455: MOV RAX, [RSP+-0x3e8]           # gcd_unsigned:649                   MOV `addr_a, `spill_a_2_addr_base
Xx_5456: CMOVNZ RAX, [RSP+-0x3f8]        # gcd_unsigned:650                   CMOVNZ `addr_a, `spill_a_addr_base
Xx_5457: MOV RDX, [RSP+-0x3e0]           # gcd_unsigned:653                   MOV `addr_b, `spill_b_2_addr_base
Xx_5458: CMOVNZ RDX, [RSP+-0x3f0]        # gcd_unsigned:654                   CMOVNZ `addr_b, `spill_b_addr_base
Xx_5459: MOV R10, [RSP+-0x3b0]           # gcd_unsigned:664                   MOV `a_head_start, `spill_a_end_index
Xx_5460: LEA R10, [RAX+R10*8]            # update_end_index:48                LEA `end_index, [`addr_base+`end_index*8]
Xx_5461: XOR R15, R15                    # update_end_index:50                XOR `tmp_0, `tmp_0
Xx_5462: MOV RCX, 8                      # update_end_index:51                MOV `tmp_8, 8
Xx_5463: MOV R14, [R10]                  # update_end_index:63                MOV `tmp_value, [`end_index]
Xx_5464: CMP R14, R15                    # update_end_index:67                CMP `tmp_value, `tmp_0
Xx_5465: MOV R14, R15                    # update_end_index:68                MOV `tmp_value, `tmp_0
Xx_5466: CMOVE R14, RCX                  # update_end_index:69                CMOVE `tmp_value, `tmp_8
Xx_5467: CMP R10, RAX                    # update_end_index:73                CMP `end_index, `addr_base
Xx_5468: CMOVE R14, R15                  # update_end_index:74                CMOVE `tmp_value, `tmp_0
Xx_5469: SUB R10, R14                    # update_end_index:78                SUB `end_index, `tmp_value
Xx_5470: _label_47:                      # update_end_index:60                _label_47:
Xx_5471: MOV R14, [R10]                  # update_end_index:63                MOV `tmp_value, [`end_index]
Xx_5472: CMP R14, R15                    # update_end_index:67                CMP `tmp_value, `tmp_0
Xx_5473: MOV R14, R15                    # update_end_index:68                MOV `tmp_value, `tmp_0
Xx_5474: CMOVE R14, RCX                  # update_end_index:69                CMOVE `tmp_value, `tmp_8
Xx_5475: CMP R10, RAX                    # update_end_index:73                CMP `end_index, `addr_base
Xx_5476: CMOVE R14, R15                  # update_end_index:74                CMOVE `tmp_value, `tmp_0
Xx_5477: SUB R10, R14                    # update_end_index:78                SUB `end_index, `tmp_value
Xx_5478: CMP R14, R15                    # update_end_index:82                CMP `tmp_value, `tmp_0
Xx_5479: JNE _label_47                   # update_end_index:83                JNE _label_47
Xx_5480: SUB R10, RAX                    # update_end_index:88                SUB `end_index, `addr_base
Xx_5481: SHR R10, 3                      # update_end_index:89                SHR `end_index, 3
Xx_5482: MOV [RSP+-0x3b0], R10           # gcd_unsigned:666                   MOV `spill_a_end_index, `a_head_start
Xx_5483: XOR RBP, RBP                    # gcd_unsigned:670                   XOR `is_lehmer, `is_lehmer
Xx_5484: CMP R10, 2                      # gcd_unsigned:671                   CMP `a_head_start, 2
Xx_5485: SETAE BPL                       # gcd_unsigned:672                   SETAE `is_lehmer_8
Xx_5486: MOV [RSP+-0x380], RBP           # gcd_unsigned:673                   MOV `spill_is_lehmer, `is_lehmer
Xx_5487: XOR R14, R14                    # calculate_head_start:103           XOR `tmp, `tmp
Xx_5488: SUB R10, 2                      # calculate_head_start:104           SUB `end_index, 2
Xx_5489: CMOVB R10, R14                  # calculate_head_start:105           CMOVB `end_index, `tmp
Xx_5490: LEA R14, [RAX+R10*8+0x0]        # extract_head_at:122                LEA `tmp_addr, [`addr_base+`head_start*8+0x0]
Xx_5491: MOV RSI, [R14]                  # extract_head_at:123                MOV `res_0, [`tmp_addr]
Xx_5492: MOV RDI, [R14+8]                # extract_head_at:124                MOV `res_1, [`tmp_addr+8]
Xx_5493: MOV R13, [R14+16]               # extract_head_at:125                MOV `res_2, [`tmp_addr+16]
Xx_5494: BSR R11, R13                    # calculate_shift_amount:308         BSR `res, `limbs_2
Xx_5495: INC R11                         # calculate_shift_amount:309         INC `res
Xx_5496: XOR R14, R14                    # calculate_shift_amount:313         XOR `tmp, `tmp
Xx_5497: CMP R13, R14                    # calculate_shift_amount:314         CMP `limbs_2, `tmp
Xx_5498: CMOVE R11, R14                  # calculate_shift_amount:315         CMOVE `res, `tmp
Xx_5499: MOV RCX, R11                    # shift_right:330                    MOV RCX, `amount
Xx_5500: SHRD RSI, RDI, CL               # shift_right:334                    SHRD `limbs_0, `limbs_1, CL
Xx_5501: SHRD RDI, R13, CL               # shift_right:338                    SHRD `limbs_1, `limbs_2, CL
Xx_5502: CMP R11, 64                     # shift_right:340                    CMP `amount, 64
Xx_5503: CMOVE RSI, RDI                  # shift_right:341                    CMOVE `limbs_0, `limbs_1
Xx_5504: CMOVE RDI, R13                  # shift_right:342                    CMOVE `limbs_1, `limbs_2
Xx_5505: LEA R14, [RDX+R10*8+0x0]        # extract_head_at:122                LEA `tmp_addr, [`addr_base+`head_start*8+0x0]
Xx_5506: MOV R8, [R14]                   # extract_head_at:123                MOV `res_0, [`tmp_addr]
Xx_5507: MOV R9, [R14+8]                 # extract_head_at:124                MOV `res_1, [`tmp_addr+8]
Xx_5508: MOV R12, [R14+16]               # extract_head_at:125                MOV `res_2, [`tmp_addr+16]
Xx_5509: MOV RCX, R11                    # shift_right:330                    MOV RCX, `amount
Xx_5510: SHRD R8, R9, CL                 # shift_right:334                    SHRD `limbs_0, `limbs_1, CL
Xx_5511: SHRD R9, R12, CL                # shift_right:338                    SHRD `limbs_1, `limbs_2, CL
Xx_5512: CMP R11, 64                     # shift_right:340                    CMP `amount, 64
Xx_5513: CMOVE R8, R9                    # shift_right:341                    CMOVE `limbs_0, `limbs_1
Xx_5514: CMOVE R9, R12                   # shift_right:342                    CMOVE `limbs_1, `limbs_2
Xx_5515: MOV [RSP+-0x378], RSI           # gcd_unsigned:684                   MOV `spill_a_128, `a_head_0
Xx_5516: MOV [RSP+-0x370], RDI           # gcd_unsigned:685                   MOV `spill_a_128_8, `a_head_1
Xx_5517: MOV [RSP+-0x368], R8            # gcd_unsigned:687                   MOV `spill_b_128, `b_head_0
Xx_5518: MOV [RSP+-0x360], R9            # gcd_unsigned:688                   MOV `spill_b_128_8, `b_head_1
Xx_5519: MOV RAX, [RSP+-0x3d8]           # gcd_unsigned:707                   MOV `addr_threshold, `spill_threshold_addr_base
Xx_5520: LEA R15, [RAX+R10*8+0x0]        # extract_head_at:122                LEA `tmp_addr, [`addr_base+`head_start*8+0x0]
Xx_5521: MOV RDX, [R15]                  # extract_head_at:123                MOV `res_0, [`tmp_addr]
Xx_5522: MOV R13, [R15+8]                # extract_head_at:124                MOV `res_1, [`tmp_addr+8]
Xx_5523: MOV R14, [R15+16]               # extract_head_at:125                MOV `res_2, [`tmp_addr+16]
Xx_5524: MOV RCX, R11                    # shift_right:330                    MOV RCX, `amount
Xx_5525: SHRD RDX, R13, CL               # shift_right:334                    SHRD `limbs_0, `limbs_1, CL
Xx_5526: SHRD R13, R14, CL               # shift_right:338                    SHRD `limbs_1, `limbs_2, CL
Xx_5527: CMP R11, 64                     # shift_right:340                    CMP `amount, 64
Xx_5528: CMOVE RDX, R13                  # shift_right:341                    CMOVE `limbs_0, `limbs_1
Xx_5529: CMOVE R13, R14                  # shift_right:342                    CMOVE `limbs_1, `limbs_2
Xx_5530: MOV [RSP+-0x358], RDX           # gcd_unsigned:716                   MOV `spill_threshold_128, `threshold_head_0
Xx_5531: MOV [RSP+-0x350], R13           # gcd_unsigned:717                   MOV `spill_threshold_128_8, `threshold_head_1
Xx_5532: MOV RAX, RDX                    # gcd_unsigned:720                   MOV `addr_threshold, `threshold_head_0
Xx_5533: MOV R14, R13                    # gcd_unsigned:721                   MOV `threshold_head_2, `threshold_head_1
Xx_5534: SUB RAX, RSI                    # gcd_unsigned:722                   SUB `addr_threshold, `a_head_0
Xx_5535: SBB R14, RDI                    # gcd_unsigned:723                   SBB `threshold_head_2, `a_head_1
Xx_5536: JNC label_error_2               # gcd_unsigned:724                   JNC label_error_2
Xx_5537: XOR R12, R12                    # gcd_unsigned:727                   XOR `exit_flag, `exit_flag
Xx_5538: SUB RDX, R8                     # gcd_unsigned:728                   SUB `threshold_head_0, `b_head_0
Xx_5539: SBB R13, R9                     # gcd_unsigned:729                   SBB `threshold_head_1, `b_head_1
Xx_5540: SETNC R12B                      # gcd_unsigned:730                   SETNC `exit_flag_8
Xx_5541: OR RDX, R13                     # gcd_unsigned:733                   OR `threshold_head_0, `threshold_head_1
Xx_5542: DEC RBP                         # gcd_unsigned:734                   DEC `is_lehmer
Xx_5543: OR RDX, RBP                     # gcd_unsigned:735                   OR `threshold_head_0, `is_lehmer
Xx_5544: JZ label_error_3                # gcd_unsigned:736                   JZ label_error_3
Xx_5545: MOV R13, RBX                    # gcd_unsigned:751                   MOV `out_uv_addr, `iter
Xx_5546: SHL R13, 6                      # gcd_unsigned:752                   SHL `out_uv_addr, 6
Xx_5547: ADD R13, [RSP+-0x3c0]           # gcd_unsigned:753                   ADD `out_uv_addr, `spill_out_uv_addr
Xx_5548: MOV R14, [RSP+-0x3a8]           # gcd_unsigned:755                   MOV `tmp, `spill_u_0
Xx_5549: MOV [R13], R14                  # gcd_unsigned:756                   MOV [`out_uv_addr], `tmp
Xx_5550: MOV R14, [RSP+-0x3a0]           # gcd_unsigned:758                   MOV `tmp, `spill_u_1
Xx_5551: MOV [R13+8], R14                # gcd_unsigned:759                   MOV [`out_uv_addr+8], `tmp
Xx_5552: MOV R14, [RSP+-0x398]           # gcd_unsigned:761                   MOV `tmp, `spill_v_0
Xx_5553: MOV [R13+16], R14               # gcd_unsigned:762                   MOV [`out_uv_addr+16], `tmp
Xx_5554: MOV R14, [RSP+-0x390]           # gcd_unsigned:764                   MOV `tmp, `spill_v_1
Xx_5555: MOV [R13+24], R14               # gcd_unsigned:765                   MOV [`out_uv_addr+24], `tmp
Xx_5556: MOV R14, [RSP+-0x388]           # gcd_unsigned:767                   MOV `tmp, `spill_parity
Xx_5557: MOV [R13+32], R14               # gcd_unsigned:768                   MOV [`out_uv_addr+32], `tmp
Xx_5558: MOV [R13+40], R12               # gcd_unsigned:770                   MOV [`out_uv_addr+40], `exit_flag
Xx_5559: MOV R14, [RSP+-0x3d0]           # gcd_unsigned:775                   MOV `tmp, `spill_uv_counter_start
Xx_5560: ADD R14, RBX                    # gcd_unsigned:776                   ADD `tmp, `iter
Xx_5561: MOV R13, [RSP+-0x3c8]           # gcd_unsigned:777                   MOV `out_uv_addr, `spill_out_uv_counter_addr
Xx_5562: MOV [R13], R14                  # gcd_unsigned:778                   MOV [`out_uv_addr], `tmp
Xx_5563: INC RBX                         # gcd_unsigned:780                   INC `iter
Xx_5564: MOV [RSP+-0x3b8], RBX           # gcd_unsigned:781                   MOV `spill_iter, `iter
Xx_5565: CMP R12, 0                      # gcd_unsigned:783                   CMP `exit_flag, 0
Xx_5566: JNE _label_33                   # gcd_unsigned:784                   JNE _label_33
Xx_5567: CMP RBX, 0x28                   # gcd_unsigned:786                   CMP `iter, 0x28
Xx_5568: JGE label_error_4               # gcd_unsigned:787                   JGE label_error_4
Xx_5569: JMP _label_32                   # gcd_unsigned:790                   JMP _label_32
Xx_5570: _label_33:                      # gcd_unsigned:792                   _label_33:
Xx_5571: MOV RBP, [RSP+-0x400]           # compile_asm_gcd_unsigned:228       MOV `data_addr, `spill_data_addr
Xx_5572: MOV RBX, [RSP+-0x3f8]           # compile_asm_gcd_unsigned:231       MOV `tmp, [RSP+-0x3f8]
Xx_5573: MOV [RBP+0x0], RBX              # compile_asm_gcd_unsigned:232       MOV [`data_addr+0x0], `tmp
Xx_5574: MOV RBX, [RSP+-0x3f0]           # compile_asm_gcd_unsigned:231       MOV `tmp, [RSP+-0x3f0]
Xx_5575: MOV [RBP+0x8], RBX              # compile_asm_gcd_unsigned:232       MOV [`data_addr+0x8], `tmp
Xx_5576: MOV RBX, [RSP+-0x3e8]           # compile_asm_gcd_unsigned:231       MOV `tmp, [RSP+-0x3e8]
Xx_5577: MOV [RBP+0x10], RBX             # compile_asm_gcd_unsigned:232       MOV [`data_addr+0x10], `tmp
Xx_5578: MOV RBX, [RSP+-0x3e0]           # compile_asm_gcd_unsigned:231       MOV `tmp, [RSP+-0x3e0]
Xx_5579: MOV [RBP+0x18], RBX             # compile_asm_gcd_unsigned:232       MOV [`data_addr+0x18], `tmp
Xx_5580: MOV RBX, [RSP+-0x3d8]           # compile_asm_gcd_unsigned:231       MOV `tmp, [RSP+-0x3d8]
Xx_5581: MOV [RBP+0x20], RBX             # compile_asm_gcd_unsigned:232       MOV [`data_addr+0x20], `tmp
Xx_5582: MOV RBX, [RSP+-0x3d0]           # compile_asm_gcd_unsigned:231       MOV `tmp, [RSP+-0x3d0]
Xx_5583: MOV [RBP+0x28], RBX             # compile_asm_gcd_unsigned:232       MOV [`data_addr+0x28], `tmp
Xx_5584: MOV RBX, [RSP+-0x3c8]           # compile_asm_gcd_unsigned:231       MOV `tmp, [RSP+-0x3c8]
Xx_5585: MOV [RBP+0x30], RBX             # compile_asm_gcd_unsigned:232       MOV [`data_addr+0x30], `tmp
Xx_5586: MOV RBX, [RSP+-0x3c0]           # compile_asm_gcd_unsigned:231       MOV `tmp, [RSP+-0x3c0]
Xx_5587: MOV [RBP+0x38], RBX             # compile_asm_gcd_unsigned:232       MOV [`data_addr+0x38], `tmp
Xx_5588: MOV RBX, [RSP+-0x3b8]           # compile_asm_gcd_unsigned:231       MOV `tmp, [RSP+-0x3b8]
Xx_5589: MOV [RBP+0x40], RBX             # compile_asm_gcd_unsigned:232       MOV [`data_addr+0x40], `tmp
Xx_5590: MOV RBX, [RSP+-0x3b0]           # compile_asm_gcd_unsigned:231       MOV `tmp, [RSP+-0x3b0]
Xx_5591: MOV [RBP+0x48], RBX             # compile_asm_gcd_unsigned:232       MOV [`data_addr+0x48], `tmp
Xx_5592: MOV RAX, 0                      # ~asm_function:107                  MOV RAX, 0
Xx_5593: _label_48:                      # ~asm_function:110                  _label_48:
Xx_5594: MOV RSP, [RSP]                  # ~asm_function:112                  MOV RSP, [RSP]
Xx_5595: POP R15                         # ~asm_function:114                  POP R15
Xx_5596: POP R14                         # ~asm_function:114                  POP R14
Xx_5597: POP R13                         # ~asm_function:114                  POP R13
Xx_5598: POP R12                         # ~asm_function:114                  POP R12
Xx_5599: POP RBX                         # ~asm_function:114                  POP RBX
Xx_5600: POP RBP                         # ~asm_function:114                  POP RBP
Xx_5601: RET                             # ~asm_function:116                  RET
Xx_5602: label_error_1:                  # ~asm_function:119                  label_error_1:
Xx_5603: MOV RAX, 0x1                    # ~asm_function:122                  MOV RAX, 0x1
Xx_5604: JMP _label_48                   # ~asm_function:123                  JMP _label_48
Xx_5605: label_error_2:                  # ~asm_function:119                  label_error_2:
Xx_5606: MOV RAX, 0x2                    # ~asm_function:122                  MOV RAX, 0x2
Xx_5607: JMP _label_48                   # ~asm_function:123                  JMP _label_48
Xx_5608: label_error_3:                  # ~asm_function:119                  label_error_3:
Xx_5609: MOV RAX, 0x3                    # ~asm_function:122                  MOV RAX, 0x3
Xx_5610: JMP _label_48                   # ~asm_function:123                  JMP _label_48
Xx_5611: label_error_4:                  # ~asm_function:119                  label_error_4:
Xx_5612: MOV RAX, 0x4                    # ~asm_function:122                  MOV RAX, 0x4
Xx_5613: JMP _label_48                   # ~asm_function:123                  JMP _label_48
